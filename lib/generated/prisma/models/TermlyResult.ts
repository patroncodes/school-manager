
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `TermlyResult` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model TermlyResult
 * 
 */
export type TermlyResultModel = runtime.Types.Result.DefaultSelection<Prisma.$TermlyResultPayload>

export type AggregateTermlyResult = {
  _count: TermlyResultCountAggregateOutputType | null
  _avg: TermlyResultAvgAggregateOutputType | null
  _sum: TermlyResultSumAggregateOutputType | null
  _min: TermlyResultMinAggregateOutputType | null
  _max: TermlyResultMaxAggregateOutputType | null
}

export type TermlyResultAvgAggregateOutputType = {
  average: number | null
  position: number | null
}

export type TermlyResultSumAggregateOutputType = {
  average: number | null
  position: number | null
}

export type TermlyResultMinAggregateOutputType = {
  id: string | null
  average: number | null
  position: number | null
  remarks: string | null
  behavior: string | null
  schoolId: string | null
  termId: string | null
  studentId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type TermlyResultMaxAggregateOutputType = {
  id: string | null
  average: number | null
  position: number | null
  remarks: string | null
  behavior: string | null
  schoolId: string | null
  termId: string | null
  studentId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type TermlyResultCountAggregateOutputType = {
  id: number
  average: number
  position: number
  remarks: number
  behavior: number
  schoolId: number
  termId: number
  studentId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type TermlyResultAvgAggregateInputType = {
  average?: true
  position?: true
}

export type TermlyResultSumAggregateInputType = {
  average?: true
  position?: true
}

export type TermlyResultMinAggregateInputType = {
  id?: true
  average?: true
  position?: true
  remarks?: true
  behavior?: true
  schoolId?: true
  termId?: true
  studentId?: true
  createdAt?: true
  updatedAt?: true
}

export type TermlyResultMaxAggregateInputType = {
  id?: true
  average?: true
  position?: true
  remarks?: true
  behavior?: true
  schoolId?: true
  termId?: true
  studentId?: true
  createdAt?: true
  updatedAt?: true
}

export type TermlyResultCountAggregateInputType = {
  id?: true
  average?: true
  position?: true
  remarks?: true
  behavior?: true
  schoolId?: true
  termId?: true
  studentId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type TermlyResultAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TermlyResult to aggregate.
   */
  where?: Prisma.TermlyResultWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TermlyResults to fetch.
   */
  orderBy?: Prisma.TermlyResultOrderByWithRelationInput | Prisma.TermlyResultOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TermlyResultWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TermlyResults from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TermlyResults.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TermlyResults
  **/
  _count?: true | TermlyResultCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TermlyResultAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TermlyResultSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TermlyResultMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TermlyResultMaxAggregateInputType
}

export type GetTermlyResultAggregateType<T extends TermlyResultAggregateArgs> = {
      [P in keyof T & keyof AggregateTermlyResult]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTermlyResult[P]>
    : Prisma.GetScalarType<T[P], AggregateTermlyResult[P]>
}




export type TermlyResultGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TermlyResultWhereInput
  orderBy?: Prisma.TermlyResultOrderByWithAggregationInput | Prisma.TermlyResultOrderByWithAggregationInput[]
  by: Prisma.TermlyResultScalarFieldEnum[] | Prisma.TermlyResultScalarFieldEnum
  having?: Prisma.TermlyResultScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TermlyResultCountAggregateInputType | true
  _avg?: TermlyResultAvgAggregateInputType
  _sum?: TermlyResultSumAggregateInputType
  _min?: TermlyResultMinAggregateInputType
  _max?: TermlyResultMaxAggregateInputType
}

export type TermlyResultGroupByOutputType = {
  id: string
  average: number
  position: number | null
  remarks: string | null
  behavior: string | null
  schoolId: string
  termId: string
  studentId: string
  createdAt: Date
  updatedAt: Date
  _count: TermlyResultCountAggregateOutputType | null
  _avg: TermlyResultAvgAggregateOutputType | null
  _sum: TermlyResultSumAggregateOutputType | null
  _min: TermlyResultMinAggregateOutputType | null
  _max: TermlyResultMaxAggregateOutputType | null
}

type GetTermlyResultGroupByPayload<T extends TermlyResultGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TermlyResultGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TermlyResultGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TermlyResultGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TermlyResultGroupByOutputType[P]>
      }
    >
  >



export type TermlyResultWhereInput = {
  AND?: Prisma.TermlyResultWhereInput | Prisma.TermlyResultWhereInput[]
  OR?: Prisma.TermlyResultWhereInput[]
  NOT?: Prisma.TermlyResultWhereInput | Prisma.TermlyResultWhereInput[]
  id?: Prisma.StringFilter<"TermlyResult"> | string
  average?: Prisma.FloatFilter<"TermlyResult"> | number
  position?: Prisma.IntNullableFilter<"TermlyResult"> | number | null
  remarks?: Prisma.StringNullableFilter<"TermlyResult"> | string | null
  behavior?: Prisma.StringNullableFilter<"TermlyResult"> | string | null
  schoolId?: Prisma.StringFilter<"TermlyResult"> | string
  termId?: Prisma.StringFilter<"TermlyResult"> | string
  studentId?: Prisma.StringFilter<"TermlyResult"> | string
  createdAt?: Prisma.DateTimeFilter<"TermlyResult"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TermlyResult"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  term?: Prisma.XOR<Prisma.TermScalarRelationFilter, Prisma.TermWhereInput>
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
}

export type TermlyResultOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  average?: Prisma.SortOrder
  position?: Prisma.SortOrderInput | Prisma.SortOrder
  remarks?: Prisma.SortOrderInput | Prisma.SortOrder
  behavior?: Prisma.SortOrderInput | Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  school?: Prisma.SchoolOrderByWithRelationInput
  term?: Prisma.TermOrderByWithRelationInput
  student?: Prisma.StudentOrderByWithRelationInput
}

export type TermlyResultWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  termId_studentId?: Prisma.TermlyResultTermIdStudentIdCompoundUniqueInput
  AND?: Prisma.TermlyResultWhereInput | Prisma.TermlyResultWhereInput[]
  OR?: Prisma.TermlyResultWhereInput[]
  NOT?: Prisma.TermlyResultWhereInput | Prisma.TermlyResultWhereInput[]
  average?: Prisma.FloatFilter<"TermlyResult"> | number
  position?: Prisma.IntNullableFilter<"TermlyResult"> | number | null
  remarks?: Prisma.StringNullableFilter<"TermlyResult"> | string | null
  behavior?: Prisma.StringNullableFilter<"TermlyResult"> | string | null
  schoolId?: Prisma.StringFilter<"TermlyResult"> | string
  termId?: Prisma.StringFilter<"TermlyResult"> | string
  studentId?: Prisma.StringFilter<"TermlyResult"> | string
  createdAt?: Prisma.DateTimeFilter<"TermlyResult"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TermlyResult"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  term?: Prisma.XOR<Prisma.TermScalarRelationFilter, Prisma.TermWhereInput>
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
}, "id" | "termId_studentId">

export type TermlyResultOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  average?: Prisma.SortOrder
  position?: Prisma.SortOrderInput | Prisma.SortOrder
  remarks?: Prisma.SortOrderInput | Prisma.SortOrder
  behavior?: Prisma.SortOrderInput | Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.TermlyResultCountOrderByAggregateInput
  _avg?: Prisma.TermlyResultAvgOrderByAggregateInput
  _max?: Prisma.TermlyResultMaxOrderByAggregateInput
  _min?: Prisma.TermlyResultMinOrderByAggregateInput
  _sum?: Prisma.TermlyResultSumOrderByAggregateInput
}

export type TermlyResultScalarWhereWithAggregatesInput = {
  AND?: Prisma.TermlyResultScalarWhereWithAggregatesInput | Prisma.TermlyResultScalarWhereWithAggregatesInput[]
  OR?: Prisma.TermlyResultScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TermlyResultScalarWhereWithAggregatesInput | Prisma.TermlyResultScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"TermlyResult"> | string
  average?: Prisma.FloatWithAggregatesFilter<"TermlyResult"> | number
  position?: Prisma.IntNullableWithAggregatesFilter<"TermlyResult"> | number | null
  remarks?: Prisma.StringNullableWithAggregatesFilter<"TermlyResult"> | string | null
  behavior?: Prisma.StringNullableWithAggregatesFilter<"TermlyResult"> | string | null
  schoolId?: Prisma.StringWithAggregatesFilter<"TermlyResult"> | string
  termId?: Prisma.StringWithAggregatesFilter<"TermlyResult"> | string
  studentId?: Prisma.StringWithAggregatesFilter<"TermlyResult"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"TermlyResult"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"TermlyResult"> | Date | string
}

export type TermlyResultCreateInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutTermlyResultsInput
  term: Prisma.TermCreateNestedOneWithoutTermlyResultsInput
  student: Prisma.StudentCreateNestedOneWithoutTermlyResultsInput
}

export type TermlyResultUncheckedCreateInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  schoolId: string
  termId: string
  studentId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TermlyResultUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutTermlyResultsNestedInput
  term?: Prisma.TermUpdateOneRequiredWithoutTermlyResultsNestedInput
  student?: Prisma.StudentUpdateOneRequiredWithoutTermlyResultsNestedInput
}

export type TermlyResultUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TermlyResultCreateManyInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  schoolId: string
  termId: string
  studentId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TermlyResultUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TermlyResultUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TermlyResultListRelationFilter = {
  every?: Prisma.TermlyResultWhereInput
  some?: Prisma.TermlyResultWhereInput
  none?: Prisma.TermlyResultWhereInput
}

export type TermlyResultOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TermlyResultTermIdStudentIdCompoundUniqueInput = {
  termId: string
  studentId: string
}

export type TermlyResultCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  average?: Prisma.SortOrder
  position?: Prisma.SortOrder
  remarks?: Prisma.SortOrder
  behavior?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TermlyResultAvgOrderByAggregateInput = {
  average?: Prisma.SortOrder
  position?: Prisma.SortOrder
}

export type TermlyResultMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  average?: Prisma.SortOrder
  position?: Prisma.SortOrder
  remarks?: Prisma.SortOrder
  behavior?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TermlyResultMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  average?: Prisma.SortOrder
  position?: Prisma.SortOrder
  remarks?: Prisma.SortOrder
  behavior?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TermlyResultSumOrderByAggregateInput = {
  average?: Prisma.SortOrder
  position?: Prisma.SortOrder
}

export type TermlyResultCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutSchoolInput, Prisma.TermlyResultUncheckedCreateWithoutSchoolInput> | Prisma.TermlyResultCreateWithoutSchoolInput[] | Prisma.TermlyResultUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutSchoolInput | Prisma.TermlyResultCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.TermlyResultCreateManySchoolInputEnvelope
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
}

export type TermlyResultUncheckedCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutSchoolInput, Prisma.TermlyResultUncheckedCreateWithoutSchoolInput> | Prisma.TermlyResultCreateWithoutSchoolInput[] | Prisma.TermlyResultUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutSchoolInput | Prisma.TermlyResultCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.TermlyResultCreateManySchoolInputEnvelope
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
}

export type TermlyResultUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutSchoolInput, Prisma.TermlyResultUncheckedCreateWithoutSchoolInput> | Prisma.TermlyResultCreateWithoutSchoolInput[] | Prisma.TermlyResultUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutSchoolInput | Prisma.TermlyResultCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.TermlyResultUpsertWithWhereUniqueWithoutSchoolInput | Prisma.TermlyResultUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.TermlyResultCreateManySchoolInputEnvelope
  set?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  disconnect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  delete?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  update?: Prisma.TermlyResultUpdateWithWhereUniqueWithoutSchoolInput | Prisma.TermlyResultUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.TermlyResultUpdateManyWithWhereWithoutSchoolInput | Prisma.TermlyResultUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.TermlyResultScalarWhereInput | Prisma.TermlyResultScalarWhereInput[]
}

export type TermlyResultUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutSchoolInput, Prisma.TermlyResultUncheckedCreateWithoutSchoolInput> | Prisma.TermlyResultCreateWithoutSchoolInput[] | Prisma.TermlyResultUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutSchoolInput | Prisma.TermlyResultCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.TermlyResultUpsertWithWhereUniqueWithoutSchoolInput | Prisma.TermlyResultUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.TermlyResultCreateManySchoolInputEnvelope
  set?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  disconnect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  delete?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  update?: Prisma.TermlyResultUpdateWithWhereUniqueWithoutSchoolInput | Prisma.TermlyResultUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.TermlyResultUpdateManyWithWhereWithoutSchoolInput | Prisma.TermlyResultUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.TermlyResultScalarWhereInput | Prisma.TermlyResultScalarWhereInput[]
}

export type TermlyResultCreateNestedManyWithoutTermInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutTermInput, Prisma.TermlyResultUncheckedCreateWithoutTermInput> | Prisma.TermlyResultCreateWithoutTermInput[] | Prisma.TermlyResultUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutTermInput | Prisma.TermlyResultCreateOrConnectWithoutTermInput[]
  createMany?: Prisma.TermlyResultCreateManyTermInputEnvelope
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
}

export type TermlyResultUncheckedCreateNestedManyWithoutTermInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutTermInput, Prisma.TermlyResultUncheckedCreateWithoutTermInput> | Prisma.TermlyResultCreateWithoutTermInput[] | Prisma.TermlyResultUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutTermInput | Prisma.TermlyResultCreateOrConnectWithoutTermInput[]
  createMany?: Prisma.TermlyResultCreateManyTermInputEnvelope
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
}

export type TermlyResultUpdateManyWithoutTermNestedInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutTermInput, Prisma.TermlyResultUncheckedCreateWithoutTermInput> | Prisma.TermlyResultCreateWithoutTermInput[] | Prisma.TermlyResultUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutTermInput | Prisma.TermlyResultCreateOrConnectWithoutTermInput[]
  upsert?: Prisma.TermlyResultUpsertWithWhereUniqueWithoutTermInput | Prisma.TermlyResultUpsertWithWhereUniqueWithoutTermInput[]
  createMany?: Prisma.TermlyResultCreateManyTermInputEnvelope
  set?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  disconnect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  delete?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  update?: Prisma.TermlyResultUpdateWithWhereUniqueWithoutTermInput | Prisma.TermlyResultUpdateWithWhereUniqueWithoutTermInput[]
  updateMany?: Prisma.TermlyResultUpdateManyWithWhereWithoutTermInput | Prisma.TermlyResultUpdateManyWithWhereWithoutTermInput[]
  deleteMany?: Prisma.TermlyResultScalarWhereInput | Prisma.TermlyResultScalarWhereInput[]
}

export type TermlyResultUncheckedUpdateManyWithoutTermNestedInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutTermInput, Prisma.TermlyResultUncheckedCreateWithoutTermInput> | Prisma.TermlyResultCreateWithoutTermInput[] | Prisma.TermlyResultUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutTermInput | Prisma.TermlyResultCreateOrConnectWithoutTermInput[]
  upsert?: Prisma.TermlyResultUpsertWithWhereUniqueWithoutTermInput | Prisma.TermlyResultUpsertWithWhereUniqueWithoutTermInput[]
  createMany?: Prisma.TermlyResultCreateManyTermInputEnvelope
  set?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  disconnect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  delete?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  update?: Prisma.TermlyResultUpdateWithWhereUniqueWithoutTermInput | Prisma.TermlyResultUpdateWithWhereUniqueWithoutTermInput[]
  updateMany?: Prisma.TermlyResultUpdateManyWithWhereWithoutTermInput | Prisma.TermlyResultUpdateManyWithWhereWithoutTermInput[]
  deleteMany?: Prisma.TermlyResultScalarWhereInput | Prisma.TermlyResultScalarWhereInput[]
}

export type TermlyResultCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutStudentInput, Prisma.TermlyResultUncheckedCreateWithoutStudentInput> | Prisma.TermlyResultCreateWithoutStudentInput[] | Prisma.TermlyResultUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutStudentInput | Prisma.TermlyResultCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.TermlyResultCreateManyStudentInputEnvelope
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
}

export type TermlyResultUncheckedCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutStudentInput, Prisma.TermlyResultUncheckedCreateWithoutStudentInput> | Prisma.TermlyResultCreateWithoutStudentInput[] | Prisma.TermlyResultUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutStudentInput | Prisma.TermlyResultCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.TermlyResultCreateManyStudentInputEnvelope
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
}

export type TermlyResultUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutStudentInput, Prisma.TermlyResultUncheckedCreateWithoutStudentInput> | Prisma.TermlyResultCreateWithoutStudentInput[] | Prisma.TermlyResultUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutStudentInput | Prisma.TermlyResultCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.TermlyResultUpsertWithWhereUniqueWithoutStudentInput | Prisma.TermlyResultUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.TermlyResultCreateManyStudentInputEnvelope
  set?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  disconnect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  delete?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  update?: Prisma.TermlyResultUpdateWithWhereUniqueWithoutStudentInput | Prisma.TermlyResultUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.TermlyResultUpdateManyWithWhereWithoutStudentInput | Prisma.TermlyResultUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.TermlyResultScalarWhereInput | Prisma.TermlyResultScalarWhereInput[]
}

export type TermlyResultUncheckedUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.TermlyResultCreateWithoutStudentInput, Prisma.TermlyResultUncheckedCreateWithoutStudentInput> | Prisma.TermlyResultCreateWithoutStudentInput[] | Prisma.TermlyResultUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.TermlyResultCreateOrConnectWithoutStudentInput | Prisma.TermlyResultCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.TermlyResultUpsertWithWhereUniqueWithoutStudentInput | Prisma.TermlyResultUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.TermlyResultCreateManyStudentInputEnvelope
  set?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  disconnect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  delete?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  connect?: Prisma.TermlyResultWhereUniqueInput | Prisma.TermlyResultWhereUniqueInput[]
  update?: Prisma.TermlyResultUpdateWithWhereUniqueWithoutStudentInput | Prisma.TermlyResultUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.TermlyResultUpdateManyWithWhereWithoutStudentInput | Prisma.TermlyResultUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.TermlyResultScalarWhereInput | Prisma.TermlyResultScalarWhereInput[]
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type TermlyResultCreateWithoutSchoolInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  term: Prisma.TermCreateNestedOneWithoutTermlyResultsInput
  student: Prisma.StudentCreateNestedOneWithoutTermlyResultsInput
}

export type TermlyResultUncheckedCreateWithoutSchoolInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  termId: string
  studentId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TermlyResultCreateOrConnectWithoutSchoolInput = {
  where: Prisma.TermlyResultWhereUniqueInput
  create: Prisma.XOR<Prisma.TermlyResultCreateWithoutSchoolInput, Prisma.TermlyResultUncheckedCreateWithoutSchoolInput>
}

export type TermlyResultCreateManySchoolInputEnvelope = {
  data: Prisma.TermlyResultCreateManySchoolInput | Prisma.TermlyResultCreateManySchoolInput[]
  skipDuplicates?: boolean
}

export type TermlyResultUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.TermlyResultWhereUniqueInput
  update: Prisma.XOR<Prisma.TermlyResultUpdateWithoutSchoolInput, Prisma.TermlyResultUncheckedUpdateWithoutSchoolInput>
  create: Prisma.XOR<Prisma.TermlyResultCreateWithoutSchoolInput, Prisma.TermlyResultUncheckedCreateWithoutSchoolInput>
}

export type TermlyResultUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.TermlyResultWhereUniqueInput
  data: Prisma.XOR<Prisma.TermlyResultUpdateWithoutSchoolInput, Prisma.TermlyResultUncheckedUpdateWithoutSchoolInput>
}

export type TermlyResultUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.TermlyResultScalarWhereInput
  data: Prisma.XOR<Prisma.TermlyResultUpdateManyMutationInput, Prisma.TermlyResultUncheckedUpdateManyWithoutSchoolInput>
}

export type TermlyResultScalarWhereInput = {
  AND?: Prisma.TermlyResultScalarWhereInput | Prisma.TermlyResultScalarWhereInput[]
  OR?: Prisma.TermlyResultScalarWhereInput[]
  NOT?: Prisma.TermlyResultScalarWhereInput | Prisma.TermlyResultScalarWhereInput[]
  id?: Prisma.StringFilter<"TermlyResult"> | string
  average?: Prisma.FloatFilter<"TermlyResult"> | number
  position?: Prisma.IntNullableFilter<"TermlyResult"> | number | null
  remarks?: Prisma.StringNullableFilter<"TermlyResult"> | string | null
  behavior?: Prisma.StringNullableFilter<"TermlyResult"> | string | null
  schoolId?: Prisma.StringFilter<"TermlyResult"> | string
  termId?: Prisma.StringFilter<"TermlyResult"> | string
  studentId?: Prisma.StringFilter<"TermlyResult"> | string
  createdAt?: Prisma.DateTimeFilter<"TermlyResult"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TermlyResult"> | Date | string
}

export type TermlyResultCreateWithoutTermInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutTermlyResultsInput
  student: Prisma.StudentCreateNestedOneWithoutTermlyResultsInput
}

export type TermlyResultUncheckedCreateWithoutTermInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  schoolId: string
  studentId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TermlyResultCreateOrConnectWithoutTermInput = {
  where: Prisma.TermlyResultWhereUniqueInput
  create: Prisma.XOR<Prisma.TermlyResultCreateWithoutTermInput, Prisma.TermlyResultUncheckedCreateWithoutTermInput>
}

export type TermlyResultCreateManyTermInputEnvelope = {
  data: Prisma.TermlyResultCreateManyTermInput | Prisma.TermlyResultCreateManyTermInput[]
  skipDuplicates?: boolean
}

export type TermlyResultUpsertWithWhereUniqueWithoutTermInput = {
  where: Prisma.TermlyResultWhereUniqueInput
  update: Prisma.XOR<Prisma.TermlyResultUpdateWithoutTermInput, Prisma.TermlyResultUncheckedUpdateWithoutTermInput>
  create: Prisma.XOR<Prisma.TermlyResultCreateWithoutTermInput, Prisma.TermlyResultUncheckedCreateWithoutTermInput>
}

export type TermlyResultUpdateWithWhereUniqueWithoutTermInput = {
  where: Prisma.TermlyResultWhereUniqueInput
  data: Prisma.XOR<Prisma.TermlyResultUpdateWithoutTermInput, Prisma.TermlyResultUncheckedUpdateWithoutTermInput>
}

export type TermlyResultUpdateManyWithWhereWithoutTermInput = {
  where: Prisma.TermlyResultScalarWhereInput
  data: Prisma.XOR<Prisma.TermlyResultUpdateManyMutationInput, Prisma.TermlyResultUncheckedUpdateManyWithoutTermInput>
}

export type TermlyResultCreateWithoutStudentInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutTermlyResultsInput
  term: Prisma.TermCreateNestedOneWithoutTermlyResultsInput
}

export type TermlyResultUncheckedCreateWithoutStudentInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  schoolId: string
  termId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TermlyResultCreateOrConnectWithoutStudentInput = {
  where: Prisma.TermlyResultWhereUniqueInput
  create: Prisma.XOR<Prisma.TermlyResultCreateWithoutStudentInput, Prisma.TermlyResultUncheckedCreateWithoutStudentInput>
}

export type TermlyResultCreateManyStudentInputEnvelope = {
  data: Prisma.TermlyResultCreateManyStudentInput | Prisma.TermlyResultCreateManyStudentInput[]
  skipDuplicates?: boolean
}

export type TermlyResultUpsertWithWhereUniqueWithoutStudentInput = {
  where: Prisma.TermlyResultWhereUniqueInput
  update: Prisma.XOR<Prisma.TermlyResultUpdateWithoutStudentInput, Prisma.TermlyResultUncheckedUpdateWithoutStudentInput>
  create: Prisma.XOR<Prisma.TermlyResultCreateWithoutStudentInput, Prisma.TermlyResultUncheckedCreateWithoutStudentInput>
}

export type TermlyResultUpdateWithWhereUniqueWithoutStudentInput = {
  where: Prisma.TermlyResultWhereUniqueInput
  data: Prisma.XOR<Prisma.TermlyResultUpdateWithoutStudentInput, Prisma.TermlyResultUncheckedUpdateWithoutStudentInput>
}

export type TermlyResultUpdateManyWithWhereWithoutStudentInput = {
  where: Prisma.TermlyResultScalarWhereInput
  data: Prisma.XOR<Prisma.TermlyResultUpdateManyMutationInput, Prisma.TermlyResultUncheckedUpdateManyWithoutStudentInput>
}

export type TermlyResultCreateManySchoolInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  termId: string
  studentId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TermlyResultUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  term?: Prisma.TermUpdateOneRequiredWithoutTermlyResultsNestedInput
  student?: Prisma.StudentUpdateOneRequiredWithoutTermlyResultsNestedInput
}

export type TermlyResultUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TermlyResultUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TermlyResultCreateManyTermInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  schoolId: string
  studentId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TermlyResultUpdateWithoutTermInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutTermlyResultsNestedInput
  student?: Prisma.StudentUpdateOneRequiredWithoutTermlyResultsNestedInput
}

export type TermlyResultUncheckedUpdateWithoutTermInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TermlyResultUncheckedUpdateManyWithoutTermInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TermlyResultCreateManyStudentInput = {
  id?: string
  average: number
  position?: number | null
  remarks?: string | null
  behavior?: string | null
  schoolId: string
  termId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TermlyResultUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutTermlyResultsNestedInput
  term?: Prisma.TermUpdateOneRequiredWithoutTermlyResultsNestedInput
}

export type TermlyResultUncheckedUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TermlyResultUncheckedUpdateManyWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  average?: Prisma.FloatFieldUpdateOperationsInput | number
  position?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  remarks?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  behavior?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type TermlyResultSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  average?: boolean
  position?: boolean
  remarks?: boolean
  behavior?: boolean
  schoolId?: boolean
  termId?: boolean
  studentId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["termlyResult"]>

export type TermlyResultSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  average?: boolean
  position?: boolean
  remarks?: boolean
  behavior?: boolean
  schoolId?: boolean
  termId?: boolean
  studentId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["termlyResult"]>

export type TermlyResultSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  average?: boolean
  position?: boolean
  remarks?: boolean
  behavior?: boolean
  schoolId?: boolean
  termId?: boolean
  studentId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["termlyResult"]>

export type TermlyResultSelectScalar = {
  id?: boolean
  average?: boolean
  position?: boolean
  remarks?: boolean
  behavior?: boolean
  schoolId?: boolean
  termId?: boolean
  studentId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type TermlyResultOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "average" | "position" | "remarks" | "behavior" | "schoolId" | "termId" | "studentId" | "createdAt" | "updatedAt", ExtArgs["result"]["termlyResult"]>
export type TermlyResultInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
}
export type TermlyResultIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
}
export type TermlyResultIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
}

export type $TermlyResultPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TermlyResult"
  objects: {
    school: Prisma.$SchoolPayload<ExtArgs>
    term: Prisma.$TermPayload<ExtArgs>
    student: Prisma.$StudentPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    average: number
    position: number | null
    remarks: string | null
    behavior: string | null
    schoolId: string
    termId: string
    studentId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["termlyResult"]>
  composites: {}
}

export type TermlyResultGetPayload<S extends boolean | null | undefined | TermlyResultDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload, S>

export type TermlyResultCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TermlyResultFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TermlyResultCountAggregateInputType | true
  }

export interface TermlyResultDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TermlyResult'], meta: { name: 'TermlyResult' } }
  /**
   * Find zero or one TermlyResult that matches the filter.
   * @param {TermlyResultFindUniqueArgs} args - Arguments to find a TermlyResult
   * @example
   * // Get one TermlyResult
   * const termlyResult = await prisma.termlyResult.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TermlyResultFindUniqueArgs>(args: Prisma.SelectSubset<T, TermlyResultFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TermlyResultClient<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TermlyResult that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TermlyResultFindUniqueOrThrowArgs} args - Arguments to find a TermlyResult
   * @example
   * // Get one TermlyResult
   * const termlyResult = await prisma.termlyResult.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TermlyResultFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TermlyResultFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TermlyResultClient<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TermlyResult that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TermlyResultFindFirstArgs} args - Arguments to find a TermlyResult
   * @example
   * // Get one TermlyResult
   * const termlyResult = await prisma.termlyResult.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TermlyResultFindFirstArgs>(args?: Prisma.SelectSubset<T, TermlyResultFindFirstArgs<ExtArgs>>): Prisma.Prisma__TermlyResultClient<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TermlyResult that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TermlyResultFindFirstOrThrowArgs} args - Arguments to find a TermlyResult
   * @example
   * // Get one TermlyResult
   * const termlyResult = await prisma.termlyResult.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TermlyResultFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TermlyResultFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TermlyResultClient<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TermlyResults that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TermlyResultFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TermlyResults
   * const termlyResults = await prisma.termlyResult.findMany()
   * 
   * // Get first 10 TermlyResults
   * const termlyResults = await prisma.termlyResult.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const termlyResultWithIdOnly = await prisma.termlyResult.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TermlyResultFindManyArgs>(args?: Prisma.SelectSubset<T, TermlyResultFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TermlyResult.
   * @param {TermlyResultCreateArgs} args - Arguments to create a TermlyResult.
   * @example
   * // Create one TermlyResult
   * const TermlyResult = await prisma.termlyResult.create({
   *   data: {
   *     // ... data to create a TermlyResult
   *   }
   * })
   * 
   */
  create<T extends TermlyResultCreateArgs>(args: Prisma.SelectSubset<T, TermlyResultCreateArgs<ExtArgs>>): Prisma.Prisma__TermlyResultClient<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TermlyResults.
   * @param {TermlyResultCreateManyArgs} args - Arguments to create many TermlyResults.
   * @example
   * // Create many TermlyResults
   * const termlyResult = await prisma.termlyResult.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TermlyResultCreateManyArgs>(args?: Prisma.SelectSubset<T, TermlyResultCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many TermlyResults and returns the data saved in the database.
   * @param {TermlyResultCreateManyAndReturnArgs} args - Arguments to create many TermlyResults.
   * @example
   * // Create many TermlyResults
   * const termlyResult = await prisma.termlyResult.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many TermlyResults and only return the `id`
   * const termlyResultWithIdOnly = await prisma.termlyResult.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TermlyResultCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TermlyResultCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a TermlyResult.
   * @param {TermlyResultDeleteArgs} args - Arguments to delete one TermlyResult.
   * @example
   * // Delete one TermlyResult
   * const TermlyResult = await prisma.termlyResult.delete({
   *   where: {
   *     // ... filter to delete one TermlyResult
   *   }
   * })
   * 
   */
  delete<T extends TermlyResultDeleteArgs>(args: Prisma.SelectSubset<T, TermlyResultDeleteArgs<ExtArgs>>): Prisma.Prisma__TermlyResultClient<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TermlyResult.
   * @param {TermlyResultUpdateArgs} args - Arguments to update one TermlyResult.
   * @example
   * // Update one TermlyResult
   * const termlyResult = await prisma.termlyResult.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TermlyResultUpdateArgs>(args: Prisma.SelectSubset<T, TermlyResultUpdateArgs<ExtArgs>>): Prisma.Prisma__TermlyResultClient<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TermlyResults.
   * @param {TermlyResultDeleteManyArgs} args - Arguments to filter TermlyResults to delete.
   * @example
   * // Delete a few TermlyResults
   * const { count } = await prisma.termlyResult.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TermlyResultDeleteManyArgs>(args?: Prisma.SelectSubset<T, TermlyResultDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TermlyResults.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TermlyResultUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TermlyResults
   * const termlyResult = await prisma.termlyResult.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TermlyResultUpdateManyArgs>(args: Prisma.SelectSubset<T, TermlyResultUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TermlyResults and returns the data updated in the database.
   * @param {TermlyResultUpdateManyAndReturnArgs} args - Arguments to update many TermlyResults.
   * @example
   * // Update many TermlyResults
   * const termlyResult = await prisma.termlyResult.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more TermlyResults and only return the `id`
   * const termlyResultWithIdOnly = await prisma.termlyResult.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TermlyResultUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TermlyResultUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one TermlyResult.
   * @param {TermlyResultUpsertArgs} args - Arguments to update or create a TermlyResult.
   * @example
   * // Update or create a TermlyResult
   * const termlyResult = await prisma.termlyResult.upsert({
   *   create: {
   *     // ... data to create a TermlyResult
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TermlyResult we want to update
   *   }
   * })
   */
  upsert<T extends TermlyResultUpsertArgs>(args: Prisma.SelectSubset<T, TermlyResultUpsertArgs<ExtArgs>>): Prisma.Prisma__TermlyResultClient<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TermlyResults.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TermlyResultCountArgs} args - Arguments to filter TermlyResults to count.
   * @example
   * // Count the number of TermlyResults
   * const count = await prisma.termlyResult.count({
   *   where: {
   *     // ... the filter for the TermlyResults we want to count
   *   }
   * })
  **/
  count<T extends TermlyResultCountArgs>(
    args?: Prisma.Subset<T, TermlyResultCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TermlyResultCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TermlyResult.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TermlyResultAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TermlyResultAggregateArgs>(args: Prisma.Subset<T, TermlyResultAggregateArgs>): Prisma.PrismaPromise<GetTermlyResultAggregateType<T>>

  /**
   * Group by TermlyResult.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TermlyResultGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TermlyResultGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TermlyResultGroupByArgs['orderBy'] }
      : { orderBy?: TermlyResultGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TermlyResultGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTermlyResultGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TermlyResult model
 */
readonly fields: TermlyResultFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TermlyResult.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TermlyResultClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>): Prisma.Prisma__SchoolClient<runtime.Types.Result.GetResult<Prisma.$SchoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  term<T extends Prisma.TermDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TermDefaultArgs<ExtArgs>>): Prisma.Prisma__TermClient<runtime.Types.Result.GetResult<Prisma.$TermPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  student<T extends Prisma.StudentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.StudentDefaultArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TermlyResult model
 */
export interface TermlyResultFieldRefs {
  readonly id: Prisma.FieldRef<"TermlyResult", 'String'>
  readonly average: Prisma.FieldRef<"TermlyResult", 'Float'>
  readonly position: Prisma.FieldRef<"TermlyResult", 'Int'>
  readonly remarks: Prisma.FieldRef<"TermlyResult", 'String'>
  readonly behavior: Prisma.FieldRef<"TermlyResult", 'String'>
  readonly schoolId: Prisma.FieldRef<"TermlyResult", 'String'>
  readonly termId: Prisma.FieldRef<"TermlyResult", 'String'>
  readonly studentId: Prisma.FieldRef<"TermlyResult", 'String'>
  readonly createdAt: Prisma.FieldRef<"TermlyResult", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"TermlyResult", 'DateTime'>
}
    

// Custom InputTypes
/**
 * TermlyResult findUnique
 */
export type TermlyResultFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
  /**
   * Filter, which TermlyResult to fetch.
   */
  where: Prisma.TermlyResultWhereUniqueInput
}

/**
 * TermlyResult findUniqueOrThrow
 */
export type TermlyResultFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
  /**
   * Filter, which TermlyResult to fetch.
   */
  where: Prisma.TermlyResultWhereUniqueInput
}

/**
 * TermlyResult findFirst
 */
export type TermlyResultFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
  /**
   * Filter, which TermlyResult to fetch.
   */
  where?: Prisma.TermlyResultWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TermlyResults to fetch.
   */
  orderBy?: Prisma.TermlyResultOrderByWithRelationInput | Prisma.TermlyResultOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TermlyResults.
   */
  cursor?: Prisma.TermlyResultWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TermlyResults from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TermlyResults.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TermlyResults.
   */
  distinct?: Prisma.TermlyResultScalarFieldEnum | Prisma.TermlyResultScalarFieldEnum[]
}

/**
 * TermlyResult findFirstOrThrow
 */
export type TermlyResultFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
  /**
   * Filter, which TermlyResult to fetch.
   */
  where?: Prisma.TermlyResultWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TermlyResults to fetch.
   */
  orderBy?: Prisma.TermlyResultOrderByWithRelationInput | Prisma.TermlyResultOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TermlyResults.
   */
  cursor?: Prisma.TermlyResultWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TermlyResults from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TermlyResults.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TermlyResults.
   */
  distinct?: Prisma.TermlyResultScalarFieldEnum | Prisma.TermlyResultScalarFieldEnum[]
}

/**
 * TermlyResult findMany
 */
export type TermlyResultFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
  /**
   * Filter, which TermlyResults to fetch.
   */
  where?: Prisma.TermlyResultWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TermlyResults to fetch.
   */
  orderBy?: Prisma.TermlyResultOrderByWithRelationInput | Prisma.TermlyResultOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TermlyResults.
   */
  cursor?: Prisma.TermlyResultWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TermlyResults from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TermlyResults.
   */
  skip?: number
  distinct?: Prisma.TermlyResultScalarFieldEnum | Prisma.TermlyResultScalarFieldEnum[]
}

/**
 * TermlyResult create
 */
export type TermlyResultCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
  /**
   * The data needed to create a TermlyResult.
   */
  data: Prisma.XOR<Prisma.TermlyResultCreateInput, Prisma.TermlyResultUncheckedCreateInput>
}

/**
 * TermlyResult createMany
 */
export type TermlyResultCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TermlyResults.
   */
  data: Prisma.TermlyResultCreateManyInput | Prisma.TermlyResultCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TermlyResult createManyAndReturn
 */
export type TermlyResultCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * The data used to create many TermlyResults.
   */
  data: Prisma.TermlyResultCreateManyInput | Prisma.TermlyResultCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * TermlyResult update
 */
export type TermlyResultUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
  /**
   * The data needed to update a TermlyResult.
   */
  data: Prisma.XOR<Prisma.TermlyResultUpdateInput, Prisma.TermlyResultUncheckedUpdateInput>
  /**
   * Choose, which TermlyResult to update.
   */
  where: Prisma.TermlyResultWhereUniqueInput
}

/**
 * TermlyResult updateMany
 */
export type TermlyResultUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TermlyResults.
   */
  data: Prisma.XOR<Prisma.TermlyResultUpdateManyMutationInput, Prisma.TermlyResultUncheckedUpdateManyInput>
  /**
   * Filter which TermlyResults to update
   */
  where?: Prisma.TermlyResultWhereInput
  /**
   * Limit how many TermlyResults to update.
   */
  limit?: number
}

/**
 * TermlyResult updateManyAndReturn
 */
export type TermlyResultUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * The data used to update TermlyResults.
   */
  data: Prisma.XOR<Prisma.TermlyResultUpdateManyMutationInput, Prisma.TermlyResultUncheckedUpdateManyInput>
  /**
   * Filter which TermlyResults to update
   */
  where?: Prisma.TermlyResultWhereInput
  /**
   * Limit how many TermlyResults to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * TermlyResult upsert
 */
export type TermlyResultUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
  /**
   * The filter to search for the TermlyResult to update in case it exists.
   */
  where: Prisma.TermlyResultWhereUniqueInput
  /**
   * In case the TermlyResult found by the `where` argument doesn't exist, create a new TermlyResult with this data.
   */
  create: Prisma.XOR<Prisma.TermlyResultCreateInput, Prisma.TermlyResultUncheckedCreateInput>
  /**
   * In case the TermlyResult was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TermlyResultUpdateInput, Prisma.TermlyResultUncheckedUpdateInput>
}

/**
 * TermlyResult delete
 */
export type TermlyResultDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
  /**
   * Filter which TermlyResult to delete.
   */
  where: Prisma.TermlyResultWhereUniqueInput
}

/**
 * TermlyResult deleteMany
 */
export type TermlyResultDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TermlyResults to delete
   */
  where?: Prisma.TermlyResultWhereInput
  /**
   * Limit how many TermlyResults to delete.
   */
  limit?: number
}

/**
 * TermlyResult without action
 */
export type TermlyResultDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
}
