
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Class` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Class
 * 
 */
export type ClassModel = runtime.Types.Result.DefaultSelection<Prisma.$ClassPayload>

export type AggregateClass = {
  _count: ClassCountAggregateOutputType | null
  _avg: ClassAvgAggregateOutputType | null
  _sum: ClassSumAggregateOutputType | null
  _min: ClassMinAggregateOutputType | null
  _max: ClassMaxAggregateOutputType | null
}

export type ClassAvgAggregateOutputType = {
  capacity: number | null
}

export type ClassSumAggregateOutputType = {
  capacity: number | null
}

export type ClassMinAggregateOutputType = {
  id: string | null
  name: string | null
  capacity: number | null
  schoolId: string | null
  gradeId: string | null
}

export type ClassMaxAggregateOutputType = {
  id: string | null
  name: string | null
  capacity: number | null
  schoolId: string | null
  gradeId: string | null
}

export type ClassCountAggregateOutputType = {
  id: number
  name: number
  capacity: number
  schoolId: number
  gradeId: number
  _all: number
}


export type ClassAvgAggregateInputType = {
  capacity?: true
}

export type ClassSumAggregateInputType = {
  capacity?: true
}

export type ClassMinAggregateInputType = {
  id?: true
  name?: true
  capacity?: true
  schoolId?: true
  gradeId?: true
}

export type ClassMaxAggregateInputType = {
  id?: true
  name?: true
  capacity?: true
  schoolId?: true
  gradeId?: true
}

export type ClassCountAggregateInputType = {
  id?: true
  name?: true
  capacity?: true
  schoolId?: true
  gradeId?: true
  _all?: true
}

export type ClassAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Class to aggregate.
   */
  where?: Prisma.ClassWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Classes to fetch.
   */
  orderBy?: Prisma.ClassOrderByWithRelationInput | Prisma.ClassOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ClassWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Classes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Classes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Classes
  **/
  _count?: true | ClassCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ClassAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ClassSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ClassMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ClassMaxAggregateInputType
}

export type GetClassAggregateType<T extends ClassAggregateArgs> = {
      [P in keyof T & keyof AggregateClass]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateClass[P]>
    : Prisma.GetScalarType<T[P], AggregateClass[P]>
}




export type ClassGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ClassWhereInput
  orderBy?: Prisma.ClassOrderByWithAggregationInput | Prisma.ClassOrderByWithAggregationInput[]
  by: Prisma.ClassScalarFieldEnum[] | Prisma.ClassScalarFieldEnum
  having?: Prisma.ClassScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ClassCountAggregateInputType | true
  _avg?: ClassAvgAggregateInputType
  _sum?: ClassSumAggregateInputType
  _min?: ClassMinAggregateInputType
  _max?: ClassMaxAggregateInputType
}

export type ClassGroupByOutputType = {
  id: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  _count: ClassCountAggregateOutputType | null
  _avg: ClassAvgAggregateOutputType | null
  _sum: ClassSumAggregateOutputType | null
  _min: ClassMinAggregateOutputType | null
  _max: ClassMaxAggregateOutputType | null
}

type GetClassGroupByPayload<T extends ClassGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ClassGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ClassGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ClassGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ClassGroupByOutputType[P]>
      }
    >
  >



export type ClassWhereInput = {
  AND?: Prisma.ClassWhereInput | Prisma.ClassWhereInput[]
  OR?: Prisma.ClassWhereInput[]
  NOT?: Prisma.ClassWhereInput | Prisma.ClassWhereInput[]
  id?: Prisma.StringFilter<"Class"> | string
  name?: Prisma.StringFilter<"Class"> | string
  capacity?: Prisma.IntFilter<"Class"> | number
  schoolId?: Prisma.StringFilter<"Class"> | string
  gradeId?: Prisma.StringFilter<"Class"> | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  grade?: Prisma.XOR<Prisma.GradeScalarRelationFilter, Prisma.GradeWhereInput>
  students?: Prisma.StudentListRelationFilter
  supervisors?: Prisma.StaffListRelationFilter
  assignments?: Prisma.AssignmentListRelationFilter
  attendances?: Prisma.StudentAttendanceListRelationFilter
  timetableAssignments?: Prisma.TimetableAssignmentListRelationFilter
  announcements?: Prisma.AnnouncementListRelationFilter
  invoices?: Prisma.InvoiceListRelationFilter
  studentClassHistory?: Prisma.StudentClassHistoryListRelationFilter
  timetablePeriods?: Prisma.TimetablePeriodListRelationFilter
}

export type ClassOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  capacity?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  gradeId?: Prisma.SortOrder
  school?: Prisma.SchoolOrderByWithRelationInput
  grade?: Prisma.GradeOrderByWithRelationInput
  students?: Prisma.StudentOrderByRelationAggregateInput
  supervisors?: Prisma.StaffOrderByRelationAggregateInput
  assignments?: Prisma.AssignmentOrderByRelationAggregateInput
  attendances?: Prisma.StudentAttendanceOrderByRelationAggregateInput
  timetableAssignments?: Prisma.TimetableAssignmentOrderByRelationAggregateInput
  announcements?: Prisma.AnnouncementOrderByRelationAggregateInput
  invoices?: Prisma.InvoiceOrderByRelationAggregateInput
  studentClassHistory?: Prisma.StudentClassHistoryOrderByRelationAggregateInput
  timetablePeriods?: Prisma.TimetablePeriodOrderByRelationAggregateInput
}

export type ClassWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  schoolId_gradeId_name?: Prisma.ClassSchoolIdGradeIdNameCompoundUniqueInput
  AND?: Prisma.ClassWhereInput | Prisma.ClassWhereInput[]
  OR?: Prisma.ClassWhereInput[]
  NOT?: Prisma.ClassWhereInput | Prisma.ClassWhereInput[]
  name?: Prisma.StringFilter<"Class"> | string
  capacity?: Prisma.IntFilter<"Class"> | number
  schoolId?: Prisma.StringFilter<"Class"> | string
  gradeId?: Prisma.StringFilter<"Class"> | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  grade?: Prisma.XOR<Prisma.GradeScalarRelationFilter, Prisma.GradeWhereInput>
  students?: Prisma.StudentListRelationFilter
  supervisors?: Prisma.StaffListRelationFilter
  assignments?: Prisma.AssignmentListRelationFilter
  attendances?: Prisma.StudentAttendanceListRelationFilter
  timetableAssignments?: Prisma.TimetableAssignmentListRelationFilter
  announcements?: Prisma.AnnouncementListRelationFilter
  invoices?: Prisma.InvoiceListRelationFilter
  studentClassHistory?: Prisma.StudentClassHistoryListRelationFilter
  timetablePeriods?: Prisma.TimetablePeriodListRelationFilter
}, "id" | "schoolId_gradeId_name">

export type ClassOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  capacity?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  gradeId?: Prisma.SortOrder
  _count?: Prisma.ClassCountOrderByAggregateInput
  _avg?: Prisma.ClassAvgOrderByAggregateInput
  _max?: Prisma.ClassMaxOrderByAggregateInput
  _min?: Prisma.ClassMinOrderByAggregateInput
  _sum?: Prisma.ClassSumOrderByAggregateInput
}

export type ClassScalarWhereWithAggregatesInput = {
  AND?: Prisma.ClassScalarWhereWithAggregatesInput | Prisma.ClassScalarWhereWithAggregatesInput[]
  OR?: Prisma.ClassScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ClassScalarWhereWithAggregatesInput | Prisma.ClassScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Class"> | string
  name?: Prisma.StringWithAggregatesFilter<"Class"> | string
  capacity?: Prisma.IntWithAggregatesFilter<"Class"> | number
  schoolId?: Prisma.StringWithAggregatesFilter<"Class"> | string
  gradeId?: Prisma.StringWithAggregatesFilter<"Class"> | string
}

export type ClassCreateInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassCreateManyInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
}

export type ClassUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ClassUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ClassListRelationFilter = {
  every?: Prisma.ClassWhereInput
  some?: Prisma.ClassWhereInput
  none?: Prisma.ClassWhereInput
}

export type ClassOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ClassSchoolIdGradeIdNameCompoundUniqueInput = {
  schoolId: string
  gradeId: string
  name: string
}

export type ClassCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  capacity?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  gradeId?: Prisma.SortOrder
}

export type ClassAvgOrderByAggregateInput = {
  capacity?: Prisma.SortOrder
}

export type ClassMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  capacity?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  gradeId?: Prisma.SortOrder
}

export type ClassMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  capacity?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  gradeId?: Prisma.SortOrder
}

export type ClassSumOrderByAggregateInput = {
  capacity?: Prisma.SortOrder
}

export type ClassNullableScalarRelationFilter = {
  is?: Prisma.ClassWhereInput | null
  isNot?: Prisma.ClassWhereInput | null
}

export type ClassScalarRelationFilter = {
  is?: Prisma.ClassWhereInput
  isNot?: Prisma.ClassWhereInput
}

export type ClassCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutSchoolInput, Prisma.ClassUncheckedCreateWithoutSchoolInput> | Prisma.ClassCreateWithoutSchoolInput[] | Prisma.ClassUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutSchoolInput | Prisma.ClassCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.ClassCreateManySchoolInputEnvelope
  connect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
}

export type ClassUncheckedCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutSchoolInput, Prisma.ClassUncheckedCreateWithoutSchoolInput> | Prisma.ClassCreateWithoutSchoolInput[] | Prisma.ClassUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutSchoolInput | Prisma.ClassCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.ClassCreateManySchoolInputEnvelope
  connect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
}

export type ClassUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutSchoolInput, Prisma.ClassUncheckedCreateWithoutSchoolInput> | Prisma.ClassCreateWithoutSchoolInput[] | Prisma.ClassUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutSchoolInput | Prisma.ClassCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.ClassUpsertWithWhereUniqueWithoutSchoolInput | Prisma.ClassUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.ClassCreateManySchoolInputEnvelope
  set?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  disconnect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  delete?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  connect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  update?: Prisma.ClassUpdateWithWhereUniqueWithoutSchoolInput | Prisma.ClassUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.ClassUpdateManyWithWhereWithoutSchoolInput | Prisma.ClassUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.ClassScalarWhereInput | Prisma.ClassScalarWhereInput[]
}

export type ClassUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutSchoolInput, Prisma.ClassUncheckedCreateWithoutSchoolInput> | Prisma.ClassCreateWithoutSchoolInput[] | Prisma.ClassUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutSchoolInput | Prisma.ClassCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.ClassUpsertWithWhereUniqueWithoutSchoolInput | Prisma.ClassUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.ClassCreateManySchoolInputEnvelope
  set?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  disconnect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  delete?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  connect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  update?: Prisma.ClassUpdateWithWhereUniqueWithoutSchoolInput | Prisma.ClassUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.ClassUpdateManyWithWhereWithoutSchoolInput | Prisma.ClassUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.ClassScalarWhereInput | Prisma.ClassScalarWhereInput[]
}

export type ClassCreateNestedManyWithoutGradeInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutGradeInput, Prisma.ClassUncheckedCreateWithoutGradeInput> | Prisma.ClassCreateWithoutGradeInput[] | Prisma.ClassUncheckedCreateWithoutGradeInput[]
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutGradeInput | Prisma.ClassCreateOrConnectWithoutGradeInput[]
  createMany?: Prisma.ClassCreateManyGradeInputEnvelope
  connect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
}

export type ClassUncheckedCreateNestedManyWithoutGradeInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutGradeInput, Prisma.ClassUncheckedCreateWithoutGradeInput> | Prisma.ClassCreateWithoutGradeInput[] | Prisma.ClassUncheckedCreateWithoutGradeInput[]
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutGradeInput | Prisma.ClassCreateOrConnectWithoutGradeInput[]
  createMany?: Prisma.ClassCreateManyGradeInputEnvelope
  connect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
}

export type ClassUpdateManyWithoutGradeNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutGradeInput, Prisma.ClassUncheckedCreateWithoutGradeInput> | Prisma.ClassCreateWithoutGradeInput[] | Prisma.ClassUncheckedCreateWithoutGradeInput[]
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutGradeInput | Prisma.ClassCreateOrConnectWithoutGradeInput[]
  upsert?: Prisma.ClassUpsertWithWhereUniqueWithoutGradeInput | Prisma.ClassUpsertWithWhereUniqueWithoutGradeInput[]
  createMany?: Prisma.ClassCreateManyGradeInputEnvelope
  set?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  disconnect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  delete?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  connect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  update?: Prisma.ClassUpdateWithWhereUniqueWithoutGradeInput | Prisma.ClassUpdateWithWhereUniqueWithoutGradeInput[]
  updateMany?: Prisma.ClassUpdateManyWithWhereWithoutGradeInput | Prisma.ClassUpdateManyWithWhereWithoutGradeInput[]
  deleteMany?: Prisma.ClassScalarWhereInput | Prisma.ClassScalarWhereInput[]
}

export type ClassUncheckedUpdateManyWithoutGradeNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutGradeInput, Prisma.ClassUncheckedCreateWithoutGradeInput> | Prisma.ClassCreateWithoutGradeInput[] | Prisma.ClassUncheckedCreateWithoutGradeInput[]
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutGradeInput | Prisma.ClassCreateOrConnectWithoutGradeInput[]
  upsert?: Prisma.ClassUpsertWithWhereUniqueWithoutGradeInput | Prisma.ClassUpsertWithWhereUniqueWithoutGradeInput[]
  createMany?: Prisma.ClassCreateManyGradeInputEnvelope
  set?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  disconnect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  delete?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  connect?: Prisma.ClassWhereUniqueInput | Prisma.ClassWhereUniqueInput[]
  update?: Prisma.ClassUpdateWithWhereUniqueWithoutGradeInput | Prisma.ClassUpdateWithWhereUniqueWithoutGradeInput[]
  updateMany?: Prisma.ClassUpdateManyWithWhereWithoutGradeInput | Prisma.ClassUpdateManyWithWhereWithoutGradeInput[]
  deleteMany?: Prisma.ClassScalarWhereInput | Prisma.ClassScalarWhereInput[]
}

export type ClassCreateNestedOneWithoutTimetablePeriodsInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutTimetablePeriodsInput, Prisma.ClassUncheckedCreateWithoutTimetablePeriodsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutTimetablePeriodsInput
  connect?: Prisma.ClassWhereUniqueInput
}

export type ClassUpdateOneWithoutTimetablePeriodsNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutTimetablePeriodsInput, Prisma.ClassUncheckedCreateWithoutTimetablePeriodsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutTimetablePeriodsInput
  upsert?: Prisma.ClassUpsertWithoutTimetablePeriodsInput
  disconnect?: Prisma.ClassWhereInput | boolean
  delete?: Prisma.ClassWhereInput | boolean
  connect?: Prisma.ClassWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClassUpdateToOneWithWhereWithoutTimetablePeriodsInput, Prisma.ClassUpdateWithoutTimetablePeriodsInput>, Prisma.ClassUncheckedUpdateWithoutTimetablePeriodsInput>
}

export type ClassCreateNestedOneWithoutTimetableAssignmentsInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutTimetableAssignmentsInput, Prisma.ClassUncheckedCreateWithoutTimetableAssignmentsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutTimetableAssignmentsInput
  connect?: Prisma.ClassWhereUniqueInput
}

export type ClassUpdateOneRequiredWithoutTimetableAssignmentsNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutTimetableAssignmentsInput, Prisma.ClassUncheckedCreateWithoutTimetableAssignmentsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutTimetableAssignmentsInput
  upsert?: Prisma.ClassUpsertWithoutTimetableAssignmentsInput
  connect?: Prisma.ClassWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClassUpdateToOneWithWhereWithoutTimetableAssignmentsInput, Prisma.ClassUpdateWithoutTimetableAssignmentsInput>, Prisma.ClassUncheckedUpdateWithoutTimetableAssignmentsInput>
}

export type ClassCreateNestedOneWithoutStudentsInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutStudentsInput, Prisma.ClassUncheckedCreateWithoutStudentsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutStudentsInput
  connect?: Prisma.ClassWhereUniqueInput
}

export type ClassUpdateOneRequiredWithoutStudentsNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutStudentsInput, Prisma.ClassUncheckedCreateWithoutStudentsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutStudentsInput
  upsert?: Prisma.ClassUpsertWithoutStudentsInput
  connect?: Prisma.ClassWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClassUpdateToOneWithWhereWithoutStudentsInput, Prisma.ClassUpdateWithoutStudentsInput>, Prisma.ClassUncheckedUpdateWithoutStudentsInput>
}

export type ClassCreateNestedOneWithoutSupervisorsInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutSupervisorsInput, Prisma.ClassUncheckedCreateWithoutSupervisorsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutSupervisorsInput
  connect?: Prisma.ClassWhereUniqueInput
}

export type ClassUpdateOneWithoutSupervisorsNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutSupervisorsInput, Prisma.ClassUncheckedCreateWithoutSupervisorsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutSupervisorsInput
  upsert?: Prisma.ClassUpsertWithoutSupervisorsInput
  disconnect?: Prisma.ClassWhereInput | boolean
  delete?: Prisma.ClassWhereInput | boolean
  connect?: Prisma.ClassWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClassUpdateToOneWithWhereWithoutSupervisorsInput, Prisma.ClassUpdateWithoutSupervisorsInput>, Prisma.ClassUncheckedUpdateWithoutSupervisorsInput>
}

export type ClassCreateNestedOneWithoutAssignmentsInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutAssignmentsInput, Prisma.ClassUncheckedCreateWithoutAssignmentsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutAssignmentsInput
  connect?: Prisma.ClassWhereUniqueInput
}

export type ClassUpdateOneRequiredWithoutAssignmentsNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutAssignmentsInput, Prisma.ClassUncheckedCreateWithoutAssignmentsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutAssignmentsInput
  upsert?: Prisma.ClassUpsertWithoutAssignmentsInput
  connect?: Prisma.ClassWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClassUpdateToOneWithWhereWithoutAssignmentsInput, Prisma.ClassUpdateWithoutAssignmentsInput>, Prisma.ClassUncheckedUpdateWithoutAssignmentsInput>
}

export type ClassCreateNestedOneWithoutAttendancesInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutAttendancesInput, Prisma.ClassUncheckedCreateWithoutAttendancesInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutAttendancesInput
  connect?: Prisma.ClassWhereUniqueInput
}

export type ClassUpdateOneRequiredWithoutAttendancesNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutAttendancesInput, Prisma.ClassUncheckedCreateWithoutAttendancesInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutAttendancesInput
  upsert?: Prisma.ClassUpsertWithoutAttendancesInput
  connect?: Prisma.ClassWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClassUpdateToOneWithWhereWithoutAttendancesInput, Prisma.ClassUpdateWithoutAttendancesInput>, Prisma.ClassUncheckedUpdateWithoutAttendancesInput>
}

export type ClassCreateNestedOneWithoutInvoicesInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutInvoicesInput, Prisma.ClassUncheckedCreateWithoutInvoicesInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutInvoicesInput
  connect?: Prisma.ClassWhereUniqueInput
}

export type ClassUpdateOneWithoutInvoicesNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutInvoicesInput, Prisma.ClassUncheckedCreateWithoutInvoicesInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutInvoicesInput
  upsert?: Prisma.ClassUpsertWithoutInvoicesInput
  disconnect?: Prisma.ClassWhereInput | boolean
  delete?: Prisma.ClassWhereInput | boolean
  connect?: Prisma.ClassWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClassUpdateToOneWithWhereWithoutInvoicesInput, Prisma.ClassUpdateWithoutInvoicesInput>, Prisma.ClassUncheckedUpdateWithoutInvoicesInput>
}

export type ClassCreateNestedOneWithoutAnnouncementsInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutAnnouncementsInput, Prisma.ClassUncheckedCreateWithoutAnnouncementsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutAnnouncementsInput
  connect?: Prisma.ClassWhereUniqueInput
}

export type ClassUpdateOneWithoutAnnouncementsNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutAnnouncementsInput, Prisma.ClassUncheckedCreateWithoutAnnouncementsInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutAnnouncementsInput
  upsert?: Prisma.ClassUpsertWithoutAnnouncementsInput
  disconnect?: Prisma.ClassWhereInput | boolean
  delete?: Prisma.ClassWhereInput | boolean
  connect?: Prisma.ClassWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClassUpdateToOneWithWhereWithoutAnnouncementsInput, Prisma.ClassUpdateWithoutAnnouncementsInput>, Prisma.ClassUncheckedUpdateWithoutAnnouncementsInput>
}

export type ClassCreateNestedOneWithoutStudentClassHistoryInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutStudentClassHistoryInput, Prisma.ClassUncheckedCreateWithoutStudentClassHistoryInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutStudentClassHistoryInput
  connect?: Prisma.ClassWhereUniqueInput
}

export type ClassUpdateOneRequiredWithoutStudentClassHistoryNestedInput = {
  create?: Prisma.XOR<Prisma.ClassCreateWithoutStudentClassHistoryInput, Prisma.ClassUncheckedCreateWithoutStudentClassHistoryInput>
  connectOrCreate?: Prisma.ClassCreateOrConnectWithoutStudentClassHistoryInput
  upsert?: Prisma.ClassUpsertWithoutStudentClassHistoryInput
  connect?: Prisma.ClassWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClassUpdateToOneWithWhereWithoutStudentClassHistoryInput, Prisma.ClassUpdateWithoutStudentClassHistoryInput>, Prisma.ClassUncheckedUpdateWithoutStudentClassHistoryInput>
}

export type ClassCreateWithoutSchoolInput = {
  id?: string
  name: string
  capacity: number
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutSchoolInput = {
  id?: string
  name: string
  capacity: number
  gradeId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutSchoolInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutSchoolInput, Prisma.ClassUncheckedCreateWithoutSchoolInput>
}

export type ClassCreateManySchoolInputEnvelope = {
  data: Prisma.ClassCreateManySchoolInput | Prisma.ClassCreateManySchoolInput[]
  skipDuplicates?: boolean
}

export type ClassUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.ClassWhereUniqueInput
  update: Prisma.XOR<Prisma.ClassUpdateWithoutSchoolInput, Prisma.ClassUncheckedUpdateWithoutSchoolInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutSchoolInput, Prisma.ClassUncheckedCreateWithoutSchoolInput>
}

export type ClassUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.ClassWhereUniqueInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutSchoolInput, Prisma.ClassUncheckedUpdateWithoutSchoolInput>
}

export type ClassUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.ClassScalarWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateManyMutationInput, Prisma.ClassUncheckedUpdateManyWithoutSchoolInput>
}

export type ClassScalarWhereInput = {
  AND?: Prisma.ClassScalarWhereInput | Prisma.ClassScalarWhereInput[]
  OR?: Prisma.ClassScalarWhereInput[]
  NOT?: Prisma.ClassScalarWhereInput | Prisma.ClassScalarWhereInput[]
  id?: Prisma.StringFilter<"Class"> | string
  name?: Prisma.StringFilter<"Class"> | string
  capacity?: Prisma.IntFilter<"Class"> | number
  schoolId?: Prisma.StringFilter<"Class"> | string
  gradeId?: Prisma.StringFilter<"Class"> | string
}

export type ClassCreateWithoutGradeInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutGradeInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutGradeInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutGradeInput, Prisma.ClassUncheckedCreateWithoutGradeInput>
}

export type ClassCreateManyGradeInputEnvelope = {
  data: Prisma.ClassCreateManyGradeInput | Prisma.ClassCreateManyGradeInput[]
  skipDuplicates?: boolean
}

export type ClassUpsertWithWhereUniqueWithoutGradeInput = {
  where: Prisma.ClassWhereUniqueInput
  update: Prisma.XOR<Prisma.ClassUpdateWithoutGradeInput, Prisma.ClassUncheckedUpdateWithoutGradeInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutGradeInput, Prisma.ClassUncheckedCreateWithoutGradeInput>
}

export type ClassUpdateWithWhereUniqueWithoutGradeInput = {
  where: Prisma.ClassWhereUniqueInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutGradeInput, Prisma.ClassUncheckedUpdateWithoutGradeInput>
}

export type ClassUpdateManyWithWhereWithoutGradeInput = {
  where: Prisma.ClassScalarWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateManyMutationInput, Prisma.ClassUncheckedUpdateManyWithoutGradeInput>
}

export type ClassCreateWithoutTimetablePeriodsInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutTimetablePeriodsInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutTimetablePeriodsInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutTimetablePeriodsInput, Prisma.ClassUncheckedCreateWithoutTimetablePeriodsInput>
}

export type ClassUpsertWithoutTimetablePeriodsInput = {
  update: Prisma.XOR<Prisma.ClassUpdateWithoutTimetablePeriodsInput, Prisma.ClassUncheckedUpdateWithoutTimetablePeriodsInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutTimetablePeriodsInput, Prisma.ClassUncheckedCreateWithoutTimetablePeriodsInput>
  where?: Prisma.ClassWhereInput
}

export type ClassUpdateToOneWithWhereWithoutTimetablePeriodsInput = {
  where?: Prisma.ClassWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutTimetablePeriodsInput, Prisma.ClassUncheckedUpdateWithoutTimetablePeriodsInput>
}

export type ClassUpdateWithoutTimetablePeriodsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutTimetablePeriodsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassCreateWithoutTimetableAssignmentsInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutTimetableAssignmentsInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutTimetableAssignmentsInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutTimetableAssignmentsInput, Prisma.ClassUncheckedCreateWithoutTimetableAssignmentsInput>
}

export type ClassUpsertWithoutTimetableAssignmentsInput = {
  update: Prisma.XOR<Prisma.ClassUpdateWithoutTimetableAssignmentsInput, Prisma.ClassUncheckedUpdateWithoutTimetableAssignmentsInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutTimetableAssignmentsInput, Prisma.ClassUncheckedCreateWithoutTimetableAssignmentsInput>
  where?: Prisma.ClassWhereInput
}

export type ClassUpdateToOneWithWhereWithoutTimetableAssignmentsInput = {
  where?: Prisma.ClassWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutTimetableAssignmentsInput, Prisma.ClassUncheckedUpdateWithoutTimetableAssignmentsInput>
}

export type ClassUpdateWithoutTimetableAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutTimetableAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassCreateWithoutStudentsInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutStudentsInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutStudentsInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutStudentsInput, Prisma.ClassUncheckedCreateWithoutStudentsInput>
}

export type ClassUpsertWithoutStudentsInput = {
  update: Prisma.XOR<Prisma.ClassUpdateWithoutStudentsInput, Prisma.ClassUncheckedUpdateWithoutStudentsInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutStudentsInput, Prisma.ClassUncheckedCreateWithoutStudentsInput>
  where?: Prisma.ClassWhereInput
}

export type ClassUpdateToOneWithWhereWithoutStudentsInput = {
  where?: Prisma.ClassWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutStudentsInput, Prisma.ClassUncheckedUpdateWithoutStudentsInput>
}

export type ClassUpdateWithoutStudentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutStudentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassCreateWithoutSupervisorsInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutSupervisorsInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutSupervisorsInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutSupervisorsInput, Prisma.ClassUncheckedCreateWithoutSupervisorsInput>
}

export type ClassUpsertWithoutSupervisorsInput = {
  update: Prisma.XOR<Prisma.ClassUpdateWithoutSupervisorsInput, Prisma.ClassUncheckedUpdateWithoutSupervisorsInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutSupervisorsInput, Prisma.ClassUncheckedCreateWithoutSupervisorsInput>
  where?: Prisma.ClassWhereInput
}

export type ClassUpdateToOneWithWhereWithoutSupervisorsInput = {
  where?: Prisma.ClassWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutSupervisorsInput, Prisma.ClassUncheckedUpdateWithoutSupervisorsInput>
}

export type ClassUpdateWithoutSupervisorsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutSupervisorsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassCreateWithoutAssignmentsInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutAssignmentsInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutAssignmentsInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutAssignmentsInput, Prisma.ClassUncheckedCreateWithoutAssignmentsInput>
}

export type ClassUpsertWithoutAssignmentsInput = {
  update: Prisma.XOR<Prisma.ClassUpdateWithoutAssignmentsInput, Prisma.ClassUncheckedUpdateWithoutAssignmentsInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutAssignmentsInput, Prisma.ClassUncheckedCreateWithoutAssignmentsInput>
  where?: Prisma.ClassWhereInput
}

export type ClassUpdateToOneWithWhereWithoutAssignmentsInput = {
  where?: Prisma.ClassWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutAssignmentsInput, Prisma.ClassUncheckedUpdateWithoutAssignmentsInput>
}

export type ClassUpdateWithoutAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassCreateWithoutAttendancesInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutAttendancesInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutAttendancesInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutAttendancesInput, Prisma.ClassUncheckedCreateWithoutAttendancesInput>
}

export type ClassUpsertWithoutAttendancesInput = {
  update: Prisma.XOR<Prisma.ClassUpdateWithoutAttendancesInput, Prisma.ClassUncheckedUpdateWithoutAttendancesInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutAttendancesInput, Prisma.ClassUncheckedCreateWithoutAttendancesInput>
  where?: Prisma.ClassWhereInput
}

export type ClassUpdateToOneWithWhereWithoutAttendancesInput = {
  where?: Prisma.ClassWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutAttendancesInput, Prisma.ClassUncheckedUpdateWithoutAttendancesInput>
}

export type ClassUpdateWithoutAttendancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutAttendancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassCreateWithoutInvoicesInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutInvoicesInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutInvoicesInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutInvoicesInput, Prisma.ClassUncheckedCreateWithoutInvoicesInput>
}

export type ClassUpsertWithoutInvoicesInput = {
  update: Prisma.XOR<Prisma.ClassUpdateWithoutInvoicesInput, Prisma.ClassUncheckedUpdateWithoutInvoicesInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutInvoicesInput, Prisma.ClassUncheckedCreateWithoutInvoicesInput>
  where?: Prisma.ClassWhereInput
}

export type ClassUpdateToOneWithWhereWithoutInvoicesInput = {
  where?: Prisma.ClassWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutInvoicesInput, Prisma.ClassUncheckedUpdateWithoutInvoicesInput>
}

export type ClassUpdateWithoutInvoicesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutInvoicesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassCreateWithoutAnnouncementsInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutAnnouncementsInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutAnnouncementsInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutAnnouncementsInput, Prisma.ClassUncheckedCreateWithoutAnnouncementsInput>
}

export type ClassUpsertWithoutAnnouncementsInput = {
  update: Prisma.XOR<Prisma.ClassUpdateWithoutAnnouncementsInput, Prisma.ClassUncheckedUpdateWithoutAnnouncementsInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutAnnouncementsInput, Prisma.ClassUncheckedCreateWithoutAnnouncementsInput>
  where?: Prisma.ClassWhereInput
}

export type ClassUpdateToOneWithWhereWithoutAnnouncementsInput = {
  where?: Prisma.ClassWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutAnnouncementsInput, Prisma.ClassUncheckedUpdateWithoutAnnouncementsInput>
}

export type ClassUpdateWithoutAnnouncementsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutAnnouncementsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassCreateWithoutStudentClassHistoryInput = {
  id?: string
  name: string
  capacity: number
  school: Prisma.SchoolCreateNestedOneWithoutClassesInput
  grade: Prisma.GradeCreateNestedOneWithoutClassesInput
  students?: Prisma.StudentCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodCreateNestedManyWithoutClassInput
}

export type ClassUncheckedCreateWithoutStudentClassHistoryInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
  gradeId: string
  students?: Prisma.StudentUncheckedCreateNestedManyWithoutClassInput
  supervisors?: Prisma.StaffUncheckedCreateNestedManyWithoutClassInput
  assignments?: Prisma.AssignmentUncheckedCreateNestedManyWithoutClassInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutClassInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutClassInput
  announcements?: Prisma.AnnouncementUncheckedCreateNestedManyWithoutClassInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutClassInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedCreateNestedManyWithoutClassInput
}

export type ClassCreateOrConnectWithoutStudentClassHistoryInput = {
  where: Prisma.ClassWhereUniqueInput
  create: Prisma.XOR<Prisma.ClassCreateWithoutStudentClassHistoryInput, Prisma.ClassUncheckedCreateWithoutStudentClassHistoryInput>
}

export type ClassUpsertWithoutStudentClassHistoryInput = {
  update: Prisma.XOR<Prisma.ClassUpdateWithoutStudentClassHistoryInput, Prisma.ClassUncheckedUpdateWithoutStudentClassHistoryInput>
  create: Prisma.XOR<Prisma.ClassCreateWithoutStudentClassHistoryInput, Prisma.ClassUncheckedCreateWithoutStudentClassHistoryInput>
  where?: Prisma.ClassWhereInput
}

export type ClassUpdateToOneWithWhereWithoutStudentClassHistoryInput = {
  where?: Prisma.ClassWhereInput
  data: Prisma.XOR<Prisma.ClassUpdateWithoutStudentClassHistoryInput, Prisma.ClassUncheckedUpdateWithoutStudentClassHistoryInput>
}

export type ClassUpdateWithoutStudentClassHistoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutStudentClassHistoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassCreateManySchoolInput = {
  id?: string
  name: string
  capacity: number
  gradeId: string
}

export type ClassUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  grade?: Prisma.GradeUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  gradeId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ClassCreateManyGradeInput = {
  id?: string
  name: string
  capacity: number
  schoolId: string
}

export type ClassUpdateWithoutGradeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutClassesNestedInput
  students?: Prisma.StudentUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateWithoutGradeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  students?: Prisma.StudentUncheckedUpdateManyWithoutClassNestedInput
  supervisors?: Prisma.StaffUncheckedUpdateManyWithoutClassNestedInput
  assignments?: Prisma.AssignmentUncheckedUpdateManyWithoutClassNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutClassNestedInput
  announcements?: Prisma.AnnouncementUncheckedUpdateManyWithoutClassNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutClassNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput
  timetablePeriods?: Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput
}

export type ClassUncheckedUpdateManyWithoutGradeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  capacity?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
}


/**
 * Count Type ClassCountOutputType
 */

export type ClassCountOutputType = {
  students: number
  supervisors: number
  assignments: number
  attendances: number
  timetableAssignments: number
  announcements: number
  invoices: number
  studentClassHistory: number
  timetablePeriods: number
}

export type ClassCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  students?: boolean | ClassCountOutputTypeCountStudentsArgs
  supervisors?: boolean | ClassCountOutputTypeCountSupervisorsArgs
  assignments?: boolean | ClassCountOutputTypeCountAssignmentsArgs
  attendances?: boolean | ClassCountOutputTypeCountAttendancesArgs
  timetableAssignments?: boolean | ClassCountOutputTypeCountTimetableAssignmentsArgs
  announcements?: boolean | ClassCountOutputTypeCountAnnouncementsArgs
  invoices?: boolean | ClassCountOutputTypeCountInvoicesArgs
  studentClassHistory?: boolean | ClassCountOutputTypeCountStudentClassHistoryArgs
  timetablePeriods?: boolean | ClassCountOutputTypeCountTimetablePeriodsArgs
}

/**
 * ClassCountOutputType without action
 */
export type ClassCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClassCountOutputType
   */
  select?: Prisma.ClassCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ClassCountOutputType without action
 */
export type ClassCountOutputTypeCountStudentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentWhereInput
}

/**
 * ClassCountOutputType without action
 */
export type ClassCountOutputTypeCountSupervisorsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StaffWhereInput
}

/**
 * ClassCountOutputType without action
 */
export type ClassCountOutputTypeCountAssignmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AssignmentWhereInput
}

/**
 * ClassCountOutputType without action
 */
export type ClassCountOutputTypeCountAttendancesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentAttendanceWhereInput
}

/**
 * ClassCountOutputType without action
 */
export type ClassCountOutputTypeCountTimetableAssignmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TimetableAssignmentWhereInput
}

/**
 * ClassCountOutputType without action
 */
export type ClassCountOutputTypeCountAnnouncementsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AnnouncementWhereInput
}

/**
 * ClassCountOutputType without action
 */
export type ClassCountOutputTypeCountInvoicesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InvoiceWhereInput
}

/**
 * ClassCountOutputType without action
 */
export type ClassCountOutputTypeCountStudentClassHistoryArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentClassHistoryWhereInput
}

/**
 * ClassCountOutputType without action
 */
export type ClassCountOutputTypeCountTimetablePeriodsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TimetablePeriodWhereInput
}


export type ClassSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  capacity?: boolean
  schoolId?: boolean
  gradeId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  grade?: boolean | Prisma.GradeDefaultArgs<ExtArgs>
  students?: boolean | Prisma.Class$studentsArgs<ExtArgs>
  supervisors?: boolean | Prisma.Class$supervisorsArgs<ExtArgs>
  assignments?: boolean | Prisma.Class$assignmentsArgs<ExtArgs>
  attendances?: boolean | Prisma.Class$attendancesArgs<ExtArgs>
  timetableAssignments?: boolean | Prisma.Class$timetableAssignmentsArgs<ExtArgs>
  announcements?: boolean | Prisma.Class$announcementsArgs<ExtArgs>
  invoices?: boolean | Prisma.Class$invoicesArgs<ExtArgs>
  studentClassHistory?: boolean | Prisma.Class$studentClassHistoryArgs<ExtArgs>
  timetablePeriods?: boolean | Prisma.Class$timetablePeriodsArgs<ExtArgs>
  _count?: boolean | Prisma.ClassCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["class"]>

export type ClassSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  capacity?: boolean
  schoolId?: boolean
  gradeId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  grade?: boolean | Prisma.GradeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["class"]>

export type ClassSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  capacity?: boolean
  schoolId?: boolean
  gradeId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  grade?: boolean | Prisma.GradeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["class"]>

export type ClassSelectScalar = {
  id?: boolean
  name?: boolean
  capacity?: boolean
  schoolId?: boolean
  gradeId?: boolean
}

export type ClassOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "capacity" | "schoolId" | "gradeId", ExtArgs["result"]["class"]>
export type ClassInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  grade?: boolean | Prisma.GradeDefaultArgs<ExtArgs>
  students?: boolean | Prisma.Class$studentsArgs<ExtArgs>
  supervisors?: boolean | Prisma.Class$supervisorsArgs<ExtArgs>
  assignments?: boolean | Prisma.Class$assignmentsArgs<ExtArgs>
  attendances?: boolean | Prisma.Class$attendancesArgs<ExtArgs>
  timetableAssignments?: boolean | Prisma.Class$timetableAssignmentsArgs<ExtArgs>
  announcements?: boolean | Prisma.Class$announcementsArgs<ExtArgs>
  invoices?: boolean | Prisma.Class$invoicesArgs<ExtArgs>
  studentClassHistory?: boolean | Prisma.Class$studentClassHistoryArgs<ExtArgs>
  timetablePeriods?: boolean | Prisma.Class$timetablePeriodsArgs<ExtArgs>
  _count?: boolean | Prisma.ClassCountOutputTypeDefaultArgs<ExtArgs>
}
export type ClassIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  grade?: boolean | Prisma.GradeDefaultArgs<ExtArgs>
}
export type ClassIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  grade?: boolean | Prisma.GradeDefaultArgs<ExtArgs>
}

export type $ClassPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Class"
  objects: {
    school: Prisma.$SchoolPayload<ExtArgs>
    grade: Prisma.$GradePayload<ExtArgs>
    students: Prisma.$StudentPayload<ExtArgs>[]
    supervisors: Prisma.$StaffPayload<ExtArgs>[]
    assignments: Prisma.$AssignmentPayload<ExtArgs>[]
    attendances: Prisma.$StudentAttendancePayload<ExtArgs>[]
    timetableAssignments: Prisma.$TimetableAssignmentPayload<ExtArgs>[]
    announcements: Prisma.$AnnouncementPayload<ExtArgs>[]
    invoices: Prisma.$InvoicePayload<ExtArgs>[]
    studentClassHistory: Prisma.$StudentClassHistoryPayload<ExtArgs>[]
    timetablePeriods: Prisma.$TimetablePeriodPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    capacity: number
    schoolId: string
    gradeId: string
  }, ExtArgs["result"]["class"]>
  composites: {}
}

export type ClassGetPayload<S extends boolean | null | undefined | ClassDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ClassPayload, S>

export type ClassCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ClassFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ClassCountAggregateInputType | true
  }

export interface ClassDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Class'], meta: { name: 'Class' } }
  /**
   * Find zero or one Class that matches the filter.
   * @param {ClassFindUniqueArgs} args - Arguments to find a Class
   * @example
   * // Get one Class
   * const class = await prisma.class.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ClassFindUniqueArgs>(args: Prisma.SelectSubset<T, ClassFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Class that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ClassFindUniqueOrThrowArgs} args - Arguments to find a Class
   * @example
   * // Get one Class
   * const class = await prisma.class.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ClassFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ClassFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Class that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClassFindFirstArgs} args - Arguments to find a Class
   * @example
   * // Get one Class
   * const class = await prisma.class.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ClassFindFirstArgs>(args?: Prisma.SelectSubset<T, ClassFindFirstArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Class that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClassFindFirstOrThrowArgs} args - Arguments to find a Class
   * @example
   * // Get one Class
   * const class = await prisma.class.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ClassFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ClassFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Classes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClassFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Classes
   * const classes = await prisma.class.findMany()
   * 
   * // Get first 10 Classes
   * const classes = await prisma.class.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const classWithIdOnly = await prisma.class.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ClassFindManyArgs>(args?: Prisma.SelectSubset<T, ClassFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Class.
   * @param {ClassCreateArgs} args - Arguments to create a Class.
   * @example
   * // Create one Class
   * const Class = await prisma.class.create({
   *   data: {
   *     // ... data to create a Class
   *   }
   * })
   * 
   */
  create<T extends ClassCreateArgs>(args: Prisma.SelectSubset<T, ClassCreateArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Classes.
   * @param {ClassCreateManyArgs} args - Arguments to create many Classes.
   * @example
   * // Create many Classes
   * const class = await prisma.class.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ClassCreateManyArgs>(args?: Prisma.SelectSubset<T, ClassCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Classes and returns the data saved in the database.
   * @param {ClassCreateManyAndReturnArgs} args - Arguments to create many Classes.
   * @example
   * // Create many Classes
   * const class = await prisma.class.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Classes and only return the `id`
   * const classWithIdOnly = await prisma.class.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ClassCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ClassCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Class.
   * @param {ClassDeleteArgs} args - Arguments to delete one Class.
   * @example
   * // Delete one Class
   * const Class = await prisma.class.delete({
   *   where: {
   *     // ... filter to delete one Class
   *   }
   * })
   * 
   */
  delete<T extends ClassDeleteArgs>(args: Prisma.SelectSubset<T, ClassDeleteArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Class.
   * @param {ClassUpdateArgs} args - Arguments to update one Class.
   * @example
   * // Update one Class
   * const class = await prisma.class.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ClassUpdateArgs>(args: Prisma.SelectSubset<T, ClassUpdateArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Classes.
   * @param {ClassDeleteManyArgs} args - Arguments to filter Classes to delete.
   * @example
   * // Delete a few Classes
   * const { count } = await prisma.class.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ClassDeleteManyArgs>(args?: Prisma.SelectSubset<T, ClassDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Classes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClassUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Classes
   * const class = await prisma.class.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ClassUpdateManyArgs>(args: Prisma.SelectSubset<T, ClassUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Classes and returns the data updated in the database.
   * @param {ClassUpdateManyAndReturnArgs} args - Arguments to update many Classes.
   * @example
   * // Update many Classes
   * const class = await prisma.class.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Classes and only return the `id`
   * const classWithIdOnly = await prisma.class.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ClassUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ClassUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Class.
   * @param {ClassUpsertArgs} args - Arguments to update or create a Class.
   * @example
   * // Update or create a Class
   * const class = await prisma.class.upsert({
   *   create: {
   *     // ... data to create a Class
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Class we want to update
   *   }
   * })
   */
  upsert<T extends ClassUpsertArgs>(args: Prisma.SelectSubset<T, ClassUpsertArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Classes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClassCountArgs} args - Arguments to filter Classes to count.
   * @example
   * // Count the number of Classes
   * const count = await prisma.class.count({
   *   where: {
   *     // ... the filter for the Classes we want to count
   *   }
   * })
  **/
  count<T extends ClassCountArgs>(
    args?: Prisma.Subset<T, ClassCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ClassCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Class.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClassAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ClassAggregateArgs>(args: Prisma.Subset<T, ClassAggregateArgs>): Prisma.PrismaPromise<GetClassAggregateType<T>>

  /**
   * Group by Class.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClassGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ClassGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ClassGroupByArgs['orderBy'] }
      : { orderBy?: ClassGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ClassGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClassGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Class model
 */
readonly fields: ClassFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Class.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ClassClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>): Prisma.Prisma__SchoolClient<runtime.Types.Result.GetResult<Prisma.$SchoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  grade<T extends Prisma.GradeDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.GradeDefaultArgs<ExtArgs>>): Prisma.Prisma__GradeClient<runtime.Types.Result.GetResult<Prisma.$GradePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  students<T extends Prisma.Class$studentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Class$studentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  supervisors<T extends Prisma.Class$supervisorsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Class$supervisorsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  assignments<T extends Prisma.Class$assignmentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Class$assignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  attendances<T extends Prisma.Class$attendancesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Class$attendancesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  timetableAssignments<T extends Prisma.Class$timetableAssignmentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Class$timetableAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TimetableAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  announcements<T extends Prisma.Class$announcementsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Class$announcementsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  invoices<T extends Prisma.Class$invoicesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Class$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  studentClassHistory<T extends Prisma.Class$studentClassHistoryArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Class$studentClassHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  timetablePeriods<T extends Prisma.Class$timetablePeriodsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Class$timetablePeriodsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Class model
 */
export interface ClassFieldRefs {
  readonly id: Prisma.FieldRef<"Class", 'String'>
  readonly name: Prisma.FieldRef<"Class", 'String'>
  readonly capacity: Prisma.FieldRef<"Class", 'Int'>
  readonly schoolId: Prisma.FieldRef<"Class", 'String'>
  readonly gradeId: Prisma.FieldRef<"Class", 'String'>
}
    

// Custom InputTypes
/**
 * Class findUnique
 */
export type ClassFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  /**
   * Filter, which Class to fetch.
   */
  where: Prisma.ClassWhereUniqueInput
}

/**
 * Class findUniqueOrThrow
 */
export type ClassFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  /**
   * Filter, which Class to fetch.
   */
  where: Prisma.ClassWhereUniqueInput
}

/**
 * Class findFirst
 */
export type ClassFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  /**
   * Filter, which Class to fetch.
   */
  where?: Prisma.ClassWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Classes to fetch.
   */
  orderBy?: Prisma.ClassOrderByWithRelationInput | Prisma.ClassOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Classes.
   */
  cursor?: Prisma.ClassWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Classes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Classes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Classes.
   */
  distinct?: Prisma.ClassScalarFieldEnum | Prisma.ClassScalarFieldEnum[]
}

/**
 * Class findFirstOrThrow
 */
export type ClassFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  /**
   * Filter, which Class to fetch.
   */
  where?: Prisma.ClassWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Classes to fetch.
   */
  orderBy?: Prisma.ClassOrderByWithRelationInput | Prisma.ClassOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Classes.
   */
  cursor?: Prisma.ClassWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Classes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Classes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Classes.
   */
  distinct?: Prisma.ClassScalarFieldEnum | Prisma.ClassScalarFieldEnum[]
}

/**
 * Class findMany
 */
export type ClassFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  /**
   * Filter, which Classes to fetch.
   */
  where?: Prisma.ClassWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Classes to fetch.
   */
  orderBy?: Prisma.ClassOrderByWithRelationInput | Prisma.ClassOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Classes.
   */
  cursor?: Prisma.ClassWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Classes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Classes.
   */
  skip?: number
  distinct?: Prisma.ClassScalarFieldEnum | Prisma.ClassScalarFieldEnum[]
}

/**
 * Class create
 */
export type ClassCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  /**
   * The data needed to create a Class.
   */
  data: Prisma.XOR<Prisma.ClassCreateInput, Prisma.ClassUncheckedCreateInput>
}

/**
 * Class createMany
 */
export type ClassCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Classes.
   */
  data: Prisma.ClassCreateManyInput | Prisma.ClassCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Class createManyAndReturn
 */
export type ClassCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * The data used to create many Classes.
   */
  data: Prisma.ClassCreateManyInput | Prisma.ClassCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Class update
 */
export type ClassUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  /**
   * The data needed to update a Class.
   */
  data: Prisma.XOR<Prisma.ClassUpdateInput, Prisma.ClassUncheckedUpdateInput>
  /**
   * Choose, which Class to update.
   */
  where: Prisma.ClassWhereUniqueInput
}

/**
 * Class updateMany
 */
export type ClassUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Classes.
   */
  data: Prisma.XOR<Prisma.ClassUpdateManyMutationInput, Prisma.ClassUncheckedUpdateManyInput>
  /**
   * Filter which Classes to update
   */
  where?: Prisma.ClassWhereInput
  /**
   * Limit how many Classes to update.
   */
  limit?: number
}

/**
 * Class updateManyAndReturn
 */
export type ClassUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * The data used to update Classes.
   */
  data: Prisma.XOR<Prisma.ClassUpdateManyMutationInput, Prisma.ClassUncheckedUpdateManyInput>
  /**
   * Filter which Classes to update
   */
  where?: Prisma.ClassWhereInput
  /**
   * Limit how many Classes to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Class upsert
 */
export type ClassUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  /**
   * The filter to search for the Class to update in case it exists.
   */
  where: Prisma.ClassWhereUniqueInput
  /**
   * In case the Class found by the `where` argument doesn't exist, create a new Class with this data.
   */
  create: Prisma.XOR<Prisma.ClassCreateInput, Prisma.ClassUncheckedCreateInput>
  /**
   * In case the Class was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ClassUpdateInput, Prisma.ClassUncheckedUpdateInput>
}

/**
 * Class delete
 */
export type ClassDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  /**
   * Filter which Class to delete.
   */
  where: Prisma.ClassWhereUniqueInput
}

/**
 * Class deleteMany
 */
export type ClassDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Classes to delete
   */
  where?: Prisma.ClassWhereInput
  /**
   * Limit how many Classes to delete.
   */
  limit?: number
}

/**
 * Class.students
 */
export type Class$studentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  where?: Prisma.StudentWhereInput
  orderBy?: Prisma.StudentOrderByWithRelationInput | Prisma.StudentOrderByWithRelationInput[]
  cursor?: Prisma.StudentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[]
}

/**
 * Class.supervisors
 */
export type Class$supervisorsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
  where?: Prisma.StaffWhereInput
  orderBy?: Prisma.StaffOrderByWithRelationInput | Prisma.StaffOrderByWithRelationInput[]
  cursor?: Prisma.StaffWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StaffScalarFieldEnum | Prisma.StaffScalarFieldEnum[]
}

/**
 * Class.assignments
 */
export type Class$assignmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Assignment
   */
  select?: Prisma.AssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Assignment
   */
  omit?: Prisma.AssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AssignmentInclude<ExtArgs> | null
  where?: Prisma.AssignmentWhereInput
  orderBy?: Prisma.AssignmentOrderByWithRelationInput | Prisma.AssignmentOrderByWithRelationInput[]
  cursor?: Prisma.AssignmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AssignmentScalarFieldEnum | Prisma.AssignmentScalarFieldEnum[]
}

/**
 * Class.attendances
 */
export type Class$attendancesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  where?: Prisma.StudentAttendanceWhereInput
  orderBy?: Prisma.StudentAttendanceOrderByWithRelationInput | Prisma.StudentAttendanceOrderByWithRelationInput[]
  cursor?: Prisma.StudentAttendanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StudentAttendanceScalarFieldEnum | Prisma.StudentAttendanceScalarFieldEnum[]
}

/**
 * Class.timetableAssignments
 */
export type Class$timetableAssignmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetableAssignment
   */
  select?: Prisma.TimetableAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetableAssignment
   */
  omit?: Prisma.TimetableAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetableAssignmentInclude<ExtArgs> | null
  where?: Prisma.TimetableAssignmentWhereInput
  orderBy?: Prisma.TimetableAssignmentOrderByWithRelationInput | Prisma.TimetableAssignmentOrderByWithRelationInput[]
  cursor?: Prisma.TimetableAssignmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TimetableAssignmentScalarFieldEnum | Prisma.TimetableAssignmentScalarFieldEnum[]
}

/**
 * Class.announcements
 */
export type Class$announcementsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
  where?: Prisma.AnnouncementWhereInput
  orderBy?: Prisma.AnnouncementOrderByWithRelationInput | Prisma.AnnouncementOrderByWithRelationInput[]
  cursor?: Prisma.AnnouncementWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AnnouncementScalarFieldEnum | Prisma.AnnouncementScalarFieldEnum[]
}

/**
 * Class.invoices
 */
export type Class$invoicesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Invoice
   */
  select?: Prisma.InvoiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Invoice
   */
  omit?: Prisma.InvoiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoiceInclude<ExtArgs> | null
  where?: Prisma.InvoiceWhereInput
  orderBy?: Prisma.InvoiceOrderByWithRelationInput | Prisma.InvoiceOrderByWithRelationInput[]
  cursor?: Prisma.InvoiceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.InvoiceScalarFieldEnum | Prisma.InvoiceScalarFieldEnum[]
}

/**
 * Class.studentClassHistory
 */
export type Class$studentClassHistoryArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  where?: Prisma.StudentClassHistoryWhereInput
  orderBy?: Prisma.StudentClassHistoryOrderByWithRelationInput | Prisma.StudentClassHistoryOrderByWithRelationInput[]
  cursor?: Prisma.StudentClassHistoryWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StudentClassHistoryScalarFieldEnum | Prisma.StudentClassHistoryScalarFieldEnum[]
}

/**
 * Class.timetablePeriods
 */
export type Class$timetablePeriodsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
  where?: Prisma.TimetablePeriodWhereInput
  orderBy?: Prisma.TimetablePeriodOrderByWithRelationInput | Prisma.TimetablePeriodOrderByWithRelationInput[]
  cursor?: Prisma.TimetablePeriodWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TimetablePeriodScalarFieldEnum | Prisma.TimetablePeriodScalarFieldEnum[]
}

/**
 * Class without action
 */
export type ClassDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
}
