
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `StudentAttendance` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model StudentAttendance
 * 
 */
export type StudentAttendanceModel = runtime.Types.Result.DefaultSelection<Prisma.$StudentAttendancePayload>

export type AggregateStudentAttendance = {
  _count: StudentAttendanceCountAggregateOutputType | null
  _min: StudentAttendanceMinAggregateOutputType | null
  _max: StudentAttendanceMaxAggregateOutputType | null
}

export type StudentAttendanceMinAggregateOutputType = {
  id: string | null
  date: Date | null
  status: $Enums.AttendanceStatus | null
  schoolId: string | null
  termId: string | null
  studentId: string | null
  classId: string | null
  lessonId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type StudentAttendanceMaxAggregateOutputType = {
  id: string | null
  date: Date | null
  status: $Enums.AttendanceStatus | null
  schoolId: string | null
  termId: string | null
  studentId: string | null
  classId: string | null
  lessonId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type StudentAttendanceCountAggregateOutputType = {
  id: number
  date: number
  status: number
  schoolId: number
  termId: number
  studentId: number
  classId: number
  lessonId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type StudentAttendanceMinAggregateInputType = {
  id?: true
  date?: true
  status?: true
  schoolId?: true
  termId?: true
  studentId?: true
  classId?: true
  lessonId?: true
  createdAt?: true
  updatedAt?: true
}

export type StudentAttendanceMaxAggregateInputType = {
  id?: true
  date?: true
  status?: true
  schoolId?: true
  termId?: true
  studentId?: true
  classId?: true
  lessonId?: true
  createdAt?: true
  updatedAt?: true
}

export type StudentAttendanceCountAggregateInputType = {
  id?: true
  date?: true
  status?: true
  schoolId?: true
  termId?: true
  studentId?: true
  classId?: true
  lessonId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type StudentAttendanceAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which StudentAttendance to aggregate.
   */
  where?: Prisma.StudentAttendanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentAttendances to fetch.
   */
  orderBy?: Prisma.StudentAttendanceOrderByWithRelationInput | Prisma.StudentAttendanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.StudentAttendanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentAttendances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentAttendances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned StudentAttendances
  **/
  _count?: true | StudentAttendanceCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: StudentAttendanceMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: StudentAttendanceMaxAggregateInputType
}

export type GetStudentAttendanceAggregateType<T extends StudentAttendanceAggregateArgs> = {
      [P in keyof T & keyof AggregateStudentAttendance]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateStudentAttendance[P]>
    : Prisma.GetScalarType<T[P], AggregateStudentAttendance[P]>
}




export type StudentAttendanceGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentAttendanceWhereInput
  orderBy?: Prisma.StudentAttendanceOrderByWithAggregationInput | Prisma.StudentAttendanceOrderByWithAggregationInput[]
  by: Prisma.StudentAttendanceScalarFieldEnum[] | Prisma.StudentAttendanceScalarFieldEnum
  having?: Prisma.StudentAttendanceScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: StudentAttendanceCountAggregateInputType | true
  _min?: StudentAttendanceMinAggregateInputType
  _max?: StudentAttendanceMaxAggregateInputType
}

export type StudentAttendanceGroupByOutputType = {
  id: string
  date: Date
  status: $Enums.AttendanceStatus
  schoolId: string
  termId: string
  studentId: string
  classId: string | null
  lessonId: string | null
  createdAt: Date
  updatedAt: Date
  _count: StudentAttendanceCountAggregateOutputType | null
  _min: StudentAttendanceMinAggregateOutputType | null
  _max: StudentAttendanceMaxAggregateOutputType | null
}

type GetStudentAttendanceGroupByPayload<T extends StudentAttendanceGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<StudentAttendanceGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof StudentAttendanceGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], StudentAttendanceGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], StudentAttendanceGroupByOutputType[P]>
      }
    >
  >



export type StudentAttendanceWhereInput = {
  AND?: Prisma.StudentAttendanceWhereInput | Prisma.StudentAttendanceWhereInput[]
  OR?: Prisma.StudentAttendanceWhereInput[]
  NOT?: Prisma.StudentAttendanceWhereInput | Prisma.StudentAttendanceWhereInput[]
  id?: Prisma.StringFilter<"StudentAttendance"> | string
  date?: Prisma.DateTimeFilter<"StudentAttendance"> | Date | string
  status?: Prisma.EnumAttendanceStatusFilter<"StudentAttendance"> | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFilter<"StudentAttendance"> | string
  termId?: Prisma.StringFilter<"StudentAttendance"> | string
  studentId?: Prisma.StringFilter<"StudentAttendance"> | string
  classId?: Prisma.StringNullableFilter<"StudentAttendance"> | string | null
  lessonId?: Prisma.StringNullableFilter<"StudentAttendance"> | string | null
  createdAt?: Prisma.DateTimeFilter<"StudentAttendance"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"StudentAttendance"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  term?: Prisma.XOR<Prisma.TermScalarRelationFilter, Prisma.TermWhereInput>
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
  class?: Prisma.XOR<Prisma.ClassNullableScalarRelationFilter, Prisma.ClassWhereInput> | null
  lesson?: Prisma.XOR<Prisma.LessonNullableScalarRelationFilter, Prisma.LessonWhereInput> | null
}

export type StudentAttendanceOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  date?: Prisma.SortOrder
  status?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  classId?: Prisma.SortOrderInput | Prisma.SortOrder
  lessonId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  school?: Prisma.SchoolOrderByWithRelationInput
  term?: Prisma.TermOrderByWithRelationInput
  student?: Prisma.StudentOrderByWithRelationInput
  class?: Prisma.ClassOrderByWithRelationInput
  lesson?: Prisma.LessonOrderByWithRelationInput
}

export type StudentAttendanceWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  schoolId_studentId_date_lessonId?: Prisma.StudentAttendanceSchoolIdStudentIdDateLessonIdCompoundUniqueInput
  schoolId_studentId_date_classId?: Prisma.StudentAttendanceSchoolIdStudentIdDateClassIdCompoundUniqueInput
  AND?: Prisma.StudentAttendanceWhereInput | Prisma.StudentAttendanceWhereInput[]
  OR?: Prisma.StudentAttendanceWhereInput[]
  NOT?: Prisma.StudentAttendanceWhereInput | Prisma.StudentAttendanceWhereInput[]
  date?: Prisma.DateTimeFilter<"StudentAttendance"> | Date | string
  status?: Prisma.EnumAttendanceStatusFilter<"StudentAttendance"> | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFilter<"StudentAttendance"> | string
  termId?: Prisma.StringFilter<"StudentAttendance"> | string
  studentId?: Prisma.StringFilter<"StudentAttendance"> | string
  classId?: Prisma.StringNullableFilter<"StudentAttendance"> | string | null
  lessonId?: Prisma.StringNullableFilter<"StudentAttendance"> | string | null
  createdAt?: Prisma.DateTimeFilter<"StudentAttendance"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"StudentAttendance"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  term?: Prisma.XOR<Prisma.TermScalarRelationFilter, Prisma.TermWhereInput>
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
  class?: Prisma.XOR<Prisma.ClassNullableScalarRelationFilter, Prisma.ClassWhereInput> | null
  lesson?: Prisma.XOR<Prisma.LessonNullableScalarRelationFilter, Prisma.LessonWhereInput> | null
}, "id" | "schoolId_studentId_date_lessonId" | "schoolId_studentId_date_classId">

export type StudentAttendanceOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  date?: Prisma.SortOrder
  status?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  classId?: Prisma.SortOrderInput | Prisma.SortOrder
  lessonId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.StudentAttendanceCountOrderByAggregateInput
  _max?: Prisma.StudentAttendanceMaxOrderByAggregateInput
  _min?: Prisma.StudentAttendanceMinOrderByAggregateInput
}

export type StudentAttendanceScalarWhereWithAggregatesInput = {
  AND?: Prisma.StudentAttendanceScalarWhereWithAggregatesInput | Prisma.StudentAttendanceScalarWhereWithAggregatesInput[]
  OR?: Prisma.StudentAttendanceScalarWhereWithAggregatesInput[]
  NOT?: Prisma.StudentAttendanceScalarWhereWithAggregatesInput | Prisma.StudentAttendanceScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"StudentAttendance"> | string
  date?: Prisma.DateTimeWithAggregatesFilter<"StudentAttendance"> | Date | string
  status?: Prisma.EnumAttendanceStatusWithAggregatesFilter<"StudentAttendance"> | $Enums.AttendanceStatus
  schoolId?: Prisma.StringWithAggregatesFilter<"StudentAttendance"> | string
  termId?: Prisma.StringWithAggregatesFilter<"StudentAttendance"> | string
  studentId?: Prisma.StringWithAggregatesFilter<"StudentAttendance"> | string
  classId?: Prisma.StringNullableWithAggregatesFilter<"StudentAttendance"> | string | null
  lessonId?: Prisma.StringNullableWithAggregatesFilter<"StudentAttendance"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"StudentAttendance"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"StudentAttendance"> | Date | string
}

export type StudentAttendanceCreateInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentAttendancesInput
  term: Prisma.TermCreateNestedOneWithoutStudentAttendancesInput
  student: Prisma.StudentCreateNestedOneWithoutAttendancesInput
  class?: Prisma.ClassCreateNestedOneWithoutAttendancesInput
  lesson?: Prisma.LessonCreateNestedOneWithoutAttendancesInput
}

export type StudentAttendanceUncheckedCreateInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  schoolId: string
  termId: string
  studentId: string
  classId?: string | null
  lessonId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentAttendancesNestedInput
  term?: Prisma.TermUpdateOneRequiredWithoutStudentAttendancesNestedInput
  student?: Prisma.StudentUpdateOneRequiredWithoutAttendancesNestedInput
  class?: Prisma.ClassUpdateOneWithoutAttendancesNestedInput
  lesson?: Prisma.LessonUpdateOneWithoutAttendancesNestedInput
}

export type StudentAttendanceUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lessonId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceCreateManyInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  schoolId: string
  termId: string
  studentId: string
  classId?: string | null
  lessonId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lessonId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceListRelationFilter = {
  every?: Prisma.StudentAttendanceWhereInput
  some?: Prisma.StudentAttendanceWhereInput
  none?: Prisma.StudentAttendanceWhereInput
}

export type StudentAttendanceOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type StudentAttendanceSchoolIdStudentIdDateLessonIdCompoundUniqueInput = {
  schoolId: string
  studentId: string
  date: Date | string
  lessonId: string
}

export type StudentAttendanceSchoolIdStudentIdDateClassIdCompoundUniqueInput = {
  schoolId: string
  studentId: string
  date: Date | string
  classId: string
}

export type StudentAttendanceCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  date?: Prisma.SortOrder
  status?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  lessonId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StudentAttendanceMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  date?: Prisma.SortOrder
  status?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  lessonId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StudentAttendanceMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  date?: Prisma.SortOrder
  status?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  lessonId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StudentAttendanceCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutSchoolInput, Prisma.StudentAttendanceUncheckedCreateWithoutSchoolInput> | Prisma.StudentAttendanceCreateWithoutSchoolInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutSchoolInput | Prisma.StudentAttendanceCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.StudentAttendanceCreateManySchoolInputEnvelope
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
}

export type StudentAttendanceUncheckedCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutSchoolInput, Prisma.StudentAttendanceUncheckedCreateWithoutSchoolInput> | Prisma.StudentAttendanceCreateWithoutSchoolInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutSchoolInput | Prisma.StudentAttendanceCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.StudentAttendanceCreateManySchoolInputEnvelope
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
}

export type StudentAttendanceUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutSchoolInput, Prisma.StudentAttendanceUncheckedCreateWithoutSchoolInput> | Prisma.StudentAttendanceCreateWithoutSchoolInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutSchoolInput | Prisma.StudentAttendanceCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutSchoolInput | Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.StudentAttendanceCreateManySchoolInputEnvelope
  set?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  disconnect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  delete?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  update?: Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutSchoolInput | Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.StudentAttendanceUpdateManyWithWhereWithoutSchoolInput | Prisma.StudentAttendanceUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
}

export type StudentAttendanceUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutSchoolInput, Prisma.StudentAttendanceUncheckedCreateWithoutSchoolInput> | Prisma.StudentAttendanceCreateWithoutSchoolInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutSchoolInput | Prisma.StudentAttendanceCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutSchoolInput | Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.StudentAttendanceCreateManySchoolInputEnvelope
  set?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  disconnect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  delete?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  update?: Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutSchoolInput | Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.StudentAttendanceUpdateManyWithWhereWithoutSchoolInput | Prisma.StudentAttendanceUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
}

export type StudentAttendanceCreateNestedManyWithoutTermInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutTermInput, Prisma.StudentAttendanceUncheckedCreateWithoutTermInput> | Prisma.StudentAttendanceCreateWithoutTermInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutTermInput | Prisma.StudentAttendanceCreateOrConnectWithoutTermInput[]
  createMany?: Prisma.StudentAttendanceCreateManyTermInputEnvelope
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
}

export type StudentAttendanceUncheckedCreateNestedManyWithoutTermInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutTermInput, Prisma.StudentAttendanceUncheckedCreateWithoutTermInput> | Prisma.StudentAttendanceCreateWithoutTermInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutTermInput | Prisma.StudentAttendanceCreateOrConnectWithoutTermInput[]
  createMany?: Prisma.StudentAttendanceCreateManyTermInputEnvelope
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
}

export type StudentAttendanceUpdateManyWithoutTermNestedInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutTermInput, Prisma.StudentAttendanceUncheckedCreateWithoutTermInput> | Prisma.StudentAttendanceCreateWithoutTermInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutTermInput | Prisma.StudentAttendanceCreateOrConnectWithoutTermInput[]
  upsert?: Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutTermInput | Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutTermInput[]
  createMany?: Prisma.StudentAttendanceCreateManyTermInputEnvelope
  set?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  disconnect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  delete?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  update?: Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutTermInput | Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutTermInput[]
  updateMany?: Prisma.StudentAttendanceUpdateManyWithWhereWithoutTermInput | Prisma.StudentAttendanceUpdateManyWithWhereWithoutTermInput[]
  deleteMany?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
}

export type StudentAttendanceUncheckedUpdateManyWithoutTermNestedInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutTermInput, Prisma.StudentAttendanceUncheckedCreateWithoutTermInput> | Prisma.StudentAttendanceCreateWithoutTermInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutTermInput | Prisma.StudentAttendanceCreateOrConnectWithoutTermInput[]
  upsert?: Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutTermInput | Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutTermInput[]
  createMany?: Prisma.StudentAttendanceCreateManyTermInputEnvelope
  set?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  disconnect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  delete?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  update?: Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutTermInput | Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutTermInput[]
  updateMany?: Prisma.StudentAttendanceUpdateManyWithWhereWithoutTermInput | Prisma.StudentAttendanceUpdateManyWithWhereWithoutTermInput[]
  deleteMany?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
}

export type StudentAttendanceCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutClassInput, Prisma.StudentAttendanceUncheckedCreateWithoutClassInput> | Prisma.StudentAttendanceCreateWithoutClassInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutClassInput | Prisma.StudentAttendanceCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.StudentAttendanceCreateManyClassInputEnvelope
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
}

export type StudentAttendanceUncheckedCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutClassInput, Prisma.StudentAttendanceUncheckedCreateWithoutClassInput> | Prisma.StudentAttendanceCreateWithoutClassInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutClassInput | Prisma.StudentAttendanceCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.StudentAttendanceCreateManyClassInputEnvelope
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
}

export type StudentAttendanceUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutClassInput, Prisma.StudentAttendanceUncheckedCreateWithoutClassInput> | Prisma.StudentAttendanceCreateWithoutClassInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutClassInput | Prisma.StudentAttendanceCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutClassInput | Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.StudentAttendanceCreateManyClassInputEnvelope
  set?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  disconnect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  delete?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  update?: Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutClassInput | Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.StudentAttendanceUpdateManyWithWhereWithoutClassInput | Prisma.StudentAttendanceUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
}

export type StudentAttendanceUncheckedUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutClassInput, Prisma.StudentAttendanceUncheckedCreateWithoutClassInput> | Prisma.StudentAttendanceCreateWithoutClassInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutClassInput | Prisma.StudentAttendanceCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutClassInput | Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.StudentAttendanceCreateManyClassInputEnvelope
  set?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  disconnect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  delete?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  update?: Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutClassInput | Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.StudentAttendanceUpdateManyWithWhereWithoutClassInput | Prisma.StudentAttendanceUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
}

export type StudentAttendanceCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutStudentInput, Prisma.StudentAttendanceUncheckedCreateWithoutStudentInput> | Prisma.StudentAttendanceCreateWithoutStudentInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutStudentInput | Prisma.StudentAttendanceCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.StudentAttendanceCreateManyStudentInputEnvelope
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
}

export type StudentAttendanceUncheckedCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutStudentInput, Prisma.StudentAttendanceUncheckedCreateWithoutStudentInput> | Prisma.StudentAttendanceCreateWithoutStudentInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutStudentInput | Prisma.StudentAttendanceCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.StudentAttendanceCreateManyStudentInputEnvelope
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
}

export type StudentAttendanceUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutStudentInput, Prisma.StudentAttendanceUncheckedCreateWithoutStudentInput> | Prisma.StudentAttendanceCreateWithoutStudentInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutStudentInput | Prisma.StudentAttendanceCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutStudentInput | Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.StudentAttendanceCreateManyStudentInputEnvelope
  set?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  disconnect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  delete?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  update?: Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutStudentInput | Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.StudentAttendanceUpdateManyWithWhereWithoutStudentInput | Prisma.StudentAttendanceUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
}

export type StudentAttendanceUncheckedUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutStudentInput, Prisma.StudentAttendanceUncheckedCreateWithoutStudentInput> | Prisma.StudentAttendanceCreateWithoutStudentInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutStudentInput | Prisma.StudentAttendanceCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutStudentInput | Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.StudentAttendanceCreateManyStudentInputEnvelope
  set?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  disconnect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  delete?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  update?: Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutStudentInput | Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.StudentAttendanceUpdateManyWithWhereWithoutStudentInput | Prisma.StudentAttendanceUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
}

export type StudentAttendanceCreateNestedManyWithoutLessonInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutLessonInput, Prisma.StudentAttendanceUncheckedCreateWithoutLessonInput> | Prisma.StudentAttendanceCreateWithoutLessonInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutLessonInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutLessonInput | Prisma.StudentAttendanceCreateOrConnectWithoutLessonInput[]
  createMany?: Prisma.StudentAttendanceCreateManyLessonInputEnvelope
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
}

export type StudentAttendanceUncheckedCreateNestedManyWithoutLessonInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutLessonInput, Prisma.StudentAttendanceUncheckedCreateWithoutLessonInput> | Prisma.StudentAttendanceCreateWithoutLessonInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutLessonInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutLessonInput | Prisma.StudentAttendanceCreateOrConnectWithoutLessonInput[]
  createMany?: Prisma.StudentAttendanceCreateManyLessonInputEnvelope
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
}

export type StudentAttendanceUpdateManyWithoutLessonNestedInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutLessonInput, Prisma.StudentAttendanceUncheckedCreateWithoutLessonInput> | Prisma.StudentAttendanceCreateWithoutLessonInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutLessonInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutLessonInput | Prisma.StudentAttendanceCreateOrConnectWithoutLessonInput[]
  upsert?: Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutLessonInput | Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutLessonInput[]
  createMany?: Prisma.StudentAttendanceCreateManyLessonInputEnvelope
  set?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  disconnect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  delete?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  update?: Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutLessonInput | Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutLessonInput[]
  updateMany?: Prisma.StudentAttendanceUpdateManyWithWhereWithoutLessonInput | Prisma.StudentAttendanceUpdateManyWithWhereWithoutLessonInput[]
  deleteMany?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
}

export type StudentAttendanceUncheckedUpdateManyWithoutLessonNestedInput = {
  create?: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutLessonInput, Prisma.StudentAttendanceUncheckedCreateWithoutLessonInput> | Prisma.StudentAttendanceCreateWithoutLessonInput[] | Prisma.StudentAttendanceUncheckedCreateWithoutLessonInput[]
  connectOrCreate?: Prisma.StudentAttendanceCreateOrConnectWithoutLessonInput | Prisma.StudentAttendanceCreateOrConnectWithoutLessonInput[]
  upsert?: Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutLessonInput | Prisma.StudentAttendanceUpsertWithWhereUniqueWithoutLessonInput[]
  createMany?: Prisma.StudentAttendanceCreateManyLessonInputEnvelope
  set?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  disconnect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  delete?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  connect?: Prisma.StudentAttendanceWhereUniqueInput | Prisma.StudentAttendanceWhereUniqueInput[]
  update?: Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutLessonInput | Prisma.StudentAttendanceUpdateWithWhereUniqueWithoutLessonInput[]
  updateMany?: Prisma.StudentAttendanceUpdateManyWithWhereWithoutLessonInput | Prisma.StudentAttendanceUpdateManyWithWhereWithoutLessonInput[]
  deleteMany?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
}

export type EnumAttendanceStatusFieldUpdateOperationsInput = {
  set?: $Enums.AttendanceStatus
}

export type StudentAttendanceCreateWithoutSchoolInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  term: Prisma.TermCreateNestedOneWithoutStudentAttendancesInput
  student: Prisma.StudentCreateNestedOneWithoutAttendancesInput
  class?: Prisma.ClassCreateNestedOneWithoutAttendancesInput
  lesson?: Prisma.LessonCreateNestedOneWithoutAttendancesInput
}

export type StudentAttendanceUncheckedCreateWithoutSchoolInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  termId: string
  studentId: string
  classId?: string | null
  lessonId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceCreateOrConnectWithoutSchoolInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutSchoolInput, Prisma.StudentAttendanceUncheckedCreateWithoutSchoolInput>
}

export type StudentAttendanceCreateManySchoolInputEnvelope = {
  data: Prisma.StudentAttendanceCreateManySchoolInput | Prisma.StudentAttendanceCreateManySchoolInput[]
  skipDuplicates?: boolean
}

export type StudentAttendanceUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentAttendanceUpdateWithoutSchoolInput, Prisma.StudentAttendanceUncheckedUpdateWithoutSchoolInput>
  create: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutSchoolInput, Prisma.StudentAttendanceUncheckedCreateWithoutSchoolInput>
}

export type StudentAttendanceUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateWithoutSchoolInput, Prisma.StudentAttendanceUncheckedUpdateWithoutSchoolInput>
}

export type StudentAttendanceUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.StudentAttendanceScalarWhereInput
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateManyMutationInput, Prisma.StudentAttendanceUncheckedUpdateManyWithoutSchoolInput>
}

export type StudentAttendanceScalarWhereInput = {
  AND?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
  OR?: Prisma.StudentAttendanceScalarWhereInput[]
  NOT?: Prisma.StudentAttendanceScalarWhereInput | Prisma.StudentAttendanceScalarWhereInput[]
  id?: Prisma.StringFilter<"StudentAttendance"> | string
  date?: Prisma.DateTimeFilter<"StudentAttendance"> | Date | string
  status?: Prisma.EnumAttendanceStatusFilter<"StudentAttendance"> | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFilter<"StudentAttendance"> | string
  termId?: Prisma.StringFilter<"StudentAttendance"> | string
  studentId?: Prisma.StringFilter<"StudentAttendance"> | string
  classId?: Prisma.StringNullableFilter<"StudentAttendance"> | string | null
  lessonId?: Prisma.StringNullableFilter<"StudentAttendance"> | string | null
  createdAt?: Prisma.DateTimeFilter<"StudentAttendance"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"StudentAttendance"> | Date | string
}

export type StudentAttendanceCreateWithoutTermInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentAttendancesInput
  student: Prisma.StudentCreateNestedOneWithoutAttendancesInput
  class?: Prisma.ClassCreateNestedOneWithoutAttendancesInput
  lesson?: Prisma.LessonCreateNestedOneWithoutAttendancesInput
}

export type StudentAttendanceUncheckedCreateWithoutTermInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  schoolId: string
  studentId: string
  classId?: string | null
  lessonId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceCreateOrConnectWithoutTermInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutTermInput, Prisma.StudentAttendanceUncheckedCreateWithoutTermInput>
}

export type StudentAttendanceCreateManyTermInputEnvelope = {
  data: Prisma.StudentAttendanceCreateManyTermInput | Prisma.StudentAttendanceCreateManyTermInput[]
  skipDuplicates?: boolean
}

export type StudentAttendanceUpsertWithWhereUniqueWithoutTermInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentAttendanceUpdateWithoutTermInput, Prisma.StudentAttendanceUncheckedUpdateWithoutTermInput>
  create: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutTermInput, Prisma.StudentAttendanceUncheckedCreateWithoutTermInput>
}

export type StudentAttendanceUpdateWithWhereUniqueWithoutTermInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateWithoutTermInput, Prisma.StudentAttendanceUncheckedUpdateWithoutTermInput>
}

export type StudentAttendanceUpdateManyWithWhereWithoutTermInput = {
  where: Prisma.StudentAttendanceScalarWhereInput
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateManyMutationInput, Prisma.StudentAttendanceUncheckedUpdateManyWithoutTermInput>
}

export type StudentAttendanceCreateWithoutClassInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentAttendancesInput
  term: Prisma.TermCreateNestedOneWithoutStudentAttendancesInput
  student: Prisma.StudentCreateNestedOneWithoutAttendancesInput
  lesson?: Prisma.LessonCreateNestedOneWithoutAttendancesInput
}

export type StudentAttendanceUncheckedCreateWithoutClassInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  schoolId: string
  termId: string
  studentId: string
  lessonId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceCreateOrConnectWithoutClassInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutClassInput, Prisma.StudentAttendanceUncheckedCreateWithoutClassInput>
}

export type StudentAttendanceCreateManyClassInputEnvelope = {
  data: Prisma.StudentAttendanceCreateManyClassInput | Prisma.StudentAttendanceCreateManyClassInput[]
  skipDuplicates?: boolean
}

export type StudentAttendanceUpsertWithWhereUniqueWithoutClassInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentAttendanceUpdateWithoutClassInput, Prisma.StudentAttendanceUncheckedUpdateWithoutClassInput>
  create: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutClassInput, Prisma.StudentAttendanceUncheckedCreateWithoutClassInput>
}

export type StudentAttendanceUpdateWithWhereUniqueWithoutClassInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateWithoutClassInput, Prisma.StudentAttendanceUncheckedUpdateWithoutClassInput>
}

export type StudentAttendanceUpdateManyWithWhereWithoutClassInput = {
  where: Prisma.StudentAttendanceScalarWhereInput
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateManyMutationInput, Prisma.StudentAttendanceUncheckedUpdateManyWithoutClassInput>
}

export type StudentAttendanceCreateWithoutStudentInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentAttendancesInput
  term: Prisma.TermCreateNestedOneWithoutStudentAttendancesInput
  class?: Prisma.ClassCreateNestedOneWithoutAttendancesInput
  lesson?: Prisma.LessonCreateNestedOneWithoutAttendancesInput
}

export type StudentAttendanceUncheckedCreateWithoutStudentInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  schoolId: string
  termId: string
  classId?: string | null
  lessonId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceCreateOrConnectWithoutStudentInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutStudentInput, Prisma.StudentAttendanceUncheckedCreateWithoutStudentInput>
}

export type StudentAttendanceCreateManyStudentInputEnvelope = {
  data: Prisma.StudentAttendanceCreateManyStudentInput | Prisma.StudentAttendanceCreateManyStudentInput[]
  skipDuplicates?: boolean
}

export type StudentAttendanceUpsertWithWhereUniqueWithoutStudentInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentAttendanceUpdateWithoutStudentInput, Prisma.StudentAttendanceUncheckedUpdateWithoutStudentInput>
  create: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutStudentInput, Prisma.StudentAttendanceUncheckedCreateWithoutStudentInput>
}

export type StudentAttendanceUpdateWithWhereUniqueWithoutStudentInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateWithoutStudentInput, Prisma.StudentAttendanceUncheckedUpdateWithoutStudentInput>
}

export type StudentAttendanceUpdateManyWithWhereWithoutStudentInput = {
  where: Prisma.StudentAttendanceScalarWhereInput
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateManyMutationInput, Prisma.StudentAttendanceUncheckedUpdateManyWithoutStudentInput>
}

export type StudentAttendanceCreateWithoutLessonInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentAttendancesInput
  term: Prisma.TermCreateNestedOneWithoutStudentAttendancesInput
  student: Prisma.StudentCreateNestedOneWithoutAttendancesInput
  class?: Prisma.ClassCreateNestedOneWithoutAttendancesInput
}

export type StudentAttendanceUncheckedCreateWithoutLessonInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  schoolId: string
  termId: string
  studentId: string
  classId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceCreateOrConnectWithoutLessonInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutLessonInput, Prisma.StudentAttendanceUncheckedCreateWithoutLessonInput>
}

export type StudentAttendanceCreateManyLessonInputEnvelope = {
  data: Prisma.StudentAttendanceCreateManyLessonInput | Prisma.StudentAttendanceCreateManyLessonInput[]
  skipDuplicates?: boolean
}

export type StudentAttendanceUpsertWithWhereUniqueWithoutLessonInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentAttendanceUpdateWithoutLessonInput, Prisma.StudentAttendanceUncheckedUpdateWithoutLessonInput>
  create: Prisma.XOR<Prisma.StudentAttendanceCreateWithoutLessonInput, Prisma.StudentAttendanceUncheckedCreateWithoutLessonInput>
}

export type StudentAttendanceUpdateWithWhereUniqueWithoutLessonInput = {
  where: Prisma.StudentAttendanceWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateWithoutLessonInput, Prisma.StudentAttendanceUncheckedUpdateWithoutLessonInput>
}

export type StudentAttendanceUpdateManyWithWhereWithoutLessonInput = {
  where: Prisma.StudentAttendanceScalarWhereInput
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateManyMutationInput, Prisma.StudentAttendanceUncheckedUpdateManyWithoutLessonInput>
}

export type StudentAttendanceCreateManySchoolInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  termId: string
  studentId: string
  classId?: string | null
  lessonId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  term?: Prisma.TermUpdateOneRequiredWithoutStudentAttendancesNestedInput
  student?: Prisma.StudentUpdateOneRequiredWithoutAttendancesNestedInput
  class?: Prisma.ClassUpdateOneWithoutAttendancesNestedInput
  lesson?: Prisma.LessonUpdateOneWithoutAttendancesNestedInput
}

export type StudentAttendanceUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lessonId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lessonId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceCreateManyTermInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  schoolId: string
  studentId: string
  classId?: string | null
  lessonId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceUpdateWithoutTermInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentAttendancesNestedInput
  student?: Prisma.StudentUpdateOneRequiredWithoutAttendancesNestedInput
  class?: Prisma.ClassUpdateOneWithoutAttendancesNestedInput
  lesson?: Prisma.LessonUpdateOneWithoutAttendancesNestedInput
}

export type StudentAttendanceUncheckedUpdateWithoutTermInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lessonId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceUncheckedUpdateManyWithoutTermInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lessonId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceCreateManyClassInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  schoolId: string
  termId: string
  studentId: string
  lessonId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentAttendancesNestedInput
  term?: Prisma.TermUpdateOneRequiredWithoutStudentAttendancesNestedInput
  student?: Prisma.StudentUpdateOneRequiredWithoutAttendancesNestedInput
  lesson?: Prisma.LessonUpdateOneWithoutAttendancesNestedInput
}

export type StudentAttendanceUncheckedUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  lessonId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceUncheckedUpdateManyWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  lessonId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceCreateManyStudentInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  schoolId: string
  termId: string
  classId?: string | null
  lessonId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentAttendancesNestedInput
  term?: Prisma.TermUpdateOneRequiredWithoutStudentAttendancesNestedInput
  class?: Prisma.ClassUpdateOneWithoutAttendancesNestedInput
  lesson?: Prisma.LessonUpdateOneWithoutAttendancesNestedInput
}

export type StudentAttendanceUncheckedUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lessonId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceUncheckedUpdateManyWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lessonId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceCreateManyLessonInput = {
  id?: string
  date: Date | string
  status: $Enums.AttendanceStatus
  schoolId: string
  termId: string
  studentId: string
  classId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentAttendanceUpdateWithoutLessonInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentAttendancesNestedInput
  term?: Prisma.TermUpdateOneRequiredWithoutStudentAttendancesNestedInput
  student?: Prisma.StudentUpdateOneRequiredWithoutAttendancesNestedInput
  class?: Prisma.ClassUpdateOneWithoutAttendancesNestedInput
}

export type StudentAttendanceUncheckedUpdateWithoutLessonInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentAttendanceUncheckedUpdateManyWithoutLessonInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  date?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  status?: Prisma.EnumAttendanceStatusFieldUpdateOperationsInput | $Enums.AttendanceStatus
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type StudentAttendanceSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  date?: boolean
  status?: boolean
  schoolId?: boolean
  termId?: boolean
  studentId?: boolean
  classId?: boolean
  lessonId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.StudentAttendance$classArgs<ExtArgs>
  lesson?: boolean | Prisma.StudentAttendance$lessonArgs<ExtArgs>
}, ExtArgs["result"]["studentAttendance"]>

export type StudentAttendanceSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  date?: boolean
  status?: boolean
  schoolId?: boolean
  termId?: boolean
  studentId?: boolean
  classId?: boolean
  lessonId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.StudentAttendance$classArgs<ExtArgs>
  lesson?: boolean | Prisma.StudentAttendance$lessonArgs<ExtArgs>
}, ExtArgs["result"]["studentAttendance"]>

export type StudentAttendanceSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  date?: boolean
  status?: boolean
  schoolId?: boolean
  termId?: boolean
  studentId?: boolean
  classId?: boolean
  lessonId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.StudentAttendance$classArgs<ExtArgs>
  lesson?: boolean | Prisma.StudentAttendance$lessonArgs<ExtArgs>
}, ExtArgs["result"]["studentAttendance"]>

export type StudentAttendanceSelectScalar = {
  id?: boolean
  date?: boolean
  status?: boolean
  schoolId?: boolean
  termId?: boolean
  studentId?: boolean
  classId?: boolean
  lessonId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type StudentAttendanceOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "date" | "status" | "schoolId" | "termId" | "studentId" | "classId" | "lessonId" | "createdAt" | "updatedAt", ExtArgs["result"]["studentAttendance"]>
export type StudentAttendanceInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.StudentAttendance$classArgs<ExtArgs>
  lesson?: boolean | Prisma.StudentAttendance$lessonArgs<ExtArgs>
}
export type StudentAttendanceIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.StudentAttendance$classArgs<ExtArgs>
  lesson?: boolean | Prisma.StudentAttendance$lessonArgs<ExtArgs>
}
export type StudentAttendanceIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.StudentAttendance$classArgs<ExtArgs>
  lesson?: boolean | Prisma.StudentAttendance$lessonArgs<ExtArgs>
}

export type $StudentAttendancePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "StudentAttendance"
  objects: {
    school: Prisma.$SchoolPayload<ExtArgs>
    term: Prisma.$TermPayload<ExtArgs>
    student: Prisma.$StudentPayload<ExtArgs>
    class: Prisma.$ClassPayload<ExtArgs> | null
    lesson: Prisma.$LessonPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    date: Date
    status: $Enums.AttendanceStatus
    schoolId: string
    termId: string
    studentId: string
    classId: string | null
    lessonId: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["studentAttendance"]>
  composites: {}
}

export type StudentAttendanceGetPayload<S extends boolean | null | undefined | StudentAttendanceDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload, S>

export type StudentAttendanceCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<StudentAttendanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: StudentAttendanceCountAggregateInputType | true
  }

export interface StudentAttendanceDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StudentAttendance'], meta: { name: 'StudentAttendance' } }
  /**
   * Find zero or one StudentAttendance that matches the filter.
   * @param {StudentAttendanceFindUniqueArgs} args - Arguments to find a StudentAttendance
   * @example
   * // Get one StudentAttendance
   * const studentAttendance = await prisma.studentAttendance.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends StudentAttendanceFindUniqueArgs>(args: Prisma.SelectSubset<T, StudentAttendanceFindUniqueArgs<ExtArgs>>): Prisma.Prisma__StudentAttendanceClient<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one StudentAttendance that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {StudentAttendanceFindUniqueOrThrowArgs} args - Arguments to find a StudentAttendance
   * @example
   * // Get one StudentAttendance
   * const studentAttendance = await prisma.studentAttendance.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends StudentAttendanceFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, StudentAttendanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__StudentAttendanceClient<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first StudentAttendance that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentAttendanceFindFirstArgs} args - Arguments to find a StudentAttendance
   * @example
   * // Get one StudentAttendance
   * const studentAttendance = await prisma.studentAttendance.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends StudentAttendanceFindFirstArgs>(args?: Prisma.SelectSubset<T, StudentAttendanceFindFirstArgs<ExtArgs>>): Prisma.Prisma__StudentAttendanceClient<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first StudentAttendance that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentAttendanceFindFirstOrThrowArgs} args - Arguments to find a StudentAttendance
   * @example
   * // Get one StudentAttendance
   * const studentAttendance = await prisma.studentAttendance.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends StudentAttendanceFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, StudentAttendanceFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__StudentAttendanceClient<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more StudentAttendances that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentAttendanceFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all StudentAttendances
   * const studentAttendances = await prisma.studentAttendance.findMany()
   * 
   * // Get first 10 StudentAttendances
   * const studentAttendances = await prisma.studentAttendance.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const studentAttendanceWithIdOnly = await prisma.studentAttendance.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends StudentAttendanceFindManyArgs>(args?: Prisma.SelectSubset<T, StudentAttendanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a StudentAttendance.
   * @param {StudentAttendanceCreateArgs} args - Arguments to create a StudentAttendance.
   * @example
   * // Create one StudentAttendance
   * const StudentAttendance = await prisma.studentAttendance.create({
   *   data: {
   *     // ... data to create a StudentAttendance
   *   }
   * })
   * 
   */
  create<T extends StudentAttendanceCreateArgs>(args: Prisma.SelectSubset<T, StudentAttendanceCreateArgs<ExtArgs>>): Prisma.Prisma__StudentAttendanceClient<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many StudentAttendances.
   * @param {StudentAttendanceCreateManyArgs} args - Arguments to create many StudentAttendances.
   * @example
   * // Create many StudentAttendances
   * const studentAttendance = await prisma.studentAttendance.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends StudentAttendanceCreateManyArgs>(args?: Prisma.SelectSubset<T, StudentAttendanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many StudentAttendances and returns the data saved in the database.
   * @param {StudentAttendanceCreateManyAndReturnArgs} args - Arguments to create many StudentAttendances.
   * @example
   * // Create many StudentAttendances
   * const studentAttendance = await prisma.studentAttendance.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many StudentAttendances and only return the `id`
   * const studentAttendanceWithIdOnly = await prisma.studentAttendance.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends StudentAttendanceCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, StudentAttendanceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a StudentAttendance.
   * @param {StudentAttendanceDeleteArgs} args - Arguments to delete one StudentAttendance.
   * @example
   * // Delete one StudentAttendance
   * const StudentAttendance = await prisma.studentAttendance.delete({
   *   where: {
   *     // ... filter to delete one StudentAttendance
   *   }
   * })
   * 
   */
  delete<T extends StudentAttendanceDeleteArgs>(args: Prisma.SelectSubset<T, StudentAttendanceDeleteArgs<ExtArgs>>): Prisma.Prisma__StudentAttendanceClient<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one StudentAttendance.
   * @param {StudentAttendanceUpdateArgs} args - Arguments to update one StudentAttendance.
   * @example
   * // Update one StudentAttendance
   * const studentAttendance = await prisma.studentAttendance.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends StudentAttendanceUpdateArgs>(args: Prisma.SelectSubset<T, StudentAttendanceUpdateArgs<ExtArgs>>): Prisma.Prisma__StudentAttendanceClient<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more StudentAttendances.
   * @param {StudentAttendanceDeleteManyArgs} args - Arguments to filter StudentAttendances to delete.
   * @example
   * // Delete a few StudentAttendances
   * const { count } = await prisma.studentAttendance.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends StudentAttendanceDeleteManyArgs>(args?: Prisma.SelectSubset<T, StudentAttendanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more StudentAttendances.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentAttendanceUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many StudentAttendances
   * const studentAttendance = await prisma.studentAttendance.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends StudentAttendanceUpdateManyArgs>(args: Prisma.SelectSubset<T, StudentAttendanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more StudentAttendances and returns the data updated in the database.
   * @param {StudentAttendanceUpdateManyAndReturnArgs} args - Arguments to update many StudentAttendances.
   * @example
   * // Update many StudentAttendances
   * const studentAttendance = await prisma.studentAttendance.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more StudentAttendances and only return the `id`
   * const studentAttendanceWithIdOnly = await prisma.studentAttendance.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends StudentAttendanceUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, StudentAttendanceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one StudentAttendance.
   * @param {StudentAttendanceUpsertArgs} args - Arguments to update or create a StudentAttendance.
   * @example
   * // Update or create a StudentAttendance
   * const studentAttendance = await prisma.studentAttendance.upsert({
   *   create: {
   *     // ... data to create a StudentAttendance
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the StudentAttendance we want to update
   *   }
   * })
   */
  upsert<T extends StudentAttendanceUpsertArgs>(args: Prisma.SelectSubset<T, StudentAttendanceUpsertArgs<ExtArgs>>): Prisma.Prisma__StudentAttendanceClient<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of StudentAttendances.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentAttendanceCountArgs} args - Arguments to filter StudentAttendances to count.
   * @example
   * // Count the number of StudentAttendances
   * const count = await prisma.studentAttendance.count({
   *   where: {
   *     // ... the filter for the StudentAttendances we want to count
   *   }
   * })
  **/
  count<T extends StudentAttendanceCountArgs>(
    args?: Prisma.Subset<T, StudentAttendanceCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], StudentAttendanceCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a StudentAttendance.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentAttendanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends StudentAttendanceAggregateArgs>(args: Prisma.Subset<T, StudentAttendanceAggregateArgs>): Prisma.PrismaPromise<GetStudentAttendanceAggregateType<T>>

  /**
   * Group by StudentAttendance.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentAttendanceGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends StudentAttendanceGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: StudentAttendanceGroupByArgs['orderBy'] }
      : { orderBy?: StudentAttendanceGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, StudentAttendanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudentAttendanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the StudentAttendance model
 */
readonly fields: StudentAttendanceFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for StudentAttendance.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__StudentAttendanceClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>): Prisma.Prisma__SchoolClient<runtime.Types.Result.GetResult<Prisma.$SchoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  term<T extends Prisma.TermDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TermDefaultArgs<ExtArgs>>): Prisma.Prisma__TermClient<runtime.Types.Result.GetResult<Prisma.$TermPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  student<T extends Prisma.StudentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.StudentDefaultArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  class<T extends Prisma.StudentAttendance$classArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.StudentAttendance$classArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  lesson<T extends Prisma.StudentAttendance$lessonArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.StudentAttendance$lessonArgs<ExtArgs>>): Prisma.Prisma__LessonClient<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the StudentAttendance model
 */
export interface StudentAttendanceFieldRefs {
  readonly id: Prisma.FieldRef<"StudentAttendance", 'String'>
  readonly date: Prisma.FieldRef<"StudentAttendance", 'DateTime'>
  readonly status: Prisma.FieldRef<"StudentAttendance", 'AttendanceStatus'>
  readonly schoolId: Prisma.FieldRef<"StudentAttendance", 'String'>
  readonly termId: Prisma.FieldRef<"StudentAttendance", 'String'>
  readonly studentId: Prisma.FieldRef<"StudentAttendance", 'String'>
  readonly classId: Prisma.FieldRef<"StudentAttendance", 'String'>
  readonly lessonId: Prisma.FieldRef<"StudentAttendance", 'String'>
  readonly createdAt: Prisma.FieldRef<"StudentAttendance", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"StudentAttendance", 'DateTime'>
}
    

// Custom InputTypes
/**
 * StudentAttendance findUnique
 */
export type StudentAttendanceFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  /**
   * Filter, which StudentAttendance to fetch.
   */
  where: Prisma.StudentAttendanceWhereUniqueInput
}

/**
 * StudentAttendance findUniqueOrThrow
 */
export type StudentAttendanceFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  /**
   * Filter, which StudentAttendance to fetch.
   */
  where: Prisma.StudentAttendanceWhereUniqueInput
}

/**
 * StudentAttendance findFirst
 */
export type StudentAttendanceFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  /**
   * Filter, which StudentAttendance to fetch.
   */
  where?: Prisma.StudentAttendanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentAttendances to fetch.
   */
  orderBy?: Prisma.StudentAttendanceOrderByWithRelationInput | Prisma.StudentAttendanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for StudentAttendances.
   */
  cursor?: Prisma.StudentAttendanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentAttendances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentAttendances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of StudentAttendances.
   */
  distinct?: Prisma.StudentAttendanceScalarFieldEnum | Prisma.StudentAttendanceScalarFieldEnum[]
}

/**
 * StudentAttendance findFirstOrThrow
 */
export type StudentAttendanceFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  /**
   * Filter, which StudentAttendance to fetch.
   */
  where?: Prisma.StudentAttendanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentAttendances to fetch.
   */
  orderBy?: Prisma.StudentAttendanceOrderByWithRelationInput | Prisma.StudentAttendanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for StudentAttendances.
   */
  cursor?: Prisma.StudentAttendanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentAttendances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentAttendances.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of StudentAttendances.
   */
  distinct?: Prisma.StudentAttendanceScalarFieldEnum | Prisma.StudentAttendanceScalarFieldEnum[]
}

/**
 * StudentAttendance findMany
 */
export type StudentAttendanceFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  /**
   * Filter, which StudentAttendances to fetch.
   */
  where?: Prisma.StudentAttendanceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentAttendances to fetch.
   */
  orderBy?: Prisma.StudentAttendanceOrderByWithRelationInput | Prisma.StudentAttendanceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing StudentAttendances.
   */
  cursor?: Prisma.StudentAttendanceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentAttendances from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentAttendances.
   */
  skip?: number
  distinct?: Prisma.StudentAttendanceScalarFieldEnum | Prisma.StudentAttendanceScalarFieldEnum[]
}

/**
 * StudentAttendance create
 */
export type StudentAttendanceCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  /**
   * The data needed to create a StudentAttendance.
   */
  data: Prisma.XOR<Prisma.StudentAttendanceCreateInput, Prisma.StudentAttendanceUncheckedCreateInput>
}

/**
 * StudentAttendance createMany
 */
export type StudentAttendanceCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many StudentAttendances.
   */
  data: Prisma.StudentAttendanceCreateManyInput | Prisma.StudentAttendanceCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * StudentAttendance createManyAndReturn
 */
export type StudentAttendanceCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * The data used to create many StudentAttendances.
   */
  data: Prisma.StudentAttendanceCreateManyInput | Prisma.StudentAttendanceCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * StudentAttendance update
 */
export type StudentAttendanceUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  /**
   * The data needed to update a StudentAttendance.
   */
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateInput, Prisma.StudentAttendanceUncheckedUpdateInput>
  /**
   * Choose, which StudentAttendance to update.
   */
  where: Prisma.StudentAttendanceWhereUniqueInput
}

/**
 * StudentAttendance updateMany
 */
export type StudentAttendanceUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update StudentAttendances.
   */
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateManyMutationInput, Prisma.StudentAttendanceUncheckedUpdateManyInput>
  /**
   * Filter which StudentAttendances to update
   */
  where?: Prisma.StudentAttendanceWhereInput
  /**
   * Limit how many StudentAttendances to update.
   */
  limit?: number
}

/**
 * StudentAttendance updateManyAndReturn
 */
export type StudentAttendanceUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * The data used to update StudentAttendances.
   */
  data: Prisma.XOR<Prisma.StudentAttendanceUpdateManyMutationInput, Prisma.StudentAttendanceUncheckedUpdateManyInput>
  /**
   * Filter which StudentAttendances to update
   */
  where?: Prisma.StudentAttendanceWhereInput
  /**
   * Limit how many StudentAttendances to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * StudentAttendance upsert
 */
export type StudentAttendanceUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  /**
   * The filter to search for the StudentAttendance to update in case it exists.
   */
  where: Prisma.StudentAttendanceWhereUniqueInput
  /**
   * In case the StudentAttendance found by the `where` argument doesn't exist, create a new StudentAttendance with this data.
   */
  create: Prisma.XOR<Prisma.StudentAttendanceCreateInput, Prisma.StudentAttendanceUncheckedCreateInput>
  /**
   * In case the StudentAttendance was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.StudentAttendanceUpdateInput, Prisma.StudentAttendanceUncheckedUpdateInput>
}

/**
 * StudentAttendance delete
 */
export type StudentAttendanceDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  /**
   * Filter which StudentAttendance to delete.
   */
  where: Prisma.StudentAttendanceWhereUniqueInput
}

/**
 * StudentAttendance deleteMany
 */
export type StudentAttendanceDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which StudentAttendances to delete
   */
  where?: Prisma.StudentAttendanceWhereInput
  /**
   * Limit how many StudentAttendances to delete.
   */
  limit?: number
}

/**
 * StudentAttendance.class
 */
export type StudentAttendance$classArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  where?: Prisma.ClassWhereInput
}

/**
 * StudentAttendance.lesson
 */
export type StudentAttendance$lessonArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
  where?: Prisma.LessonWhereInput
}

/**
 * StudentAttendance without action
 */
export type StudentAttendanceDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
}
