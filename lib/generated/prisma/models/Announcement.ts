
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Announcement` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Announcement
 * 
 */
export type AnnouncementModel = runtime.Types.Result.DefaultSelection<Prisma.$AnnouncementPayload>

export type AggregateAnnouncement = {
  _count: AnnouncementCountAggregateOutputType | null
  _min: AnnouncementMinAggregateOutputType | null
  _max: AnnouncementMaxAggregateOutputType | null
}

export type AnnouncementMinAggregateOutputType = {
  id: string | null
  title: string | null
  content: string | null
  isPublished: boolean | null
  draftedAt: Date | null
  publishedAt: Date | null
  updatedAt: Date | null
  schoolId: string | null
  termId: string | null
  classId: string | null
  gradeId: string | null
}

export type AnnouncementMaxAggregateOutputType = {
  id: string | null
  title: string | null
  content: string | null
  isPublished: boolean | null
  draftedAt: Date | null
  publishedAt: Date | null
  updatedAt: Date | null
  schoolId: string | null
  termId: string | null
  classId: string | null
  gradeId: string | null
}

export type AnnouncementCountAggregateOutputType = {
  id: number
  title: number
  content: number
  isPublished: number
  draftedAt: number
  publishedAt: number
  updatedAt: number
  schoolId: number
  termId: number
  classId: number
  gradeId: number
  _all: number
}


export type AnnouncementMinAggregateInputType = {
  id?: true
  title?: true
  content?: true
  isPublished?: true
  draftedAt?: true
  publishedAt?: true
  updatedAt?: true
  schoolId?: true
  termId?: true
  classId?: true
  gradeId?: true
}

export type AnnouncementMaxAggregateInputType = {
  id?: true
  title?: true
  content?: true
  isPublished?: true
  draftedAt?: true
  publishedAt?: true
  updatedAt?: true
  schoolId?: true
  termId?: true
  classId?: true
  gradeId?: true
}

export type AnnouncementCountAggregateInputType = {
  id?: true
  title?: true
  content?: true
  isPublished?: true
  draftedAt?: true
  publishedAt?: true
  updatedAt?: true
  schoolId?: true
  termId?: true
  classId?: true
  gradeId?: true
  _all?: true
}

export type AnnouncementAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Announcement to aggregate.
   */
  where?: Prisma.AnnouncementWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Announcements to fetch.
   */
  orderBy?: Prisma.AnnouncementOrderByWithRelationInput | Prisma.AnnouncementOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.AnnouncementWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Announcements from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Announcements.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Announcements
  **/
  _count?: true | AnnouncementCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AnnouncementMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AnnouncementMaxAggregateInputType
}

export type GetAnnouncementAggregateType<T extends AnnouncementAggregateArgs> = {
      [P in keyof T & keyof AggregateAnnouncement]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAnnouncement[P]>
    : Prisma.GetScalarType<T[P], AggregateAnnouncement[P]>
}




export type AnnouncementGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AnnouncementWhereInput
  orderBy?: Prisma.AnnouncementOrderByWithAggregationInput | Prisma.AnnouncementOrderByWithAggregationInput[]
  by: Prisma.AnnouncementScalarFieldEnum[] | Prisma.AnnouncementScalarFieldEnum
  having?: Prisma.AnnouncementScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AnnouncementCountAggregateInputType | true
  _min?: AnnouncementMinAggregateInputType
  _max?: AnnouncementMaxAggregateInputType
}

export type AnnouncementGroupByOutputType = {
  id: string
  title: string
  content: string
  isPublished: boolean
  draftedAt: Date
  publishedAt: Date | null
  updatedAt: Date
  schoolId: string
  termId: string
  classId: string | null
  gradeId: string | null
  _count: AnnouncementCountAggregateOutputType | null
  _min: AnnouncementMinAggregateOutputType | null
  _max: AnnouncementMaxAggregateOutputType | null
}

type GetAnnouncementGroupByPayload<T extends AnnouncementGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AnnouncementGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AnnouncementGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AnnouncementGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AnnouncementGroupByOutputType[P]>
      }
    >
  >



export type AnnouncementWhereInput = {
  AND?: Prisma.AnnouncementWhereInput | Prisma.AnnouncementWhereInput[]
  OR?: Prisma.AnnouncementWhereInput[]
  NOT?: Prisma.AnnouncementWhereInput | Prisma.AnnouncementWhereInput[]
  id?: Prisma.StringFilter<"Announcement"> | string
  title?: Prisma.StringFilter<"Announcement"> | string
  content?: Prisma.StringFilter<"Announcement"> | string
  isPublished?: Prisma.BoolFilter<"Announcement"> | boolean
  draftedAt?: Prisma.DateTimeFilter<"Announcement"> | Date | string
  publishedAt?: Prisma.DateTimeNullableFilter<"Announcement"> | Date | string | null
  updatedAt?: Prisma.DateTimeFilter<"Announcement"> | Date | string
  schoolId?: Prisma.StringFilter<"Announcement"> | string
  termId?: Prisma.StringFilter<"Announcement"> | string
  classId?: Prisma.StringNullableFilter<"Announcement"> | string | null
  gradeId?: Prisma.StringNullableFilter<"Announcement"> | string | null
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  term?: Prisma.XOR<Prisma.TermScalarRelationFilter, Prisma.TermWhereInput>
  class?: Prisma.XOR<Prisma.ClassNullableScalarRelationFilter, Prisma.ClassWhereInput> | null
  grade?: Prisma.XOR<Prisma.GradeNullableScalarRelationFilter, Prisma.GradeWhereInput> | null
}

export type AnnouncementOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  isPublished?: Prisma.SortOrder
  draftedAt?: Prisma.SortOrder
  publishedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  classId?: Prisma.SortOrderInput | Prisma.SortOrder
  gradeId?: Prisma.SortOrderInput | Prisma.SortOrder
  school?: Prisma.SchoolOrderByWithRelationInput
  term?: Prisma.TermOrderByWithRelationInput
  class?: Prisma.ClassOrderByWithRelationInput
  grade?: Prisma.GradeOrderByWithRelationInput
}

export type AnnouncementWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.AnnouncementWhereInput | Prisma.AnnouncementWhereInput[]
  OR?: Prisma.AnnouncementWhereInput[]
  NOT?: Prisma.AnnouncementWhereInput | Prisma.AnnouncementWhereInput[]
  title?: Prisma.StringFilter<"Announcement"> | string
  content?: Prisma.StringFilter<"Announcement"> | string
  isPublished?: Prisma.BoolFilter<"Announcement"> | boolean
  draftedAt?: Prisma.DateTimeFilter<"Announcement"> | Date | string
  publishedAt?: Prisma.DateTimeNullableFilter<"Announcement"> | Date | string | null
  updatedAt?: Prisma.DateTimeFilter<"Announcement"> | Date | string
  schoolId?: Prisma.StringFilter<"Announcement"> | string
  termId?: Prisma.StringFilter<"Announcement"> | string
  classId?: Prisma.StringNullableFilter<"Announcement"> | string | null
  gradeId?: Prisma.StringNullableFilter<"Announcement"> | string | null
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  term?: Prisma.XOR<Prisma.TermScalarRelationFilter, Prisma.TermWhereInput>
  class?: Prisma.XOR<Prisma.ClassNullableScalarRelationFilter, Prisma.ClassWhereInput> | null
  grade?: Prisma.XOR<Prisma.GradeNullableScalarRelationFilter, Prisma.GradeWhereInput> | null
}, "id">

export type AnnouncementOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  isPublished?: Prisma.SortOrder
  draftedAt?: Prisma.SortOrder
  publishedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  classId?: Prisma.SortOrderInput | Prisma.SortOrder
  gradeId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.AnnouncementCountOrderByAggregateInput
  _max?: Prisma.AnnouncementMaxOrderByAggregateInput
  _min?: Prisma.AnnouncementMinOrderByAggregateInput
}

export type AnnouncementScalarWhereWithAggregatesInput = {
  AND?: Prisma.AnnouncementScalarWhereWithAggregatesInput | Prisma.AnnouncementScalarWhereWithAggregatesInput[]
  OR?: Prisma.AnnouncementScalarWhereWithAggregatesInput[]
  NOT?: Prisma.AnnouncementScalarWhereWithAggregatesInput | Prisma.AnnouncementScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Announcement"> | string
  title?: Prisma.StringWithAggregatesFilter<"Announcement"> | string
  content?: Prisma.StringWithAggregatesFilter<"Announcement"> | string
  isPublished?: Prisma.BoolWithAggregatesFilter<"Announcement"> | boolean
  draftedAt?: Prisma.DateTimeWithAggregatesFilter<"Announcement"> | Date | string
  publishedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Announcement"> | Date | string | null
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Announcement"> | Date | string
  schoolId?: Prisma.StringWithAggregatesFilter<"Announcement"> | string
  termId?: Prisma.StringWithAggregatesFilter<"Announcement"> | string
  classId?: Prisma.StringNullableWithAggregatesFilter<"Announcement"> | string | null
  gradeId?: Prisma.StringNullableWithAggregatesFilter<"Announcement"> | string | null
}

export type AnnouncementCreateInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutAnnouncementsInput
  term: Prisma.TermCreateNestedOneWithoutAnnouncementsInput
  class?: Prisma.ClassCreateNestedOneWithoutAnnouncementsInput
  grade?: Prisma.GradeCreateNestedOneWithoutAnnouncementsInput
}

export type AnnouncementUncheckedCreateInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  schoolId: string
  termId: string
  classId?: string | null
  gradeId?: string | null
}

export type AnnouncementUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutAnnouncementsNestedInput
  term?: Prisma.TermUpdateOneRequiredWithoutAnnouncementsNestedInput
  class?: Prisma.ClassUpdateOneWithoutAnnouncementsNestedInput
  grade?: Prisma.GradeUpdateOneWithoutAnnouncementsNestedInput
}

export type AnnouncementUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gradeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AnnouncementCreateManyInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  schoolId: string
  termId: string
  classId?: string | null
  gradeId?: string | null
}

export type AnnouncementUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AnnouncementUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gradeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AnnouncementListRelationFilter = {
  every?: Prisma.AnnouncementWhereInput
  some?: Prisma.AnnouncementWhereInput
  none?: Prisma.AnnouncementWhereInput
}

export type AnnouncementOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type AnnouncementCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  isPublished?: Prisma.SortOrder
  draftedAt?: Prisma.SortOrder
  publishedAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  gradeId?: Prisma.SortOrder
}

export type AnnouncementMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  isPublished?: Prisma.SortOrder
  draftedAt?: Prisma.SortOrder
  publishedAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  gradeId?: Prisma.SortOrder
}

export type AnnouncementMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  content?: Prisma.SortOrder
  isPublished?: Prisma.SortOrder
  draftedAt?: Prisma.SortOrder
  publishedAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  termId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  gradeId?: Prisma.SortOrder
}

export type AnnouncementCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutSchoolInput, Prisma.AnnouncementUncheckedCreateWithoutSchoolInput> | Prisma.AnnouncementCreateWithoutSchoolInput[] | Prisma.AnnouncementUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutSchoolInput | Prisma.AnnouncementCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.AnnouncementCreateManySchoolInputEnvelope
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
}

export type AnnouncementUncheckedCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutSchoolInput, Prisma.AnnouncementUncheckedCreateWithoutSchoolInput> | Prisma.AnnouncementCreateWithoutSchoolInput[] | Prisma.AnnouncementUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutSchoolInput | Prisma.AnnouncementCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.AnnouncementCreateManySchoolInputEnvelope
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
}

export type AnnouncementUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutSchoolInput, Prisma.AnnouncementUncheckedCreateWithoutSchoolInput> | Prisma.AnnouncementCreateWithoutSchoolInput[] | Prisma.AnnouncementUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutSchoolInput | Prisma.AnnouncementCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.AnnouncementUpsertWithWhereUniqueWithoutSchoolInput | Prisma.AnnouncementUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.AnnouncementCreateManySchoolInputEnvelope
  set?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  disconnect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  delete?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  update?: Prisma.AnnouncementUpdateWithWhereUniqueWithoutSchoolInput | Prisma.AnnouncementUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.AnnouncementUpdateManyWithWhereWithoutSchoolInput | Prisma.AnnouncementUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.AnnouncementScalarWhereInput | Prisma.AnnouncementScalarWhereInput[]
}

export type AnnouncementUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutSchoolInput, Prisma.AnnouncementUncheckedCreateWithoutSchoolInput> | Prisma.AnnouncementCreateWithoutSchoolInput[] | Prisma.AnnouncementUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutSchoolInput | Prisma.AnnouncementCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.AnnouncementUpsertWithWhereUniqueWithoutSchoolInput | Prisma.AnnouncementUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.AnnouncementCreateManySchoolInputEnvelope
  set?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  disconnect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  delete?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  update?: Prisma.AnnouncementUpdateWithWhereUniqueWithoutSchoolInput | Prisma.AnnouncementUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.AnnouncementUpdateManyWithWhereWithoutSchoolInput | Prisma.AnnouncementUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.AnnouncementScalarWhereInput | Prisma.AnnouncementScalarWhereInput[]
}

export type AnnouncementCreateNestedManyWithoutTermInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutTermInput, Prisma.AnnouncementUncheckedCreateWithoutTermInput> | Prisma.AnnouncementCreateWithoutTermInput[] | Prisma.AnnouncementUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutTermInput | Prisma.AnnouncementCreateOrConnectWithoutTermInput[]
  createMany?: Prisma.AnnouncementCreateManyTermInputEnvelope
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
}

export type AnnouncementUncheckedCreateNestedManyWithoutTermInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutTermInput, Prisma.AnnouncementUncheckedCreateWithoutTermInput> | Prisma.AnnouncementCreateWithoutTermInput[] | Prisma.AnnouncementUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutTermInput | Prisma.AnnouncementCreateOrConnectWithoutTermInput[]
  createMany?: Prisma.AnnouncementCreateManyTermInputEnvelope
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
}

export type AnnouncementUpdateManyWithoutTermNestedInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutTermInput, Prisma.AnnouncementUncheckedCreateWithoutTermInput> | Prisma.AnnouncementCreateWithoutTermInput[] | Prisma.AnnouncementUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutTermInput | Prisma.AnnouncementCreateOrConnectWithoutTermInput[]
  upsert?: Prisma.AnnouncementUpsertWithWhereUniqueWithoutTermInput | Prisma.AnnouncementUpsertWithWhereUniqueWithoutTermInput[]
  createMany?: Prisma.AnnouncementCreateManyTermInputEnvelope
  set?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  disconnect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  delete?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  update?: Prisma.AnnouncementUpdateWithWhereUniqueWithoutTermInput | Prisma.AnnouncementUpdateWithWhereUniqueWithoutTermInput[]
  updateMany?: Prisma.AnnouncementUpdateManyWithWhereWithoutTermInput | Prisma.AnnouncementUpdateManyWithWhereWithoutTermInput[]
  deleteMany?: Prisma.AnnouncementScalarWhereInput | Prisma.AnnouncementScalarWhereInput[]
}

export type AnnouncementUncheckedUpdateManyWithoutTermNestedInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutTermInput, Prisma.AnnouncementUncheckedCreateWithoutTermInput> | Prisma.AnnouncementCreateWithoutTermInput[] | Prisma.AnnouncementUncheckedCreateWithoutTermInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutTermInput | Prisma.AnnouncementCreateOrConnectWithoutTermInput[]
  upsert?: Prisma.AnnouncementUpsertWithWhereUniqueWithoutTermInput | Prisma.AnnouncementUpsertWithWhereUniqueWithoutTermInput[]
  createMany?: Prisma.AnnouncementCreateManyTermInputEnvelope
  set?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  disconnect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  delete?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  update?: Prisma.AnnouncementUpdateWithWhereUniqueWithoutTermInput | Prisma.AnnouncementUpdateWithWhereUniqueWithoutTermInput[]
  updateMany?: Prisma.AnnouncementUpdateManyWithWhereWithoutTermInput | Prisma.AnnouncementUpdateManyWithWhereWithoutTermInput[]
  deleteMany?: Prisma.AnnouncementScalarWhereInput | Prisma.AnnouncementScalarWhereInput[]
}

export type AnnouncementCreateNestedManyWithoutGradeInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutGradeInput, Prisma.AnnouncementUncheckedCreateWithoutGradeInput> | Prisma.AnnouncementCreateWithoutGradeInput[] | Prisma.AnnouncementUncheckedCreateWithoutGradeInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutGradeInput | Prisma.AnnouncementCreateOrConnectWithoutGradeInput[]
  createMany?: Prisma.AnnouncementCreateManyGradeInputEnvelope
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
}

export type AnnouncementUncheckedCreateNestedManyWithoutGradeInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutGradeInput, Prisma.AnnouncementUncheckedCreateWithoutGradeInput> | Prisma.AnnouncementCreateWithoutGradeInput[] | Prisma.AnnouncementUncheckedCreateWithoutGradeInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutGradeInput | Prisma.AnnouncementCreateOrConnectWithoutGradeInput[]
  createMany?: Prisma.AnnouncementCreateManyGradeInputEnvelope
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
}

export type AnnouncementUpdateManyWithoutGradeNestedInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutGradeInput, Prisma.AnnouncementUncheckedCreateWithoutGradeInput> | Prisma.AnnouncementCreateWithoutGradeInput[] | Prisma.AnnouncementUncheckedCreateWithoutGradeInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutGradeInput | Prisma.AnnouncementCreateOrConnectWithoutGradeInput[]
  upsert?: Prisma.AnnouncementUpsertWithWhereUniqueWithoutGradeInput | Prisma.AnnouncementUpsertWithWhereUniqueWithoutGradeInput[]
  createMany?: Prisma.AnnouncementCreateManyGradeInputEnvelope
  set?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  disconnect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  delete?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  update?: Prisma.AnnouncementUpdateWithWhereUniqueWithoutGradeInput | Prisma.AnnouncementUpdateWithWhereUniqueWithoutGradeInput[]
  updateMany?: Prisma.AnnouncementUpdateManyWithWhereWithoutGradeInput | Prisma.AnnouncementUpdateManyWithWhereWithoutGradeInput[]
  deleteMany?: Prisma.AnnouncementScalarWhereInput | Prisma.AnnouncementScalarWhereInput[]
}

export type AnnouncementUncheckedUpdateManyWithoutGradeNestedInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutGradeInput, Prisma.AnnouncementUncheckedCreateWithoutGradeInput> | Prisma.AnnouncementCreateWithoutGradeInput[] | Prisma.AnnouncementUncheckedCreateWithoutGradeInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutGradeInput | Prisma.AnnouncementCreateOrConnectWithoutGradeInput[]
  upsert?: Prisma.AnnouncementUpsertWithWhereUniqueWithoutGradeInput | Prisma.AnnouncementUpsertWithWhereUniqueWithoutGradeInput[]
  createMany?: Prisma.AnnouncementCreateManyGradeInputEnvelope
  set?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  disconnect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  delete?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  update?: Prisma.AnnouncementUpdateWithWhereUniqueWithoutGradeInput | Prisma.AnnouncementUpdateWithWhereUniqueWithoutGradeInput[]
  updateMany?: Prisma.AnnouncementUpdateManyWithWhereWithoutGradeInput | Prisma.AnnouncementUpdateManyWithWhereWithoutGradeInput[]
  deleteMany?: Prisma.AnnouncementScalarWhereInput | Prisma.AnnouncementScalarWhereInput[]
}

export type AnnouncementCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutClassInput, Prisma.AnnouncementUncheckedCreateWithoutClassInput> | Prisma.AnnouncementCreateWithoutClassInput[] | Prisma.AnnouncementUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutClassInput | Prisma.AnnouncementCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.AnnouncementCreateManyClassInputEnvelope
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
}

export type AnnouncementUncheckedCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutClassInput, Prisma.AnnouncementUncheckedCreateWithoutClassInput> | Prisma.AnnouncementCreateWithoutClassInput[] | Prisma.AnnouncementUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutClassInput | Prisma.AnnouncementCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.AnnouncementCreateManyClassInputEnvelope
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
}

export type AnnouncementUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutClassInput, Prisma.AnnouncementUncheckedCreateWithoutClassInput> | Prisma.AnnouncementCreateWithoutClassInput[] | Prisma.AnnouncementUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutClassInput | Prisma.AnnouncementCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.AnnouncementUpsertWithWhereUniqueWithoutClassInput | Prisma.AnnouncementUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.AnnouncementCreateManyClassInputEnvelope
  set?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  disconnect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  delete?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  update?: Prisma.AnnouncementUpdateWithWhereUniqueWithoutClassInput | Prisma.AnnouncementUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.AnnouncementUpdateManyWithWhereWithoutClassInput | Prisma.AnnouncementUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.AnnouncementScalarWhereInput | Prisma.AnnouncementScalarWhereInput[]
}

export type AnnouncementUncheckedUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.AnnouncementCreateWithoutClassInput, Prisma.AnnouncementUncheckedCreateWithoutClassInput> | Prisma.AnnouncementCreateWithoutClassInput[] | Prisma.AnnouncementUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.AnnouncementCreateOrConnectWithoutClassInput | Prisma.AnnouncementCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.AnnouncementUpsertWithWhereUniqueWithoutClassInput | Prisma.AnnouncementUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.AnnouncementCreateManyClassInputEnvelope
  set?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  disconnect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  delete?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  connect?: Prisma.AnnouncementWhereUniqueInput | Prisma.AnnouncementWhereUniqueInput[]
  update?: Prisma.AnnouncementUpdateWithWhereUniqueWithoutClassInput | Prisma.AnnouncementUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.AnnouncementUpdateManyWithWhereWithoutClassInput | Prisma.AnnouncementUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.AnnouncementScalarWhereInput | Prisma.AnnouncementScalarWhereInput[]
}

export type AnnouncementCreateWithoutSchoolInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  term: Prisma.TermCreateNestedOneWithoutAnnouncementsInput
  class?: Prisma.ClassCreateNestedOneWithoutAnnouncementsInput
  grade?: Prisma.GradeCreateNestedOneWithoutAnnouncementsInput
}

export type AnnouncementUncheckedCreateWithoutSchoolInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  termId: string
  classId?: string | null
  gradeId?: string | null
}

export type AnnouncementCreateOrConnectWithoutSchoolInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  create: Prisma.XOR<Prisma.AnnouncementCreateWithoutSchoolInput, Prisma.AnnouncementUncheckedCreateWithoutSchoolInput>
}

export type AnnouncementCreateManySchoolInputEnvelope = {
  data: Prisma.AnnouncementCreateManySchoolInput | Prisma.AnnouncementCreateManySchoolInput[]
  skipDuplicates?: boolean
}

export type AnnouncementUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  update: Prisma.XOR<Prisma.AnnouncementUpdateWithoutSchoolInput, Prisma.AnnouncementUncheckedUpdateWithoutSchoolInput>
  create: Prisma.XOR<Prisma.AnnouncementCreateWithoutSchoolInput, Prisma.AnnouncementUncheckedCreateWithoutSchoolInput>
}

export type AnnouncementUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  data: Prisma.XOR<Prisma.AnnouncementUpdateWithoutSchoolInput, Prisma.AnnouncementUncheckedUpdateWithoutSchoolInput>
}

export type AnnouncementUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.AnnouncementScalarWhereInput
  data: Prisma.XOR<Prisma.AnnouncementUpdateManyMutationInput, Prisma.AnnouncementUncheckedUpdateManyWithoutSchoolInput>
}

export type AnnouncementScalarWhereInput = {
  AND?: Prisma.AnnouncementScalarWhereInput | Prisma.AnnouncementScalarWhereInput[]
  OR?: Prisma.AnnouncementScalarWhereInput[]
  NOT?: Prisma.AnnouncementScalarWhereInput | Prisma.AnnouncementScalarWhereInput[]
  id?: Prisma.StringFilter<"Announcement"> | string
  title?: Prisma.StringFilter<"Announcement"> | string
  content?: Prisma.StringFilter<"Announcement"> | string
  isPublished?: Prisma.BoolFilter<"Announcement"> | boolean
  draftedAt?: Prisma.DateTimeFilter<"Announcement"> | Date | string
  publishedAt?: Prisma.DateTimeNullableFilter<"Announcement"> | Date | string | null
  updatedAt?: Prisma.DateTimeFilter<"Announcement"> | Date | string
  schoolId?: Prisma.StringFilter<"Announcement"> | string
  termId?: Prisma.StringFilter<"Announcement"> | string
  classId?: Prisma.StringNullableFilter<"Announcement"> | string | null
  gradeId?: Prisma.StringNullableFilter<"Announcement"> | string | null
}

export type AnnouncementCreateWithoutTermInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutAnnouncementsInput
  class?: Prisma.ClassCreateNestedOneWithoutAnnouncementsInput
  grade?: Prisma.GradeCreateNestedOneWithoutAnnouncementsInput
}

export type AnnouncementUncheckedCreateWithoutTermInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  schoolId: string
  classId?: string | null
  gradeId?: string | null
}

export type AnnouncementCreateOrConnectWithoutTermInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  create: Prisma.XOR<Prisma.AnnouncementCreateWithoutTermInput, Prisma.AnnouncementUncheckedCreateWithoutTermInput>
}

export type AnnouncementCreateManyTermInputEnvelope = {
  data: Prisma.AnnouncementCreateManyTermInput | Prisma.AnnouncementCreateManyTermInput[]
  skipDuplicates?: boolean
}

export type AnnouncementUpsertWithWhereUniqueWithoutTermInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  update: Prisma.XOR<Prisma.AnnouncementUpdateWithoutTermInput, Prisma.AnnouncementUncheckedUpdateWithoutTermInput>
  create: Prisma.XOR<Prisma.AnnouncementCreateWithoutTermInput, Prisma.AnnouncementUncheckedCreateWithoutTermInput>
}

export type AnnouncementUpdateWithWhereUniqueWithoutTermInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  data: Prisma.XOR<Prisma.AnnouncementUpdateWithoutTermInput, Prisma.AnnouncementUncheckedUpdateWithoutTermInput>
}

export type AnnouncementUpdateManyWithWhereWithoutTermInput = {
  where: Prisma.AnnouncementScalarWhereInput
  data: Prisma.XOR<Prisma.AnnouncementUpdateManyMutationInput, Prisma.AnnouncementUncheckedUpdateManyWithoutTermInput>
}

export type AnnouncementCreateWithoutGradeInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutAnnouncementsInput
  term: Prisma.TermCreateNestedOneWithoutAnnouncementsInput
  class?: Prisma.ClassCreateNestedOneWithoutAnnouncementsInput
}

export type AnnouncementUncheckedCreateWithoutGradeInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  schoolId: string
  termId: string
  classId?: string | null
}

export type AnnouncementCreateOrConnectWithoutGradeInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  create: Prisma.XOR<Prisma.AnnouncementCreateWithoutGradeInput, Prisma.AnnouncementUncheckedCreateWithoutGradeInput>
}

export type AnnouncementCreateManyGradeInputEnvelope = {
  data: Prisma.AnnouncementCreateManyGradeInput | Prisma.AnnouncementCreateManyGradeInput[]
  skipDuplicates?: boolean
}

export type AnnouncementUpsertWithWhereUniqueWithoutGradeInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  update: Prisma.XOR<Prisma.AnnouncementUpdateWithoutGradeInput, Prisma.AnnouncementUncheckedUpdateWithoutGradeInput>
  create: Prisma.XOR<Prisma.AnnouncementCreateWithoutGradeInput, Prisma.AnnouncementUncheckedCreateWithoutGradeInput>
}

export type AnnouncementUpdateWithWhereUniqueWithoutGradeInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  data: Prisma.XOR<Prisma.AnnouncementUpdateWithoutGradeInput, Prisma.AnnouncementUncheckedUpdateWithoutGradeInput>
}

export type AnnouncementUpdateManyWithWhereWithoutGradeInput = {
  where: Prisma.AnnouncementScalarWhereInput
  data: Prisma.XOR<Prisma.AnnouncementUpdateManyMutationInput, Prisma.AnnouncementUncheckedUpdateManyWithoutGradeInput>
}

export type AnnouncementCreateWithoutClassInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutAnnouncementsInput
  term: Prisma.TermCreateNestedOneWithoutAnnouncementsInput
  grade?: Prisma.GradeCreateNestedOneWithoutAnnouncementsInput
}

export type AnnouncementUncheckedCreateWithoutClassInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  schoolId: string
  termId: string
  gradeId?: string | null
}

export type AnnouncementCreateOrConnectWithoutClassInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  create: Prisma.XOR<Prisma.AnnouncementCreateWithoutClassInput, Prisma.AnnouncementUncheckedCreateWithoutClassInput>
}

export type AnnouncementCreateManyClassInputEnvelope = {
  data: Prisma.AnnouncementCreateManyClassInput | Prisma.AnnouncementCreateManyClassInput[]
  skipDuplicates?: boolean
}

export type AnnouncementUpsertWithWhereUniqueWithoutClassInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  update: Prisma.XOR<Prisma.AnnouncementUpdateWithoutClassInput, Prisma.AnnouncementUncheckedUpdateWithoutClassInput>
  create: Prisma.XOR<Prisma.AnnouncementCreateWithoutClassInput, Prisma.AnnouncementUncheckedCreateWithoutClassInput>
}

export type AnnouncementUpdateWithWhereUniqueWithoutClassInput = {
  where: Prisma.AnnouncementWhereUniqueInput
  data: Prisma.XOR<Prisma.AnnouncementUpdateWithoutClassInput, Prisma.AnnouncementUncheckedUpdateWithoutClassInput>
}

export type AnnouncementUpdateManyWithWhereWithoutClassInput = {
  where: Prisma.AnnouncementScalarWhereInput
  data: Prisma.XOR<Prisma.AnnouncementUpdateManyMutationInput, Prisma.AnnouncementUncheckedUpdateManyWithoutClassInput>
}

export type AnnouncementCreateManySchoolInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  termId: string
  classId?: string | null
  gradeId?: string | null
}

export type AnnouncementUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  term?: Prisma.TermUpdateOneRequiredWithoutAnnouncementsNestedInput
  class?: Prisma.ClassUpdateOneWithoutAnnouncementsNestedInput
  grade?: Prisma.GradeUpdateOneWithoutAnnouncementsNestedInput
}

export type AnnouncementUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gradeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AnnouncementUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gradeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AnnouncementCreateManyTermInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  schoolId: string
  classId?: string | null
  gradeId?: string | null
}

export type AnnouncementUpdateWithoutTermInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutAnnouncementsNestedInput
  class?: Prisma.ClassUpdateOneWithoutAnnouncementsNestedInput
  grade?: Prisma.GradeUpdateOneWithoutAnnouncementsNestedInput
}

export type AnnouncementUncheckedUpdateWithoutTermInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gradeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AnnouncementUncheckedUpdateManyWithoutTermInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  gradeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AnnouncementCreateManyGradeInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  schoolId: string
  termId: string
  classId?: string | null
}

export type AnnouncementUpdateWithoutGradeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutAnnouncementsNestedInput
  term?: Prisma.TermUpdateOneRequiredWithoutAnnouncementsNestedInput
  class?: Prisma.ClassUpdateOneWithoutAnnouncementsNestedInput
}

export type AnnouncementUncheckedUpdateWithoutGradeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AnnouncementUncheckedUpdateManyWithoutGradeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AnnouncementCreateManyClassInput = {
  id?: string
  title: string
  content: string
  isPublished?: boolean
  draftedAt?: Date | string
  publishedAt?: Date | string | null
  updatedAt?: Date | string
  schoolId: string
  termId: string
  gradeId?: string | null
}

export type AnnouncementUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutAnnouncementsNestedInput
  term?: Prisma.TermUpdateOneRequiredWithoutAnnouncementsNestedInput
  grade?: Prisma.GradeUpdateOneWithoutAnnouncementsNestedInput
}

export type AnnouncementUncheckedUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AnnouncementUncheckedUpdateManyWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  content?: Prisma.StringFieldUpdateOperationsInput | string
  isPublished?: Prisma.BoolFieldUpdateOperationsInput | boolean
  draftedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  termId?: Prisma.StringFieldUpdateOperationsInput | string
  gradeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}



export type AnnouncementSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  content?: boolean
  isPublished?: boolean
  draftedAt?: boolean
  publishedAt?: boolean
  updatedAt?: boolean
  schoolId?: boolean
  termId?: boolean
  classId?: boolean
  gradeId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  class?: boolean | Prisma.Announcement$classArgs<ExtArgs>
  grade?: boolean | Prisma.Announcement$gradeArgs<ExtArgs>
}, ExtArgs["result"]["announcement"]>

export type AnnouncementSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  content?: boolean
  isPublished?: boolean
  draftedAt?: boolean
  publishedAt?: boolean
  updatedAt?: boolean
  schoolId?: boolean
  termId?: boolean
  classId?: boolean
  gradeId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  class?: boolean | Prisma.Announcement$classArgs<ExtArgs>
  grade?: boolean | Prisma.Announcement$gradeArgs<ExtArgs>
}, ExtArgs["result"]["announcement"]>

export type AnnouncementSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  content?: boolean
  isPublished?: boolean
  draftedAt?: boolean
  publishedAt?: boolean
  updatedAt?: boolean
  schoolId?: boolean
  termId?: boolean
  classId?: boolean
  gradeId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  class?: boolean | Prisma.Announcement$classArgs<ExtArgs>
  grade?: boolean | Prisma.Announcement$gradeArgs<ExtArgs>
}, ExtArgs["result"]["announcement"]>

export type AnnouncementSelectScalar = {
  id?: boolean
  title?: boolean
  content?: boolean
  isPublished?: boolean
  draftedAt?: boolean
  publishedAt?: boolean
  updatedAt?: boolean
  schoolId?: boolean
  termId?: boolean
  classId?: boolean
  gradeId?: boolean
}

export type AnnouncementOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "content" | "isPublished" | "draftedAt" | "publishedAt" | "updatedAt" | "schoolId" | "termId" | "classId" | "gradeId", ExtArgs["result"]["announcement"]>
export type AnnouncementInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  class?: boolean | Prisma.Announcement$classArgs<ExtArgs>
  grade?: boolean | Prisma.Announcement$gradeArgs<ExtArgs>
}
export type AnnouncementIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  class?: boolean | Prisma.Announcement$classArgs<ExtArgs>
  grade?: boolean | Prisma.Announcement$gradeArgs<ExtArgs>
}
export type AnnouncementIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  term?: boolean | Prisma.TermDefaultArgs<ExtArgs>
  class?: boolean | Prisma.Announcement$classArgs<ExtArgs>
  grade?: boolean | Prisma.Announcement$gradeArgs<ExtArgs>
}

export type $AnnouncementPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Announcement"
  objects: {
    school: Prisma.$SchoolPayload<ExtArgs>
    term: Prisma.$TermPayload<ExtArgs>
    class: Prisma.$ClassPayload<ExtArgs> | null
    grade: Prisma.$GradePayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    title: string
    content: string
    isPublished: boolean
    draftedAt: Date
    publishedAt: Date | null
    updatedAt: Date
    schoolId: string
    termId: string
    classId: string | null
    gradeId: string | null
  }, ExtArgs["result"]["announcement"]>
  composites: {}
}

export type AnnouncementGetPayload<S extends boolean | null | undefined | AnnouncementDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload, S>

export type AnnouncementCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<AnnouncementFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: AnnouncementCountAggregateInputType | true
  }

export interface AnnouncementDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Announcement'], meta: { name: 'Announcement' } }
  /**
   * Find zero or one Announcement that matches the filter.
   * @param {AnnouncementFindUniqueArgs} args - Arguments to find a Announcement
   * @example
   * // Get one Announcement
   * const announcement = await prisma.announcement.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AnnouncementFindUniqueArgs>(args: Prisma.SelectSubset<T, AnnouncementFindUniqueArgs<ExtArgs>>): Prisma.Prisma__AnnouncementClient<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Announcement that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AnnouncementFindUniqueOrThrowArgs} args - Arguments to find a Announcement
   * @example
   * // Get one Announcement
   * const announcement = await prisma.announcement.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AnnouncementFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, AnnouncementFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__AnnouncementClient<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Announcement that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnnouncementFindFirstArgs} args - Arguments to find a Announcement
   * @example
   * // Get one Announcement
   * const announcement = await prisma.announcement.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AnnouncementFindFirstArgs>(args?: Prisma.SelectSubset<T, AnnouncementFindFirstArgs<ExtArgs>>): Prisma.Prisma__AnnouncementClient<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Announcement that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnnouncementFindFirstOrThrowArgs} args - Arguments to find a Announcement
   * @example
   * // Get one Announcement
   * const announcement = await prisma.announcement.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AnnouncementFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, AnnouncementFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__AnnouncementClient<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Announcements that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnnouncementFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Announcements
   * const announcements = await prisma.announcement.findMany()
   * 
   * // Get first 10 Announcements
   * const announcements = await prisma.announcement.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const announcementWithIdOnly = await prisma.announcement.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends AnnouncementFindManyArgs>(args?: Prisma.SelectSubset<T, AnnouncementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Announcement.
   * @param {AnnouncementCreateArgs} args - Arguments to create a Announcement.
   * @example
   * // Create one Announcement
   * const Announcement = await prisma.announcement.create({
   *   data: {
   *     // ... data to create a Announcement
   *   }
   * })
   * 
   */
  create<T extends AnnouncementCreateArgs>(args: Prisma.SelectSubset<T, AnnouncementCreateArgs<ExtArgs>>): Prisma.Prisma__AnnouncementClient<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Announcements.
   * @param {AnnouncementCreateManyArgs} args - Arguments to create many Announcements.
   * @example
   * // Create many Announcements
   * const announcement = await prisma.announcement.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends AnnouncementCreateManyArgs>(args?: Prisma.SelectSubset<T, AnnouncementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Announcements and returns the data saved in the database.
   * @param {AnnouncementCreateManyAndReturnArgs} args - Arguments to create many Announcements.
   * @example
   * // Create many Announcements
   * const announcement = await prisma.announcement.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Announcements and only return the `id`
   * const announcementWithIdOnly = await prisma.announcement.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends AnnouncementCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, AnnouncementCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Announcement.
   * @param {AnnouncementDeleteArgs} args - Arguments to delete one Announcement.
   * @example
   * // Delete one Announcement
   * const Announcement = await prisma.announcement.delete({
   *   where: {
   *     // ... filter to delete one Announcement
   *   }
   * })
   * 
   */
  delete<T extends AnnouncementDeleteArgs>(args: Prisma.SelectSubset<T, AnnouncementDeleteArgs<ExtArgs>>): Prisma.Prisma__AnnouncementClient<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Announcement.
   * @param {AnnouncementUpdateArgs} args - Arguments to update one Announcement.
   * @example
   * // Update one Announcement
   * const announcement = await prisma.announcement.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends AnnouncementUpdateArgs>(args: Prisma.SelectSubset<T, AnnouncementUpdateArgs<ExtArgs>>): Prisma.Prisma__AnnouncementClient<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Announcements.
   * @param {AnnouncementDeleteManyArgs} args - Arguments to filter Announcements to delete.
   * @example
   * // Delete a few Announcements
   * const { count } = await prisma.announcement.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends AnnouncementDeleteManyArgs>(args?: Prisma.SelectSubset<T, AnnouncementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Announcements.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnnouncementUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Announcements
   * const announcement = await prisma.announcement.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends AnnouncementUpdateManyArgs>(args: Prisma.SelectSubset<T, AnnouncementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Announcements and returns the data updated in the database.
   * @param {AnnouncementUpdateManyAndReturnArgs} args - Arguments to update many Announcements.
   * @example
   * // Update many Announcements
   * const announcement = await prisma.announcement.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Announcements and only return the `id`
   * const announcementWithIdOnly = await prisma.announcement.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends AnnouncementUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, AnnouncementUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Announcement.
   * @param {AnnouncementUpsertArgs} args - Arguments to update or create a Announcement.
   * @example
   * // Update or create a Announcement
   * const announcement = await prisma.announcement.upsert({
   *   create: {
   *     // ... data to create a Announcement
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Announcement we want to update
   *   }
   * })
   */
  upsert<T extends AnnouncementUpsertArgs>(args: Prisma.SelectSubset<T, AnnouncementUpsertArgs<ExtArgs>>): Prisma.Prisma__AnnouncementClient<runtime.Types.Result.GetResult<Prisma.$AnnouncementPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Announcements.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnnouncementCountArgs} args - Arguments to filter Announcements to count.
   * @example
   * // Count the number of Announcements
   * const count = await prisma.announcement.count({
   *   where: {
   *     // ... the filter for the Announcements we want to count
   *   }
   * })
  **/
  count<T extends AnnouncementCountArgs>(
    args?: Prisma.Subset<T, AnnouncementCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AnnouncementCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Announcement.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnnouncementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AnnouncementAggregateArgs>(args: Prisma.Subset<T, AnnouncementAggregateArgs>): Prisma.PrismaPromise<GetAnnouncementAggregateType<T>>

  /**
   * Group by Announcement.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AnnouncementGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends AnnouncementGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AnnouncementGroupByArgs['orderBy'] }
      : { orderBy?: AnnouncementGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, AnnouncementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnnouncementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Announcement model
 */
readonly fields: AnnouncementFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Announcement.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AnnouncementClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>): Prisma.Prisma__SchoolClient<runtime.Types.Result.GetResult<Prisma.$SchoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  term<T extends Prisma.TermDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TermDefaultArgs<ExtArgs>>): Prisma.Prisma__TermClient<runtime.Types.Result.GetResult<Prisma.$TermPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  class<T extends Prisma.Announcement$classArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Announcement$classArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  grade<T extends Prisma.Announcement$gradeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Announcement$gradeArgs<ExtArgs>>): Prisma.Prisma__GradeClient<runtime.Types.Result.GetResult<Prisma.$GradePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Announcement model
 */
export interface AnnouncementFieldRefs {
  readonly id: Prisma.FieldRef<"Announcement", 'String'>
  readonly title: Prisma.FieldRef<"Announcement", 'String'>
  readonly content: Prisma.FieldRef<"Announcement", 'String'>
  readonly isPublished: Prisma.FieldRef<"Announcement", 'Boolean'>
  readonly draftedAt: Prisma.FieldRef<"Announcement", 'DateTime'>
  readonly publishedAt: Prisma.FieldRef<"Announcement", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Announcement", 'DateTime'>
  readonly schoolId: Prisma.FieldRef<"Announcement", 'String'>
  readonly termId: Prisma.FieldRef<"Announcement", 'String'>
  readonly classId: Prisma.FieldRef<"Announcement", 'String'>
  readonly gradeId: Prisma.FieldRef<"Announcement", 'String'>
}
    

// Custom InputTypes
/**
 * Announcement findUnique
 */
export type AnnouncementFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
  /**
   * Filter, which Announcement to fetch.
   */
  where: Prisma.AnnouncementWhereUniqueInput
}

/**
 * Announcement findUniqueOrThrow
 */
export type AnnouncementFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
  /**
   * Filter, which Announcement to fetch.
   */
  where: Prisma.AnnouncementWhereUniqueInput
}

/**
 * Announcement findFirst
 */
export type AnnouncementFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
  /**
   * Filter, which Announcement to fetch.
   */
  where?: Prisma.AnnouncementWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Announcements to fetch.
   */
  orderBy?: Prisma.AnnouncementOrderByWithRelationInput | Prisma.AnnouncementOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Announcements.
   */
  cursor?: Prisma.AnnouncementWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Announcements from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Announcements.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Announcements.
   */
  distinct?: Prisma.AnnouncementScalarFieldEnum | Prisma.AnnouncementScalarFieldEnum[]
}

/**
 * Announcement findFirstOrThrow
 */
export type AnnouncementFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
  /**
   * Filter, which Announcement to fetch.
   */
  where?: Prisma.AnnouncementWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Announcements to fetch.
   */
  orderBy?: Prisma.AnnouncementOrderByWithRelationInput | Prisma.AnnouncementOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Announcements.
   */
  cursor?: Prisma.AnnouncementWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Announcements from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Announcements.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Announcements.
   */
  distinct?: Prisma.AnnouncementScalarFieldEnum | Prisma.AnnouncementScalarFieldEnum[]
}

/**
 * Announcement findMany
 */
export type AnnouncementFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
  /**
   * Filter, which Announcements to fetch.
   */
  where?: Prisma.AnnouncementWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Announcements to fetch.
   */
  orderBy?: Prisma.AnnouncementOrderByWithRelationInput | Prisma.AnnouncementOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Announcements.
   */
  cursor?: Prisma.AnnouncementWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Announcements from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Announcements.
   */
  skip?: number
  distinct?: Prisma.AnnouncementScalarFieldEnum | Prisma.AnnouncementScalarFieldEnum[]
}

/**
 * Announcement create
 */
export type AnnouncementCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
  /**
   * The data needed to create a Announcement.
   */
  data: Prisma.XOR<Prisma.AnnouncementCreateInput, Prisma.AnnouncementUncheckedCreateInput>
}

/**
 * Announcement createMany
 */
export type AnnouncementCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Announcements.
   */
  data: Prisma.AnnouncementCreateManyInput | Prisma.AnnouncementCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Announcement createManyAndReturn
 */
export type AnnouncementCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * The data used to create many Announcements.
   */
  data: Prisma.AnnouncementCreateManyInput | Prisma.AnnouncementCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Announcement update
 */
export type AnnouncementUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
  /**
   * The data needed to update a Announcement.
   */
  data: Prisma.XOR<Prisma.AnnouncementUpdateInput, Prisma.AnnouncementUncheckedUpdateInput>
  /**
   * Choose, which Announcement to update.
   */
  where: Prisma.AnnouncementWhereUniqueInput
}

/**
 * Announcement updateMany
 */
export type AnnouncementUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Announcements.
   */
  data: Prisma.XOR<Prisma.AnnouncementUpdateManyMutationInput, Prisma.AnnouncementUncheckedUpdateManyInput>
  /**
   * Filter which Announcements to update
   */
  where?: Prisma.AnnouncementWhereInput
  /**
   * Limit how many Announcements to update.
   */
  limit?: number
}

/**
 * Announcement updateManyAndReturn
 */
export type AnnouncementUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * The data used to update Announcements.
   */
  data: Prisma.XOR<Prisma.AnnouncementUpdateManyMutationInput, Prisma.AnnouncementUncheckedUpdateManyInput>
  /**
   * Filter which Announcements to update
   */
  where?: Prisma.AnnouncementWhereInput
  /**
   * Limit how many Announcements to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Announcement upsert
 */
export type AnnouncementUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
  /**
   * The filter to search for the Announcement to update in case it exists.
   */
  where: Prisma.AnnouncementWhereUniqueInput
  /**
   * In case the Announcement found by the `where` argument doesn't exist, create a new Announcement with this data.
   */
  create: Prisma.XOR<Prisma.AnnouncementCreateInput, Prisma.AnnouncementUncheckedCreateInput>
  /**
   * In case the Announcement was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AnnouncementUpdateInput, Prisma.AnnouncementUncheckedUpdateInput>
}

/**
 * Announcement delete
 */
export type AnnouncementDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
  /**
   * Filter which Announcement to delete.
   */
  where: Prisma.AnnouncementWhereUniqueInput
}

/**
 * Announcement deleteMany
 */
export type AnnouncementDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Announcements to delete
   */
  where?: Prisma.AnnouncementWhereInput
  /**
   * Limit how many Announcements to delete.
   */
  limit?: number
}

/**
 * Announcement.class
 */
export type Announcement$classArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  where?: Prisma.ClassWhereInput
}

/**
 * Announcement.grade
 */
export type Announcement$gradeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Grade
   */
  select?: Prisma.GradeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Grade
   */
  omit?: Prisma.GradeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.GradeInclude<ExtArgs> | null
  where?: Prisma.GradeWhereInput
}

/**
 * Announcement without action
 */
export type AnnouncementDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Announcement
   */
  select?: Prisma.AnnouncementSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Announcement
   */
  omit?: Prisma.AnnouncementOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AnnouncementInclude<ExtArgs> | null
}
