
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `PeriodSlot` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model PeriodSlot
 * 
 */
export type PeriodSlotModel = runtime.Types.Result.DefaultSelection<Prisma.$PeriodSlotPayload>

export type AggregatePeriodSlot = {
  _count: PeriodSlotCountAggregateOutputType | null
  _avg: PeriodSlotAvgAggregateOutputType | null
  _sum: PeriodSlotSumAggregateOutputType | null
  _min: PeriodSlotMinAggregateOutputType | null
  _max: PeriodSlotMaxAggregateOutputType | null
}

export type PeriodSlotAvgAggregateOutputType = {
  dayOfWeek: number | null
}

export type PeriodSlotSumAggregateOutputType = {
  dayOfWeek: number | null
}

export type PeriodSlotMinAggregateOutputType = {
  id: string | null
  dayOfWeek: number | null
  schoolId: string | null
  periodId: string | null
}

export type PeriodSlotMaxAggregateOutputType = {
  id: string | null
  dayOfWeek: number | null
  schoolId: string | null
  periodId: string | null
}

export type PeriodSlotCountAggregateOutputType = {
  id: number
  dayOfWeek: number
  schoolId: number
  periodId: number
  _all: number
}


export type PeriodSlotAvgAggregateInputType = {
  dayOfWeek?: true
}

export type PeriodSlotSumAggregateInputType = {
  dayOfWeek?: true
}

export type PeriodSlotMinAggregateInputType = {
  id?: true
  dayOfWeek?: true
  schoolId?: true
  periodId?: true
}

export type PeriodSlotMaxAggregateInputType = {
  id?: true
  dayOfWeek?: true
  schoolId?: true
  periodId?: true
}

export type PeriodSlotCountAggregateInputType = {
  id?: true
  dayOfWeek?: true
  schoolId?: true
  periodId?: true
  _all?: true
}

export type PeriodSlotAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PeriodSlot to aggregate.
   */
  where?: Prisma.PeriodSlotWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PeriodSlots to fetch.
   */
  orderBy?: Prisma.PeriodSlotOrderByWithRelationInput | Prisma.PeriodSlotOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PeriodSlotWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PeriodSlots from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PeriodSlots.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned PeriodSlots
  **/
  _count?: true | PeriodSlotCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PeriodSlotAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PeriodSlotSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PeriodSlotMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PeriodSlotMaxAggregateInputType
}

export type GetPeriodSlotAggregateType<T extends PeriodSlotAggregateArgs> = {
      [P in keyof T & keyof AggregatePeriodSlot]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePeriodSlot[P]>
    : Prisma.GetScalarType<T[P], AggregatePeriodSlot[P]>
}




export type PeriodSlotGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PeriodSlotWhereInput
  orderBy?: Prisma.PeriodSlotOrderByWithAggregationInput | Prisma.PeriodSlotOrderByWithAggregationInput[]
  by: Prisma.PeriodSlotScalarFieldEnum[] | Prisma.PeriodSlotScalarFieldEnum
  having?: Prisma.PeriodSlotScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PeriodSlotCountAggregateInputType | true
  _avg?: PeriodSlotAvgAggregateInputType
  _sum?: PeriodSlotSumAggregateInputType
  _min?: PeriodSlotMinAggregateInputType
  _max?: PeriodSlotMaxAggregateInputType
}

export type PeriodSlotGroupByOutputType = {
  id: string
  dayOfWeek: number
  schoolId: string
  periodId: string
  _count: PeriodSlotCountAggregateOutputType | null
  _avg: PeriodSlotAvgAggregateOutputType | null
  _sum: PeriodSlotSumAggregateOutputType | null
  _min: PeriodSlotMinAggregateOutputType | null
  _max: PeriodSlotMaxAggregateOutputType | null
}

type GetPeriodSlotGroupByPayload<T extends PeriodSlotGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PeriodSlotGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PeriodSlotGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PeriodSlotGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PeriodSlotGroupByOutputType[P]>
      }
    >
  >



export type PeriodSlotWhereInput = {
  AND?: Prisma.PeriodSlotWhereInput | Prisma.PeriodSlotWhereInput[]
  OR?: Prisma.PeriodSlotWhereInput[]
  NOT?: Prisma.PeriodSlotWhereInput | Prisma.PeriodSlotWhereInput[]
  id?: Prisma.StringFilter<"PeriodSlot"> | string
  dayOfWeek?: Prisma.IntFilter<"PeriodSlot"> | number
  schoolId?: Prisma.StringFilter<"PeriodSlot"> | string
  periodId?: Prisma.StringFilter<"PeriodSlot"> | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  period?: Prisma.XOR<Prisma.TimetablePeriodScalarRelationFilter, Prisma.TimetablePeriodWhereInput>
  timetableAssignments?: Prisma.TimetableAssignmentListRelationFilter
}

export type PeriodSlotOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  dayOfWeek?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  periodId?: Prisma.SortOrder
  school?: Prisma.SchoolOrderByWithRelationInput
  period?: Prisma.TimetablePeriodOrderByWithRelationInput
  timetableAssignments?: Prisma.TimetableAssignmentOrderByRelationAggregateInput
}

export type PeriodSlotWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  schoolId_periodId_dayOfWeek?: Prisma.PeriodSlotSchoolIdPeriodIdDayOfWeekCompoundUniqueInput
  AND?: Prisma.PeriodSlotWhereInput | Prisma.PeriodSlotWhereInput[]
  OR?: Prisma.PeriodSlotWhereInput[]
  NOT?: Prisma.PeriodSlotWhereInput | Prisma.PeriodSlotWhereInput[]
  dayOfWeek?: Prisma.IntFilter<"PeriodSlot"> | number
  schoolId?: Prisma.StringFilter<"PeriodSlot"> | string
  periodId?: Prisma.StringFilter<"PeriodSlot"> | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  period?: Prisma.XOR<Prisma.TimetablePeriodScalarRelationFilter, Prisma.TimetablePeriodWhereInput>
  timetableAssignments?: Prisma.TimetableAssignmentListRelationFilter
}, "id" | "schoolId_periodId_dayOfWeek">

export type PeriodSlotOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  dayOfWeek?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  periodId?: Prisma.SortOrder
  _count?: Prisma.PeriodSlotCountOrderByAggregateInput
  _avg?: Prisma.PeriodSlotAvgOrderByAggregateInput
  _max?: Prisma.PeriodSlotMaxOrderByAggregateInput
  _min?: Prisma.PeriodSlotMinOrderByAggregateInput
  _sum?: Prisma.PeriodSlotSumOrderByAggregateInput
}

export type PeriodSlotScalarWhereWithAggregatesInput = {
  AND?: Prisma.PeriodSlotScalarWhereWithAggregatesInput | Prisma.PeriodSlotScalarWhereWithAggregatesInput[]
  OR?: Prisma.PeriodSlotScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PeriodSlotScalarWhereWithAggregatesInput | Prisma.PeriodSlotScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"PeriodSlot"> | string
  dayOfWeek?: Prisma.IntWithAggregatesFilter<"PeriodSlot"> | number
  schoolId?: Prisma.StringWithAggregatesFilter<"PeriodSlot"> | string
  periodId?: Prisma.StringWithAggregatesFilter<"PeriodSlot"> | string
}

export type PeriodSlotCreateInput = {
  id?: string
  dayOfWeek: number
  school: Prisma.SchoolCreateNestedOneWithoutPeriodSlotsInput
  period: Prisma.TimetablePeriodCreateNestedOneWithoutPeriodSlotsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutPeriodSlotInput
}

export type PeriodSlotUncheckedCreateInput = {
  id?: string
  dayOfWeek: number
  schoolId: string
  periodId: string
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutPeriodSlotInput
}

export type PeriodSlotUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutPeriodSlotsNestedInput
  period?: Prisma.TimetablePeriodUpdateOneRequiredWithoutPeriodSlotsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutPeriodSlotNestedInput
}

export type PeriodSlotUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  periodId?: Prisma.StringFieldUpdateOperationsInput | string
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutPeriodSlotNestedInput
}

export type PeriodSlotCreateManyInput = {
  id?: string
  dayOfWeek: number
  schoolId: string
  periodId: string
}

export type PeriodSlotUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
}

export type PeriodSlotUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  periodId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type PeriodSlotListRelationFilter = {
  every?: Prisma.PeriodSlotWhereInput
  some?: Prisma.PeriodSlotWhereInput
  none?: Prisma.PeriodSlotWhereInput
}

export type PeriodSlotOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type PeriodSlotSchoolIdPeriodIdDayOfWeekCompoundUniqueInput = {
  schoolId: string
  periodId: string
  dayOfWeek: number
}

export type PeriodSlotCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  dayOfWeek?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  periodId?: Prisma.SortOrder
}

export type PeriodSlotAvgOrderByAggregateInput = {
  dayOfWeek?: Prisma.SortOrder
}

export type PeriodSlotMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  dayOfWeek?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  periodId?: Prisma.SortOrder
}

export type PeriodSlotMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  dayOfWeek?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  periodId?: Prisma.SortOrder
}

export type PeriodSlotSumOrderByAggregateInput = {
  dayOfWeek?: Prisma.SortOrder
}

export type PeriodSlotScalarRelationFilter = {
  is?: Prisma.PeriodSlotWhereInput
  isNot?: Prisma.PeriodSlotWhereInput
}

export type PeriodSlotCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.PeriodSlotCreateWithoutSchoolInput, Prisma.PeriodSlotUncheckedCreateWithoutSchoolInput> | Prisma.PeriodSlotCreateWithoutSchoolInput[] | Prisma.PeriodSlotUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.PeriodSlotCreateOrConnectWithoutSchoolInput | Prisma.PeriodSlotCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.PeriodSlotCreateManySchoolInputEnvelope
  connect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
}

export type PeriodSlotUncheckedCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.PeriodSlotCreateWithoutSchoolInput, Prisma.PeriodSlotUncheckedCreateWithoutSchoolInput> | Prisma.PeriodSlotCreateWithoutSchoolInput[] | Prisma.PeriodSlotUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.PeriodSlotCreateOrConnectWithoutSchoolInput | Prisma.PeriodSlotCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.PeriodSlotCreateManySchoolInputEnvelope
  connect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
}

export type PeriodSlotUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.PeriodSlotCreateWithoutSchoolInput, Prisma.PeriodSlotUncheckedCreateWithoutSchoolInput> | Prisma.PeriodSlotCreateWithoutSchoolInput[] | Prisma.PeriodSlotUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.PeriodSlotCreateOrConnectWithoutSchoolInput | Prisma.PeriodSlotCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.PeriodSlotUpsertWithWhereUniqueWithoutSchoolInput | Prisma.PeriodSlotUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.PeriodSlotCreateManySchoolInputEnvelope
  set?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  disconnect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  delete?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  connect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  update?: Prisma.PeriodSlotUpdateWithWhereUniqueWithoutSchoolInput | Prisma.PeriodSlotUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.PeriodSlotUpdateManyWithWhereWithoutSchoolInput | Prisma.PeriodSlotUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.PeriodSlotScalarWhereInput | Prisma.PeriodSlotScalarWhereInput[]
}

export type PeriodSlotUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.PeriodSlotCreateWithoutSchoolInput, Prisma.PeriodSlotUncheckedCreateWithoutSchoolInput> | Prisma.PeriodSlotCreateWithoutSchoolInput[] | Prisma.PeriodSlotUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.PeriodSlotCreateOrConnectWithoutSchoolInput | Prisma.PeriodSlotCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.PeriodSlotUpsertWithWhereUniqueWithoutSchoolInput | Prisma.PeriodSlotUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.PeriodSlotCreateManySchoolInputEnvelope
  set?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  disconnect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  delete?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  connect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  update?: Prisma.PeriodSlotUpdateWithWhereUniqueWithoutSchoolInput | Prisma.PeriodSlotUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.PeriodSlotUpdateManyWithWhereWithoutSchoolInput | Prisma.PeriodSlotUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.PeriodSlotScalarWhereInput | Prisma.PeriodSlotScalarWhereInput[]
}

export type PeriodSlotCreateNestedManyWithoutPeriodInput = {
  create?: Prisma.XOR<Prisma.PeriodSlotCreateWithoutPeriodInput, Prisma.PeriodSlotUncheckedCreateWithoutPeriodInput> | Prisma.PeriodSlotCreateWithoutPeriodInput[] | Prisma.PeriodSlotUncheckedCreateWithoutPeriodInput[]
  connectOrCreate?: Prisma.PeriodSlotCreateOrConnectWithoutPeriodInput | Prisma.PeriodSlotCreateOrConnectWithoutPeriodInput[]
  createMany?: Prisma.PeriodSlotCreateManyPeriodInputEnvelope
  connect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
}

export type PeriodSlotUncheckedCreateNestedManyWithoutPeriodInput = {
  create?: Prisma.XOR<Prisma.PeriodSlotCreateWithoutPeriodInput, Prisma.PeriodSlotUncheckedCreateWithoutPeriodInput> | Prisma.PeriodSlotCreateWithoutPeriodInput[] | Prisma.PeriodSlotUncheckedCreateWithoutPeriodInput[]
  connectOrCreate?: Prisma.PeriodSlotCreateOrConnectWithoutPeriodInput | Prisma.PeriodSlotCreateOrConnectWithoutPeriodInput[]
  createMany?: Prisma.PeriodSlotCreateManyPeriodInputEnvelope
  connect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
}

export type PeriodSlotUpdateManyWithoutPeriodNestedInput = {
  create?: Prisma.XOR<Prisma.PeriodSlotCreateWithoutPeriodInput, Prisma.PeriodSlotUncheckedCreateWithoutPeriodInput> | Prisma.PeriodSlotCreateWithoutPeriodInput[] | Prisma.PeriodSlotUncheckedCreateWithoutPeriodInput[]
  connectOrCreate?: Prisma.PeriodSlotCreateOrConnectWithoutPeriodInput | Prisma.PeriodSlotCreateOrConnectWithoutPeriodInput[]
  upsert?: Prisma.PeriodSlotUpsertWithWhereUniqueWithoutPeriodInput | Prisma.PeriodSlotUpsertWithWhereUniqueWithoutPeriodInput[]
  createMany?: Prisma.PeriodSlotCreateManyPeriodInputEnvelope
  set?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  disconnect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  delete?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  connect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  update?: Prisma.PeriodSlotUpdateWithWhereUniqueWithoutPeriodInput | Prisma.PeriodSlotUpdateWithWhereUniqueWithoutPeriodInput[]
  updateMany?: Prisma.PeriodSlotUpdateManyWithWhereWithoutPeriodInput | Prisma.PeriodSlotUpdateManyWithWhereWithoutPeriodInput[]
  deleteMany?: Prisma.PeriodSlotScalarWhereInput | Prisma.PeriodSlotScalarWhereInput[]
}

export type PeriodSlotUncheckedUpdateManyWithoutPeriodNestedInput = {
  create?: Prisma.XOR<Prisma.PeriodSlotCreateWithoutPeriodInput, Prisma.PeriodSlotUncheckedCreateWithoutPeriodInput> | Prisma.PeriodSlotCreateWithoutPeriodInput[] | Prisma.PeriodSlotUncheckedCreateWithoutPeriodInput[]
  connectOrCreate?: Prisma.PeriodSlotCreateOrConnectWithoutPeriodInput | Prisma.PeriodSlotCreateOrConnectWithoutPeriodInput[]
  upsert?: Prisma.PeriodSlotUpsertWithWhereUniqueWithoutPeriodInput | Prisma.PeriodSlotUpsertWithWhereUniqueWithoutPeriodInput[]
  createMany?: Prisma.PeriodSlotCreateManyPeriodInputEnvelope
  set?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  disconnect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  delete?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  connect?: Prisma.PeriodSlotWhereUniqueInput | Prisma.PeriodSlotWhereUniqueInput[]
  update?: Prisma.PeriodSlotUpdateWithWhereUniqueWithoutPeriodInput | Prisma.PeriodSlotUpdateWithWhereUniqueWithoutPeriodInput[]
  updateMany?: Prisma.PeriodSlotUpdateManyWithWhereWithoutPeriodInput | Prisma.PeriodSlotUpdateManyWithWhereWithoutPeriodInput[]
  deleteMany?: Prisma.PeriodSlotScalarWhereInput | Prisma.PeriodSlotScalarWhereInput[]
}

export type PeriodSlotCreateNestedOneWithoutTimetableAssignmentsInput = {
  create?: Prisma.XOR<Prisma.PeriodSlotCreateWithoutTimetableAssignmentsInput, Prisma.PeriodSlotUncheckedCreateWithoutTimetableAssignmentsInput>
  connectOrCreate?: Prisma.PeriodSlotCreateOrConnectWithoutTimetableAssignmentsInput
  connect?: Prisma.PeriodSlotWhereUniqueInput
}

export type PeriodSlotUpdateOneRequiredWithoutTimetableAssignmentsNestedInput = {
  create?: Prisma.XOR<Prisma.PeriodSlotCreateWithoutTimetableAssignmentsInput, Prisma.PeriodSlotUncheckedCreateWithoutTimetableAssignmentsInput>
  connectOrCreate?: Prisma.PeriodSlotCreateOrConnectWithoutTimetableAssignmentsInput
  upsert?: Prisma.PeriodSlotUpsertWithoutTimetableAssignmentsInput
  connect?: Prisma.PeriodSlotWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PeriodSlotUpdateToOneWithWhereWithoutTimetableAssignmentsInput, Prisma.PeriodSlotUpdateWithoutTimetableAssignmentsInput>, Prisma.PeriodSlotUncheckedUpdateWithoutTimetableAssignmentsInput>
}

export type PeriodSlotCreateWithoutSchoolInput = {
  id?: string
  dayOfWeek: number
  period: Prisma.TimetablePeriodCreateNestedOneWithoutPeriodSlotsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutPeriodSlotInput
}

export type PeriodSlotUncheckedCreateWithoutSchoolInput = {
  id?: string
  dayOfWeek: number
  periodId: string
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutPeriodSlotInput
}

export type PeriodSlotCreateOrConnectWithoutSchoolInput = {
  where: Prisma.PeriodSlotWhereUniqueInput
  create: Prisma.XOR<Prisma.PeriodSlotCreateWithoutSchoolInput, Prisma.PeriodSlotUncheckedCreateWithoutSchoolInput>
}

export type PeriodSlotCreateManySchoolInputEnvelope = {
  data: Prisma.PeriodSlotCreateManySchoolInput | Prisma.PeriodSlotCreateManySchoolInput[]
  skipDuplicates?: boolean
}

export type PeriodSlotUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.PeriodSlotWhereUniqueInput
  update: Prisma.XOR<Prisma.PeriodSlotUpdateWithoutSchoolInput, Prisma.PeriodSlotUncheckedUpdateWithoutSchoolInput>
  create: Prisma.XOR<Prisma.PeriodSlotCreateWithoutSchoolInput, Prisma.PeriodSlotUncheckedCreateWithoutSchoolInput>
}

export type PeriodSlotUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.PeriodSlotWhereUniqueInput
  data: Prisma.XOR<Prisma.PeriodSlotUpdateWithoutSchoolInput, Prisma.PeriodSlotUncheckedUpdateWithoutSchoolInput>
}

export type PeriodSlotUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.PeriodSlotScalarWhereInput
  data: Prisma.XOR<Prisma.PeriodSlotUpdateManyMutationInput, Prisma.PeriodSlotUncheckedUpdateManyWithoutSchoolInput>
}

export type PeriodSlotScalarWhereInput = {
  AND?: Prisma.PeriodSlotScalarWhereInput | Prisma.PeriodSlotScalarWhereInput[]
  OR?: Prisma.PeriodSlotScalarWhereInput[]
  NOT?: Prisma.PeriodSlotScalarWhereInput | Prisma.PeriodSlotScalarWhereInput[]
  id?: Prisma.StringFilter<"PeriodSlot"> | string
  dayOfWeek?: Prisma.IntFilter<"PeriodSlot"> | number
  schoolId?: Prisma.StringFilter<"PeriodSlot"> | string
  periodId?: Prisma.StringFilter<"PeriodSlot"> | string
}

export type PeriodSlotCreateWithoutPeriodInput = {
  id?: string
  dayOfWeek: number
  school: Prisma.SchoolCreateNestedOneWithoutPeriodSlotsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutPeriodSlotInput
}

export type PeriodSlotUncheckedCreateWithoutPeriodInput = {
  id?: string
  dayOfWeek: number
  schoolId: string
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutPeriodSlotInput
}

export type PeriodSlotCreateOrConnectWithoutPeriodInput = {
  where: Prisma.PeriodSlotWhereUniqueInput
  create: Prisma.XOR<Prisma.PeriodSlotCreateWithoutPeriodInput, Prisma.PeriodSlotUncheckedCreateWithoutPeriodInput>
}

export type PeriodSlotCreateManyPeriodInputEnvelope = {
  data: Prisma.PeriodSlotCreateManyPeriodInput | Prisma.PeriodSlotCreateManyPeriodInput[]
  skipDuplicates?: boolean
}

export type PeriodSlotUpsertWithWhereUniqueWithoutPeriodInput = {
  where: Prisma.PeriodSlotWhereUniqueInput
  update: Prisma.XOR<Prisma.PeriodSlotUpdateWithoutPeriodInput, Prisma.PeriodSlotUncheckedUpdateWithoutPeriodInput>
  create: Prisma.XOR<Prisma.PeriodSlotCreateWithoutPeriodInput, Prisma.PeriodSlotUncheckedCreateWithoutPeriodInput>
}

export type PeriodSlotUpdateWithWhereUniqueWithoutPeriodInput = {
  where: Prisma.PeriodSlotWhereUniqueInput
  data: Prisma.XOR<Prisma.PeriodSlotUpdateWithoutPeriodInput, Prisma.PeriodSlotUncheckedUpdateWithoutPeriodInput>
}

export type PeriodSlotUpdateManyWithWhereWithoutPeriodInput = {
  where: Prisma.PeriodSlotScalarWhereInput
  data: Prisma.XOR<Prisma.PeriodSlotUpdateManyMutationInput, Prisma.PeriodSlotUncheckedUpdateManyWithoutPeriodInput>
}

export type PeriodSlotCreateWithoutTimetableAssignmentsInput = {
  id?: string
  dayOfWeek: number
  school: Prisma.SchoolCreateNestedOneWithoutPeriodSlotsInput
  period: Prisma.TimetablePeriodCreateNestedOneWithoutPeriodSlotsInput
}

export type PeriodSlotUncheckedCreateWithoutTimetableAssignmentsInput = {
  id?: string
  dayOfWeek: number
  schoolId: string
  periodId: string
}

export type PeriodSlotCreateOrConnectWithoutTimetableAssignmentsInput = {
  where: Prisma.PeriodSlotWhereUniqueInput
  create: Prisma.XOR<Prisma.PeriodSlotCreateWithoutTimetableAssignmentsInput, Prisma.PeriodSlotUncheckedCreateWithoutTimetableAssignmentsInput>
}

export type PeriodSlotUpsertWithoutTimetableAssignmentsInput = {
  update: Prisma.XOR<Prisma.PeriodSlotUpdateWithoutTimetableAssignmentsInput, Prisma.PeriodSlotUncheckedUpdateWithoutTimetableAssignmentsInput>
  create: Prisma.XOR<Prisma.PeriodSlotCreateWithoutTimetableAssignmentsInput, Prisma.PeriodSlotUncheckedCreateWithoutTimetableAssignmentsInput>
  where?: Prisma.PeriodSlotWhereInput
}

export type PeriodSlotUpdateToOneWithWhereWithoutTimetableAssignmentsInput = {
  where?: Prisma.PeriodSlotWhereInput
  data: Prisma.XOR<Prisma.PeriodSlotUpdateWithoutTimetableAssignmentsInput, Prisma.PeriodSlotUncheckedUpdateWithoutTimetableAssignmentsInput>
}

export type PeriodSlotUpdateWithoutTimetableAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutPeriodSlotsNestedInput
  period?: Prisma.TimetablePeriodUpdateOneRequiredWithoutPeriodSlotsNestedInput
}

export type PeriodSlotUncheckedUpdateWithoutTimetableAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  periodId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type PeriodSlotCreateManySchoolInput = {
  id?: string
  dayOfWeek: number
  periodId: string
}

export type PeriodSlotUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  period?: Prisma.TimetablePeriodUpdateOneRequiredWithoutPeriodSlotsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutPeriodSlotNestedInput
}

export type PeriodSlotUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  periodId?: Prisma.StringFieldUpdateOperationsInput | string
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutPeriodSlotNestedInput
}

export type PeriodSlotUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  periodId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type PeriodSlotCreateManyPeriodInput = {
  id?: string
  dayOfWeek: number
  schoolId: string
}

export type PeriodSlotUpdateWithoutPeriodInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  school?: Prisma.SchoolUpdateOneRequiredWithoutPeriodSlotsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutPeriodSlotNestedInput
}

export type PeriodSlotUncheckedUpdateWithoutPeriodInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutPeriodSlotNestedInput
}

export type PeriodSlotUncheckedUpdateManyWithoutPeriodInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  dayOfWeek?: Prisma.IntFieldUpdateOperationsInput | number
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
}


/**
 * Count Type PeriodSlotCountOutputType
 */

export type PeriodSlotCountOutputType = {
  timetableAssignments: number
}

export type PeriodSlotCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  timetableAssignments?: boolean | PeriodSlotCountOutputTypeCountTimetableAssignmentsArgs
}

/**
 * PeriodSlotCountOutputType without action
 */
export type PeriodSlotCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlotCountOutputType
   */
  select?: Prisma.PeriodSlotCountOutputTypeSelect<ExtArgs> | null
}

/**
 * PeriodSlotCountOutputType without action
 */
export type PeriodSlotCountOutputTypeCountTimetableAssignmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TimetableAssignmentWhereInput
}


export type PeriodSlotSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  dayOfWeek?: boolean
  schoolId?: boolean
  periodId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  period?: boolean | Prisma.TimetablePeriodDefaultArgs<ExtArgs>
  timetableAssignments?: boolean | Prisma.PeriodSlot$timetableAssignmentsArgs<ExtArgs>
  _count?: boolean | Prisma.PeriodSlotCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["periodSlot"]>

export type PeriodSlotSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  dayOfWeek?: boolean
  schoolId?: boolean
  periodId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  period?: boolean | Prisma.TimetablePeriodDefaultArgs<ExtArgs>
}, ExtArgs["result"]["periodSlot"]>

export type PeriodSlotSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  dayOfWeek?: boolean
  schoolId?: boolean
  periodId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  period?: boolean | Prisma.TimetablePeriodDefaultArgs<ExtArgs>
}, ExtArgs["result"]["periodSlot"]>

export type PeriodSlotSelectScalar = {
  id?: boolean
  dayOfWeek?: boolean
  schoolId?: boolean
  periodId?: boolean
}

export type PeriodSlotOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "dayOfWeek" | "schoolId" | "periodId", ExtArgs["result"]["periodSlot"]>
export type PeriodSlotInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  period?: boolean | Prisma.TimetablePeriodDefaultArgs<ExtArgs>
  timetableAssignments?: boolean | Prisma.PeriodSlot$timetableAssignmentsArgs<ExtArgs>
  _count?: boolean | Prisma.PeriodSlotCountOutputTypeDefaultArgs<ExtArgs>
}
export type PeriodSlotIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  period?: boolean | Prisma.TimetablePeriodDefaultArgs<ExtArgs>
}
export type PeriodSlotIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  period?: boolean | Prisma.TimetablePeriodDefaultArgs<ExtArgs>
}

export type $PeriodSlotPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "PeriodSlot"
  objects: {
    school: Prisma.$SchoolPayload<ExtArgs>
    period: Prisma.$TimetablePeriodPayload<ExtArgs>
    timetableAssignments: Prisma.$TimetableAssignmentPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    dayOfWeek: number
    schoolId: string
    periodId: string
  }, ExtArgs["result"]["periodSlot"]>
  composites: {}
}

export type PeriodSlotGetPayload<S extends boolean | null | undefined | PeriodSlotDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload, S>

export type PeriodSlotCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PeriodSlotFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PeriodSlotCountAggregateInputType | true
  }

export interface PeriodSlotDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PeriodSlot'], meta: { name: 'PeriodSlot' } }
  /**
   * Find zero or one PeriodSlot that matches the filter.
   * @param {PeriodSlotFindUniqueArgs} args - Arguments to find a PeriodSlot
   * @example
   * // Get one PeriodSlot
   * const periodSlot = await prisma.periodSlot.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PeriodSlotFindUniqueArgs>(args: Prisma.SelectSubset<T, PeriodSlotFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PeriodSlotClient<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one PeriodSlot that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PeriodSlotFindUniqueOrThrowArgs} args - Arguments to find a PeriodSlot
   * @example
   * // Get one PeriodSlot
   * const periodSlot = await prisma.periodSlot.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PeriodSlotFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PeriodSlotFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PeriodSlotClient<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PeriodSlot that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeriodSlotFindFirstArgs} args - Arguments to find a PeriodSlot
   * @example
   * // Get one PeriodSlot
   * const periodSlot = await prisma.periodSlot.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PeriodSlotFindFirstArgs>(args?: Prisma.SelectSubset<T, PeriodSlotFindFirstArgs<ExtArgs>>): Prisma.Prisma__PeriodSlotClient<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PeriodSlot that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeriodSlotFindFirstOrThrowArgs} args - Arguments to find a PeriodSlot
   * @example
   * // Get one PeriodSlot
   * const periodSlot = await prisma.periodSlot.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PeriodSlotFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PeriodSlotFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PeriodSlotClient<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more PeriodSlots that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeriodSlotFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PeriodSlots
   * const periodSlots = await prisma.periodSlot.findMany()
   * 
   * // Get first 10 PeriodSlots
   * const periodSlots = await prisma.periodSlot.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const periodSlotWithIdOnly = await prisma.periodSlot.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PeriodSlotFindManyArgs>(args?: Prisma.SelectSubset<T, PeriodSlotFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a PeriodSlot.
   * @param {PeriodSlotCreateArgs} args - Arguments to create a PeriodSlot.
   * @example
   * // Create one PeriodSlot
   * const PeriodSlot = await prisma.periodSlot.create({
   *   data: {
   *     // ... data to create a PeriodSlot
   *   }
   * })
   * 
   */
  create<T extends PeriodSlotCreateArgs>(args: Prisma.SelectSubset<T, PeriodSlotCreateArgs<ExtArgs>>): Prisma.Prisma__PeriodSlotClient<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many PeriodSlots.
   * @param {PeriodSlotCreateManyArgs} args - Arguments to create many PeriodSlots.
   * @example
   * // Create many PeriodSlots
   * const periodSlot = await prisma.periodSlot.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PeriodSlotCreateManyArgs>(args?: Prisma.SelectSubset<T, PeriodSlotCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many PeriodSlots and returns the data saved in the database.
   * @param {PeriodSlotCreateManyAndReturnArgs} args - Arguments to create many PeriodSlots.
   * @example
   * // Create many PeriodSlots
   * const periodSlot = await prisma.periodSlot.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many PeriodSlots and only return the `id`
   * const periodSlotWithIdOnly = await prisma.periodSlot.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PeriodSlotCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PeriodSlotCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a PeriodSlot.
   * @param {PeriodSlotDeleteArgs} args - Arguments to delete one PeriodSlot.
   * @example
   * // Delete one PeriodSlot
   * const PeriodSlot = await prisma.periodSlot.delete({
   *   where: {
   *     // ... filter to delete one PeriodSlot
   *   }
   * })
   * 
   */
  delete<T extends PeriodSlotDeleteArgs>(args: Prisma.SelectSubset<T, PeriodSlotDeleteArgs<ExtArgs>>): Prisma.Prisma__PeriodSlotClient<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one PeriodSlot.
   * @param {PeriodSlotUpdateArgs} args - Arguments to update one PeriodSlot.
   * @example
   * // Update one PeriodSlot
   * const periodSlot = await prisma.periodSlot.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PeriodSlotUpdateArgs>(args: Prisma.SelectSubset<T, PeriodSlotUpdateArgs<ExtArgs>>): Prisma.Prisma__PeriodSlotClient<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more PeriodSlots.
   * @param {PeriodSlotDeleteManyArgs} args - Arguments to filter PeriodSlots to delete.
   * @example
   * // Delete a few PeriodSlots
   * const { count } = await prisma.periodSlot.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PeriodSlotDeleteManyArgs>(args?: Prisma.SelectSubset<T, PeriodSlotDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PeriodSlots.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeriodSlotUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PeriodSlots
   * const periodSlot = await prisma.periodSlot.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PeriodSlotUpdateManyArgs>(args: Prisma.SelectSubset<T, PeriodSlotUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PeriodSlots and returns the data updated in the database.
   * @param {PeriodSlotUpdateManyAndReturnArgs} args - Arguments to update many PeriodSlots.
   * @example
   * // Update many PeriodSlots
   * const periodSlot = await prisma.periodSlot.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more PeriodSlots and only return the `id`
   * const periodSlotWithIdOnly = await prisma.periodSlot.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PeriodSlotUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PeriodSlotUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one PeriodSlot.
   * @param {PeriodSlotUpsertArgs} args - Arguments to update or create a PeriodSlot.
   * @example
   * // Update or create a PeriodSlot
   * const periodSlot = await prisma.periodSlot.upsert({
   *   create: {
   *     // ... data to create a PeriodSlot
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PeriodSlot we want to update
   *   }
   * })
   */
  upsert<T extends PeriodSlotUpsertArgs>(args: Prisma.SelectSubset<T, PeriodSlotUpsertArgs<ExtArgs>>): Prisma.Prisma__PeriodSlotClient<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of PeriodSlots.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeriodSlotCountArgs} args - Arguments to filter PeriodSlots to count.
   * @example
   * // Count the number of PeriodSlots
   * const count = await prisma.periodSlot.count({
   *   where: {
   *     // ... the filter for the PeriodSlots we want to count
   *   }
   * })
  **/
  count<T extends PeriodSlotCountArgs>(
    args?: Prisma.Subset<T, PeriodSlotCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PeriodSlotCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a PeriodSlot.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeriodSlotAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PeriodSlotAggregateArgs>(args: Prisma.Subset<T, PeriodSlotAggregateArgs>): Prisma.PrismaPromise<GetPeriodSlotAggregateType<T>>

  /**
   * Group by PeriodSlot.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PeriodSlotGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PeriodSlotGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PeriodSlotGroupByArgs['orderBy'] }
      : { orderBy?: PeriodSlotGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PeriodSlotGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPeriodSlotGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the PeriodSlot model
 */
readonly fields: PeriodSlotFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PeriodSlot.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PeriodSlotClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>): Prisma.Prisma__SchoolClient<runtime.Types.Result.GetResult<Prisma.$SchoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  period<T extends Prisma.TimetablePeriodDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TimetablePeriodDefaultArgs<ExtArgs>>): Prisma.Prisma__TimetablePeriodClient<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  timetableAssignments<T extends Prisma.PeriodSlot$timetableAssignmentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PeriodSlot$timetableAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TimetableAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the PeriodSlot model
 */
export interface PeriodSlotFieldRefs {
  readonly id: Prisma.FieldRef<"PeriodSlot", 'String'>
  readonly dayOfWeek: Prisma.FieldRef<"PeriodSlot", 'Int'>
  readonly schoolId: Prisma.FieldRef<"PeriodSlot", 'String'>
  readonly periodId: Prisma.FieldRef<"PeriodSlot", 'String'>
}
    

// Custom InputTypes
/**
 * PeriodSlot findUnique
 */
export type PeriodSlotFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
  /**
   * Filter, which PeriodSlot to fetch.
   */
  where: Prisma.PeriodSlotWhereUniqueInput
}

/**
 * PeriodSlot findUniqueOrThrow
 */
export type PeriodSlotFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
  /**
   * Filter, which PeriodSlot to fetch.
   */
  where: Prisma.PeriodSlotWhereUniqueInput
}

/**
 * PeriodSlot findFirst
 */
export type PeriodSlotFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
  /**
   * Filter, which PeriodSlot to fetch.
   */
  where?: Prisma.PeriodSlotWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PeriodSlots to fetch.
   */
  orderBy?: Prisma.PeriodSlotOrderByWithRelationInput | Prisma.PeriodSlotOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PeriodSlots.
   */
  cursor?: Prisma.PeriodSlotWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PeriodSlots from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PeriodSlots.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PeriodSlots.
   */
  distinct?: Prisma.PeriodSlotScalarFieldEnum | Prisma.PeriodSlotScalarFieldEnum[]
}

/**
 * PeriodSlot findFirstOrThrow
 */
export type PeriodSlotFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
  /**
   * Filter, which PeriodSlot to fetch.
   */
  where?: Prisma.PeriodSlotWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PeriodSlots to fetch.
   */
  orderBy?: Prisma.PeriodSlotOrderByWithRelationInput | Prisma.PeriodSlotOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PeriodSlots.
   */
  cursor?: Prisma.PeriodSlotWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PeriodSlots from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PeriodSlots.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PeriodSlots.
   */
  distinct?: Prisma.PeriodSlotScalarFieldEnum | Prisma.PeriodSlotScalarFieldEnum[]
}

/**
 * PeriodSlot findMany
 */
export type PeriodSlotFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
  /**
   * Filter, which PeriodSlots to fetch.
   */
  where?: Prisma.PeriodSlotWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PeriodSlots to fetch.
   */
  orderBy?: Prisma.PeriodSlotOrderByWithRelationInput | Prisma.PeriodSlotOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing PeriodSlots.
   */
  cursor?: Prisma.PeriodSlotWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PeriodSlots from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PeriodSlots.
   */
  skip?: number
  distinct?: Prisma.PeriodSlotScalarFieldEnum | Prisma.PeriodSlotScalarFieldEnum[]
}

/**
 * PeriodSlot create
 */
export type PeriodSlotCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
  /**
   * The data needed to create a PeriodSlot.
   */
  data: Prisma.XOR<Prisma.PeriodSlotCreateInput, Prisma.PeriodSlotUncheckedCreateInput>
}

/**
 * PeriodSlot createMany
 */
export type PeriodSlotCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many PeriodSlots.
   */
  data: Prisma.PeriodSlotCreateManyInput | Prisma.PeriodSlotCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * PeriodSlot createManyAndReturn
 */
export type PeriodSlotCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * The data used to create many PeriodSlots.
   */
  data: Prisma.PeriodSlotCreateManyInput | Prisma.PeriodSlotCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * PeriodSlot update
 */
export type PeriodSlotUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
  /**
   * The data needed to update a PeriodSlot.
   */
  data: Prisma.XOR<Prisma.PeriodSlotUpdateInput, Prisma.PeriodSlotUncheckedUpdateInput>
  /**
   * Choose, which PeriodSlot to update.
   */
  where: Prisma.PeriodSlotWhereUniqueInput
}

/**
 * PeriodSlot updateMany
 */
export type PeriodSlotUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update PeriodSlots.
   */
  data: Prisma.XOR<Prisma.PeriodSlotUpdateManyMutationInput, Prisma.PeriodSlotUncheckedUpdateManyInput>
  /**
   * Filter which PeriodSlots to update
   */
  where?: Prisma.PeriodSlotWhereInput
  /**
   * Limit how many PeriodSlots to update.
   */
  limit?: number
}

/**
 * PeriodSlot updateManyAndReturn
 */
export type PeriodSlotUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * The data used to update PeriodSlots.
   */
  data: Prisma.XOR<Prisma.PeriodSlotUpdateManyMutationInput, Prisma.PeriodSlotUncheckedUpdateManyInput>
  /**
   * Filter which PeriodSlots to update
   */
  where?: Prisma.PeriodSlotWhereInput
  /**
   * Limit how many PeriodSlots to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * PeriodSlot upsert
 */
export type PeriodSlotUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
  /**
   * The filter to search for the PeriodSlot to update in case it exists.
   */
  where: Prisma.PeriodSlotWhereUniqueInput
  /**
   * In case the PeriodSlot found by the `where` argument doesn't exist, create a new PeriodSlot with this data.
   */
  create: Prisma.XOR<Prisma.PeriodSlotCreateInput, Prisma.PeriodSlotUncheckedCreateInput>
  /**
   * In case the PeriodSlot was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PeriodSlotUpdateInput, Prisma.PeriodSlotUncheckedUpdateInput>
}

/**
 * PeriodSlot delete
 */
export type PeriodSlotDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
  /**
   * Filter which PeriodSlot to delete.
   */
  where: Prisma.PeriodSlotWhereUniqueInput
}

/**
 * PeriodSlot deleteMany
 */
export type PeriodSlotDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PeriodSlots to delete
   */
  where?: Prisma.PeriodSlotWhereInput
  /**
   * Limit how many PeriodSlots to delete.
   */
  limit?: number
}

/**
 * PeriodSlot.timetableAssignments
 */
export type PeriodSlot$timetableAssignmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetableAssignment
   */
  select?: Prisma.TimetableAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetableAssignment
   */
  omit?: Prisma.TimetableAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetableAssignmentInclude<ExtArgs> | null
  where?: Prisma.TimetableAssignmentWhereInput
  orderBy?: Prisma.TimetableAssignmentOrderByWithRelationInput | Prisma.TimetableAssignmentOrderByWithRelationInput[]
  cursor?: Prisma.TimetableAssignmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TimetableAssignmentScalarFieldEnum | Prisma.TimetableAssignmentScalarFieldEnum[]
}

/**
 * PeriodSlot without action
 */
export type PeriodSlotDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
}
