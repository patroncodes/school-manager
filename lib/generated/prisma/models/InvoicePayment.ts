
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `InvoicePayment` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model InvoicePayment
 * 
 */
export type InvoicePaymentModel = runtime.Types.Result.DefaultSelection<Prisma.$InvoicePaymentPayload>

export type AggregateInvoicePayment = {
  _count: InvoicePaymentCountAggregateOutputType | null
  _avg: InvoicePaymentAvgAggregateOutputType | null
  _sum: InvoicePaymentSumAggregateOutputType | null
  _min: InvoicePaymentMinAggregateOutputType | null
  _max: InvoicePaymentMaxAggregateOutputType | null
}

export type InvoicePaymentAvgAggregateOutputType = {
  amountPaid: runtime.Decimal | null
}

export type InvoicePaymentSumAggregateOutputType = {
  amountPaid: runtime.Decimal | null
}

export type InvoicePaymentMinAggregateOutputType = {
  id: string | null
  amountPaid: runtime.Decimal | null
  currency: string | null
  reference: string | null
  paymentDate: Date | null
  narration: string | null
  payerName: string | null
  method: string | null
  status: $Enums.PaymentStatus | null
  providerReference: string | null
  schoolId: string | null
  invoiceId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type InvoicePaymentMaxAggregateOutputType = {
  id: string | null
  amountPaid: runtime.Decimal | null
  currency: string | null
  reference: string | null
  paymentDate: Date | null
  narration: string | null
  payerName: string | null
  method: string | null
  status: $Enums.PaymentStatus | null
  providerReference: string | null
  schoolId: string | null
  invoiceId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type InvoicePaymentCountAggregateOutputType = {
  id: number
  amountPaid: number
  currency: number
  reference: number
  paymentDate: number
  narration: number
  payerName: number
  method: number
  status: number
  providerReference: number
  schoolId: number
  invoiceId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type InvoicePaymentAvgAggregateInputType = {
  amountPaid?: true
}

export type InvoicePaymentSumAggregateInputType = {
  amountPaid?: true
}

export type InvoicePaymentMinAggregateInputType = {
  id?: true
  amountPaid?: true
  currency?: true
  reference?: true
  paymentDate?: true
  narration?: true
  payerName?: true
  method?: true
  status?: true
  providerReference?: true
  schoolId?: true
  invoiceId?: true
  createdAt?: true
  updatedAt?: true
}

export type InvoicePaymentMaxAggregateInputType = {
  id?: true
  amountPaid?: true
  currency?: true
  reference?: true
  paymentDate?: true
  narration?: true
  payerName?: true
  method?: true
  status?: true
  providerReference?: true
  schoolId?: true
  invoiceId?: true
  createdAt?: true
  updatedAt?: true
}

export type InvoicePaymentCountAggregateInputType = {
  id?: true
  amountPaid?: true
  currency?: true
  reference?: true
  paymentDate?: true
  narration?: true
  payerName?: true
  method?: true
  status?: true
  providerReference?: true
  schoolId?: true
  invoiceId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type InvoicePaymentAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which InvoicePayment to aggregate.
   */
  where?: Prisma.InvoicePaymentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InvoicePayments to fetch.
   */
  orderBy?: Prisma.InvoicePaymentOrderByWithRelationInput | Prisma.InvoicePaymentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.InvoicePaymentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InvoicePayments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InvoicePayments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned InvoicePayments
  **/
  _count?: true | InvoicePaymentCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: InvoicePaymentAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: InvoicePaymentSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: InvoicePaymentMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: InvoicePaymentMaxAggregateInputType
}

export type GetInvoicePaymentAggregateType<T extends InvoicePaymentAggregateArgs> = {
      [P in keyof T & keyof AggregateInvoicePayment]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateInvoicePayment[P]>
    : Prisma.GetScalarType<T[P], AggregateInvoicePayment[P]>
}




export type InvoicePaymentGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InvoicePaymentWhereInput
  orderBy?: Prisma.InvoicePaymentOrderByWithAggregationInput | Prisma.InvoicePaymentOrderByWithAggregationInput[]
  by: Prisma.InvoicePaymentScalarFieldEnum[] | Prisma.InvoicePaymentScalarFieldEnum
  having?: Prisma.InvoicePaymentScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: InvoicePaymentCountAggregateInputType | true
  _avg?: InvoicePaymentAvgAggregateInputType
  _sum?: InvoicePaymentSumAggregateInputType
  _min?: InvoicePaymentMinAggregateInputType
  _max?: InvoicePaymentMaxAggregateInputType
}

export type InvoicePaymentGroupByOutputType = {
  id: string
  amountPaid: runtime.Decimal
  currency: string
  reference: string
  paymentDate: Date
  narration: string | null
  payerName: string | null
  method: string
  status: $Enums.PaymentStatus
  providerReference: string | null
  schoolId: string
  invoiceId: string
  createdAt: Date
  updatedAt: Date
  _count: InvoicePaymentCountAggregateOutputType | null
  _avg: InvoicePaymentAvgAggregateOutputType | null
  _sum: InvoicePaymentSumAggregateOutputType | null
  _min: InvoicePaymentMinAggregateOutputType | null
  _max: InvoicePaymentMaxAggregateOutputType | null
}

type GetInvoicePaymentGroupByPayload<T extends InvoicePaymentGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<InvoicePaymentGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof InvoicePaymentGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], InvoicePaymentGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], InvoicePaymentGroupByOutputType[P]>
      }
    >
  >



export type InvoicePaymentWhereInput = {
  AND?: Prisma.InvoicePaymentWhereInput | Prisma.InvoicePaymentWhereInput[]
  OR?: Prisma.InvoicePaymentWhereInput[]
  NOT?: Prisma.InvoicePaymentWhereInput | Prisma.InvoicePaymentWhereInput[]
  id?: Prisma.StringFilter<"InvoicePayment"> | string
  amountPaid?: Prisma.DecimalFilter<"InvoicePayment"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFilter<"InvoicePayment"> | string
  reference?: Prisma.StringFilter<"InvoicePayment"> | string
  paymentDate?: Prisma.DateTimeFilter<"InvoicePayment"> | Date | string
  narration?: Prisma.StringNullableFilter<"InvoicePayment"> | string | null
  payerName?: Prisma.StringNullableFilter<"InvoicePayment"> | string | null
  method?: Prisma.StringFilter<"InvoicePayment"> | string
  status?: Prisma.EnumPaymentStatusFilter<"InvoicePayment"> | $Enums.PaymentStatus
  providerReference?: Prisma.StringNullableFilter<"InvoicePayment"> | string | null
  schoolId?: Prisma.StringFilter<"InvoicePayment"> | string
  invoiceId?: Prisma.StringFilter<"InvoicePayment"> | string
  createdAt?: Prisma.DateTimeFilter<"InvoicePayment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"InvoicePayment"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  invoice?: Prisma.XOR<Prisma.InvoiceScalarRelationFilter, Prisma.InvoiceWhereInput>
}

export type InvoicePaymentOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  amountPaid?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  reference?: Prisma.SortOrder
  paymentDate?: Prisma.SortOrder
  narration?: Prisma.SortOrderInput | Prisma.SortOrder
  payerName?: Prisma.SortOrderInput | Prisma.SortOrder
  method?: Prisma.SortOrder
  status?: Prisma.SortOrder
  providerReference?: Prisma.SortOrderInput | Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  invoiceId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  school?: Prisma.SchoolOrderByWithRelationInput
  invoice?: Prisma.InvoiceOrderByWithRelationInput
}

export type InvoicePaymentWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  schoolId_reference?: Prisma.InvoicePaymentSchoolIdReferenceCompoundUniqueInput
  AND?: Prisma.InvoicePaymentWhereInput | Prisma.InvoicePaymentWhereInput[]
  OR?: Prisma.InvoicePaymentWhereInput[]
  NOT?: Prisma.InvoicePaymentWhereInput | Prisma.InvoicePaymentWhereInput[]
  amountPaid?: Prisma.DecimalFilter<"InvoicePayment"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFilter<"InvoicePayment"> | string
  reference?: Prisma.StringFilter<"InvoicePayment"> | string
  paymentDate?: Prisma.DateTimeFilter<"InvoicePayment"> | Date | string
  narration?: Prisma.StringNullableFilter<"InvoicePayment"> | string | null
  payerName?: Prisma.StringNullableFilter<"InvoicePayment"> | string | null
  method?: Prisma.StringFilter<"InvoicePayment"> | string
  status?: Prisma.EnumPaymentStatusFilter<"InvoicePayment"> | $Enums.PaymentStatus
  providerReference?: Prisma.StringNullableFilter<"InvoicePayment"> | string | null
  schoolId?: Prisma.StringFilter<"InvoicePayment"> | string
  invoiceId?: Prisma.StringFilter<"InvoicePayment"> | string
  createdAt?: Prisma.DateTimeFilter<"InvoicePayment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"InvoicePayment"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  invoice?: Prisma.XOR<Prisma.InvoiceScalarRelationFilter, Prisma.InvoiceWhereInput>
}, "id" | "schoolId_reference">

export type InvoicePaymentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  amountPaid?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  reference?: Prisma.SortOrder
  paymentDate?: Prisma.SortOrder
  narration?: Prisma.SortOrderInput | Prisma.SortOrder
  payerName?: Prisma.SortOrderInput | Prisma.SortOrder
  method?: Prisma.SortOrder
  status?: Prisma.SortOrder
  providerReference?: Prisma.SortOrderInput | Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  invoiceId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.InvoicePaymentCountOrderByAggregateInput
  _avg?: Prisma.InvoicePaymentAvgOrderByAggregateInput
  _max?: Prisma.InvoicePaymentMaxOrderByAggregateInput
  _min?: Prisma.InvoicePaymentMinOrderByAggregateInput
  _sum?: Prisma.InvoicePaymentSumOrderByAggregateInput
}

export type InvoicePaymentScalarWhereWithAggregatesInput = {
  AND?: Prisma.InvoicePaymentScalarWhereWithAggregatesInput | Prisma.InvoicePaymentScalarWhereWithAggregatesInput[]
  OR?: Prisma.InvoicePaymentScalarWhereWithAggregatesInput[]
  NOT?: Prisma.InvoicePaymentScalarWhereWithAggregatesInput | Prisma.InvoicePaymentScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"InvoicePayment"> | string
  amountPaid?: Prisma.DecimalWithAggregatesFilter<"InvoicePayment"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringWithAggregatesFilter<"InvoicePayment"> | string
  reference?: Prisma.StringWithAggregatesFilter<"InvoicePayment"> | string
  paymentDate?: Prisma.DateTimeWithAggregatesFilter<"InvoicePayment"> | Date | string
  narration?: Prisma.StringNullableWithAggregatesFilter<"InvoicePayment"> | string | null
  payerName?: Prisma.StringNullableWithAggregatesFilter<"InvoicePayment"> | string | null
  method?: Prisma.StringWithAggregatesFilter<"InvoicePayment"> | string
  status?: Prisma.EnumPaymentStatusWithAggregatesFilter<"InvoicePayment"> | $Enums.PaymentStatus
  providerReference?: Prisma.StringNullableWithAggregatesFilter<"InvoicePayment"> | string | null
  schoolId?: Prisma.StringWithAggregatesFilter<"InvoicePayment"> | string
  invoiceId?: Prisma.StringWithAggregatesFilter<"InvoicePayment"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"InvoicePayment"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"InvoicePayment"> | Date | string
}

export type InvoicePaymentCreateInput = {
  id?: string
  amountPaid: runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: string
  reference: string
  paymentDate: Date | string
  narration?: string | null
  payerName?: string | null
  method: string
  status?: $Enums.PaymentStatus
  providerReference?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutPaymentsInput
  invoice: Prisma.InvoiceCreateNestedOneWithoutPaymentsInput
}

export type InvoicePaymentUncheckedCreateInput = {
  id?: string
  amountPaid: runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: string
  reference: string
  paymentDate: Date | string
  narration?: string | null
  payerName?: string | null
  method: string
  status?: $Enums.PaymentStatus
  providerReference?: string | null
  schoolId: string
  invoiceId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InvoicePaymentUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  amountPaid?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  reference?: Prisma.StringFieldUpdateOperationsInput | string
  paymentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  narration?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  method?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  providerReference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutPaymentsNestedInput
  invoice?: Prisma.InvoiceUpdateOneRequiredWithoutPaymentsNestedInput
}

export type InvoicePaymentUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  amountPaid?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  reference?: Prisma.StringFieldUpdateOperationsInput | string
  paymentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  narration?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  method?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  providerReference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  invoiceId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InvoicePaymentCreateManyInput = {
  id?: string
  amountPaid: runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: string
  reference: string
  paymentDate: Date | string
  narration?: string | null
  payerName?: string | null
  method: string
  status?: $Enums.PaymentStatus
  providerReference?: string | null
  schoolId: string
  invoiceId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InvoicePaymentUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  amountPaid?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  reference?: Prisma.StringFieldUpdateOperationsInput | string
  paymentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  narration?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  method?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  providerReference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InvoicePaymentUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  amountPaid?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  reference?: Prisma.StringFieldUpdateOperationsInput | string
  paymentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  narration?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  method?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  providerReference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  invoiceId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InvoicePaymentListRelationFilter = {
  every?: Prisma.InvoicePaymentWhereInput
  some?: Prisma.InvoicePaymentWhereInput
  none?: Prisma.InvoicePaymentWhereInput
}

export type InvoicePaymentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type InvoicePaymentSchoolIdReferenceCompoundUniqueInput = {
  schoolId: string
  reference: string
}

export type InvoicePaymentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  amountPaid?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  reference?: Prisma.SortOrder
  paymentDate?: Prisma.SortOrder
  narration?: Prisma.SortOrder
  payerName?: Prisma.SortOrder
  method?: Prisma.SortOrder
  status?: Prisma.SortOrder
  providerReference?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  invoiceId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InvoicePaymentAvgOrderByAggregateInput = {
  amountPaid?: Prisma.SortOrder
}

export type InvoicePaymentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  amountPaid?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  reference?: Prisma.SortOrder
  paymentDate?: Prisma.SortOrder
  narration?: Prisma.SortOrder
  payerName?: Prisma.SortOrder
  method?: Prisma.SortOrder
  status?: Prisma.SortOrder
  providerReference?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  invoiceId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InvoicePaymentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  amountPaid?: Prisma.SortOrder
  currency?: Prisma.SortOrder
  reference?: Prisma.SortOrder
  paymentDate?: Prisma.SortOrder
  narration?: Prisma.SortOrder
  payerName?: Prisma.SortOrder
  method?: Prisma.SortOrder
  status?: Prisma.SortOrder
  providerReference?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  invoiceId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type InvoicePaymentSumOrderByAggregateInput = {
  amountPaid?: Prisma.SortOrder
}

export type InvoicePaymentCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutSchoolInput, Prisma.InvoicePaymentUncheckedCreateWithoutSchoolInput> | Prisma.InvoicePaymentCreateWithoutSchoolInput[] | Prisma.InvoicePaymentUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.InvoicePaymentCreateOrConnectWithoutSchoolInput | Prisma.InvoicePaymentCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.InvoicePaymentCreateManySchoolInputEnvelope
  connect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
}

export type InvoicePaymentUncheckedCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutSchoolInput, Prisma.InvoicePaymentUncheckedCreateWithoutSchoolInput> | Prisma.InvoicePaymentCreateWithoutSchoolInput[] | Prisma.InvoicePaymentUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.InvoicePaymentCreateOrConnectWithoutSchoolInput | Prisma.InvoicePaymentCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.InvoicePaymentCreateManySchoolInputEnvelope
  connect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
}

export type InvoicePaymentUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutSchoolInput, Prisma.InvoicePaymentUncheckedCreateWithoutSchoolInput> | Prisma.InvoicePaymentCreateWithoutSchoolInput[] | Prisma.InvoicePaymentUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.InvoicePaymentCreateOrConnectWithoutSchoolInput | Prisma.InvoicePaymentCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.InvoicePaymentUpsertWithWhereUniqueWithoutSchoolInput | Prisma.InvoicePaymentUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.InvoicePaymentCreateManySchoolInputEnvelope
  set?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  disconnect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  delete?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  connect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  update?: Prisma.InvoicePaymentUpdateWithWhereUniqueWithoutSchoolInput | Prisma.InvoicePaymentUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.InvoicePaymentUpdateManyWithWhereWithoutSchoolInput | Prisma.InvoicePaymentUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.InvoicePaymentScalarWhereInput | Prisma.InvoicePaymentScalarWhereInput[]
}

export type InvoicePaymentUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutSchoolInput, Prisma.InvoicePaymentUncheckedCreateWithoutSchoolInput> | Prisma.InvoicePaymentCreateWithoutSchoolInput[] | Prisma.InvoicePaymentUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.InvoicePaymentCreateOrConnectWithoutSchoolInput | Prisma.InvoicePaymentCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.InvoicePaymentUpsertWithWhereUniqueWithoutSchoolInput | Prisma.InvoicePaymentUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.InvoicePaymentCreateManySchoolInputEnvelope
  set?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  disconnect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  delete?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  connect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  update?: Prisma.InvoicePaymentUpdateWithWhereUniqueWithoutSchoolInput | Prisma.InvoicePaymentUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.InvoicePaymentUpdateManyWithWhereWithoutSchoolInput | Prisma.InvoicePaymentUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.InvoicePaymentScalarWhereInput | Prisma.InvoicePaymentScalarWhereInput[]
}

export type InvoicePaymentCreateNestedManyWithoutInvoiceInput = {
  create?: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutInvoiceInput, Prisma.InvoicePaymentUncheckedCreateWithoutInvoiceInput> | Prisma.InvoicePaymentCreateWithoutInvoiceInput[] | Prisma.InvoicePaymentUncheckedCreateWithoutInvoiceInput[]
  connectOrCreate?: Prisma.InvoicePaymentCreateOrConnectWithoutInvoiceInput | Prisma.InvoicePaymentCreateOrConnectWithoutInvoiceInput[]
  createMany?: Prisma.InvoicePaymentCreateManyInvoiceInputEnvelope
  connect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
}

export type InvoicePaymentUncheckedCreateNestedManyWithoutInvoiceInput = {
  create?: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutInvoiceInput, Prisma.InvoicePaymentUncheckedCreateWithoutInvoiceInput> | Prisma.InvoicePaymentCreateWithoutInvoiceInput[] | Prisma.InvoicePaymentUncheckedCreateWithoutInvoiceInput[]
  connectOrCreate?: Prisma.InvoicePaymentCreateOrConnectWithoutInvoiceInput | Prisma.InvoicePaymentCreateOrConnectWithoutInvoiceInput[]
  createMany?: Prisma.InvoicePaymentCreateManyInvoiceInputEnvelope
  connect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
}

export type InvoicePaymentUpdateManyWithoutInvoiceNestedInput = {
  create?: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutInvoiceInput, Prisma.InvoicePaymentUncheckedCreateWithoutInvoiceInput> | Prisma.InvoicePaymentCreateWithoutInvoiceInput[] | Prisma.InvoicePaymentUncheckedCreateWithoutInvoiceInput[]
  connectOrCreate?: Prisma.InvoicePaymentCreateOrConnectWithoutInvoiceInput | Prisma.InvoicePaymentCreateOrConnectWithoutInvoiceInput[]
  upsert?: Prisma.InvoicePaymentUpsertWithWhereUniqueWithoutInvoiceInput | Prisma.InvoicePaymentUpsertWithWhereUniqueWithoutInvoiceInput[]
  createMany?: Prisma.InvoicePaymentCreateManyInvoiceInputEnvelope
  set?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  disconnect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  delete?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  connect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  update?: Prisma.InvoicePaymentUpdateWithWhereUniqueWithoutInvoiceInput | Prisma.InvoicePaymentUpdateWithWhereUniqueWithoutInvoiceInput[]
  updateMany?: Prisma.InvoicePaymentUpdateManyWithWhereWithoutInvoiceInput | Prisma.InvoicePaymentUpdateManyWithWhereWithoutInvoiceInput[]
  deleteMany?: Prisma.InvoicePaymentScalarWhereInput | Prisma.InvoicePaymentScalarWhereInput[]
}

export type InvoicePaymentUncheckedUpdateManyWithoutInvoiceNestedInput = {
  create?: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutInvoiceInput, Prisma.InvoicePaymentUncheckedCreateWithoutInvoiceInput> | Prisma.InvoicePaymentCreateWithoutInvoiceInput[] | Prisma.InvoicePaymentUncheckedCreateWithoutInvoiceInput[]
  connectOrCreate?: Prisma.InvoicePaymentCreateOrConnectWithoutInvoiceInput | Prisma.InvoicePaymentCreateOrConnectWithoutInvoiceInput[]
  upsert?: Prisma.InvoicePaymentUpsertWithWhereUniqueWithoutInvoiceInput | Prisma.InvoicePaymentUpsertWithWhereUniqueWithoutInvoiceInput[]
  createMany?: Prisma.InvoicePaymentCreateManyInvoiceInputEnvelope
  set?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  disconnect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  delete?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  connect?: Prisma.InvoicePaymentWhereUniqueInput | Prisma.InvoicePaymentWhereUniqueInput[]
  update?: Prisma.InvoicePaymentUpdateWithWhereUniqueWithoutInvoiceInput | Prisma.InvoicePaymentUpdateWithWhereUniqueWithoutInvoiceInput[]
  updateMany?: Prisma.InvoicePaymentUpdateManyWithWhereWithoutInvoiceInput | Prisma.InvoicePaymentUpdateManyWithWhereWithoutInvoiceInput[]
  deleteMany?: Prisma.InvoicePaymentScalarWhereInput | Prisma.InvoicePaymentScalarWhereInput[]
}

export type EnumPaymentStatusFieldUpdateOperationsInput = {
  set?: $Enums.PaymentStatus
}

export type InvoicePaymentCreateWithoutSchoolInput = {
  id?: string
  amountPaid: runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: string
  reference: string
  paymentDate: Date | string
  narration?: string | null
  payerName?: string | null
  method: string
  status?: $Enums.PaymentStatus
  providerReference?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  invoice: Prisma.InvoiceCreateNestedOneWithoutPaymentsInput
}

export type InvoicePaymentUncheckedCreateWithoutSchoolInput = {
  id?: string
  amountPaid: runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: string
  reference: string
  paymentDate: Date | string
  narration?: string | null
  payerName?: string | null
  method: string
  status?: $Enums.PaymentStatus
  providerReference?: string | null
  invoiceId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InvoicePaymentCreateOrConnectWithoutSchoolInput = {
  where: Prisma.InvoicePaymentWhereUniqueInput
  create: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutSchoolInput, Prisma.InvoicePaymentUncheckedCreateWithoutSchoolInput>
}

export type InvoicePaymentCreateManySchoolInputEnvelope = {
  data: Prisma.InvoicePaymentCreateManySchoolInput | Prisma.InvoicePaymentCreateManySchoolInput[]
  skipDuplicates?: boolean
}

export type InvoicePaymentUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.InvoicePaymentWhereUniqueInput
  update: Prisma.XOR<Prisma.InvoicePaymentUpdateWithoutSchoolInput, Prisma.InvoicePaymentUncheckedUpdateWithoutSchoolInput>
  create: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutSchoolInput, Prisma.InvoicePaymentUncheckedCreateWithoutSchoolInput>
}

export type InvoicePaymentUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.InvoicePaymentWhereUniqueInput
  data: Prisma.XOR<Prisma.InvoicePaymentUpdateWithoutSchoolInput, Prisma.InvoicePaymentUncheckedUpdateWithoutSchoolInput>
}

export type InvoicePaymentUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.InvoicePaymentScalarWhereInput
  data: Prisma.XOR<Prisma.InvoicePaymentUpdateManyMutationInput, Prisma.InvoicePaymentUncheckedUpdateManyWithoutSchoolInput>
}

export type InvoicePaymentScalarWhereInput = {
  AND?: Prisma.InvoicePaymentScalarWhereInput | Prisma.InvoicePaymentScalarWhereInput[]
  OR?: Prisma.InvoicePaymentScalarWhereInput[]
  NOT?: Prisma.InvoicePaymentScalarWhereInput | Prisma.InvoicePaymentScalarWhereInput[]
  id?: Prisma.StringFilter<"InvoicePayment"> | string
  amountPaid?: Prisma.DecimalFilter<"InvoicePayment"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFilter<"InvoicePayment"> | string
  reference?: Prisma.StringFilter<"InvoicePayment"> | string
  paymentDate?: Prisma.DateTimeFilter<"InvoicePayment"> | Date | string
  narration?: Prisma.StringNullableFilter<"InvoicePayment"> | string | null
  payerName?: Prisma.StringNullableFilter<"InvoicePayment"> | string | null
  method?: Prisma.StringFilter<"InvoicePayment"> | string
  status?: Prisma.EnumPaymentStatusFilter<"InvoicePayment"> | $Enums.PaymentStatus
  providerReference?: Prisma.StringNullableFilter<"InvoicePayment"> | string | null
  schoolId?: Prisma.StringFilter<"InvoicePayment"> | string
  invoiceId?: Prisma.StringFilter<"InvoicePayment"> | string
  createdAt?: Prisma.DateTimeFilter<"InvoicePayment"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"InvoicePayment"> | Date | string
}

export type InvoicePaymentCreateWithoutInvoiceInput = {
  id?: string
  amountPaid: runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: string
  reference: string
  paymentDate: Date | string
  narration?: string | null
  payerName?: string | null
  method: string
  status?: $Enums.PaymentStatus
  providerReference?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutPaymentsInput
}

export type InvoicePaymentUncheckedCreateWithoutInvoiceInput = {
  id?: string
  amountPaid: runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: string
  reference: string
  paymentDate: Date | string
  narration?: string | null
  payerName?: string | null
  method: string
  status?: $Enums.PaymentStatus
  providerReference?: string | null
  schoolId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InvoicePaymentCreateOrConnectWithoutInvoiceInput = {
  where: Prisma.InvoicePaymentWhereUniqueInput
  create: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutInvoiceInput, Prisma.InvoicePaymentUncheckedCreateWithoutInvoiceInput>
}

export type InvoicePaymentCreateManyInvoiceInputEnvelope = {
  data: Prisma.InvoicePaymentCreateManyInvoiceInput | Prisma.InvoicePaymentCreateManyInvoiceInput[]
  skipDuplicates?: boolean
}

export type InvoicePaymentUpsertWithWhereUniqueWithoutInvoiceInput = {
  where: Prisma.InvoicePaymentWhereUniqueInput
  update: Prisma.XOR<Prisma.InvoicePaymentUpdateWithoutInvoiceInput, Prisma.InvoicePaymentUncheckedUpdateWithoutInvoiceInput>
  create: Prisma.XOR<Prisma.InvoicePaymentCreateWithoutInvoiceInput, Prisma.InvoicePaymentUncheckedCreateWithoutInvoiceInput>
}

export type InvoicePaymentUpdateWithWhereUniqueWithoutInvoiceInput = {
  where: Prisma.InvoicePaymentWhereUniqueInput
  data: Prisma.XOR<Prisma.InvoicePaymentUpdateWithoutInvoiceInput, Prisma.InvoicePaymentUncheckedUpdateWithoutInvoiceInput>
}

export type InvoicePaymentUpdateManyWithWhereWithoutInvoiceInput = {
  where: Prisma.InvoicePaymentScalarWhereInput
  data: Prisma.XOR<Prisma.InvoicePaymentUpdateManyMutationInput, Prisma.InvoicePaymentUncheckedUpdateManyWithoutInvoiceInput>
}

export type InvoicePaymentCreateManySchoolInput = {
  id?: string
  amountPaid: runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: string
  reference: string
  paymentDate: Date | string
  narration?: string | null
  payerName?: string | null
  method: string
  status?: $Enums.PaymentStatus
  providerReference?: string | null
  invoiceId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InvoicePaymentUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  amountPaid?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  reference?: Prisma.StringFieldUpdateOperationsInput | string
  paymentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  narration?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  method?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  providerReference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  invoice?: Prisma.InvoiceUpdateOneRequiredWithoutPaymentsNestedInput
}

export type InvoicePaymentUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  amountPaid?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  reference?: Prisma.StringFieldUpdateOperationsInput | string
  paymentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  narration?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  method?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  providerReference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  invoiceId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InvoicePaymentUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  amountPaid?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  reference?: Prisma.StringFieldUpdateOperationsInput | string
  paymentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  narration?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  method?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  providerReference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  invoiceId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InvoicePaymentCreateManyInvoiceInput = {
  id?: string
  amountPaid: runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: string
  reference: string
  paymentDate: Date | string
  narration?: string | null
  payerName?: string | null
  method: string
  status?: $Enums.PaymentStatus
  providerReference?: string | null
  schoolId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type InvoicePaymentUpdateWithoutInvoiceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  amountPaid?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  reference?: Prisma.StringFieldUpdateOperationsInput | string
  paymentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  narration?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  method?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  providerReference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutPaymentsNestedInput
}

export type InvoicePaymentUncheckedUpdateWithoutInvoiceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  amountPaid?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  reference?: Prisma.StringFieldUpdateOperationsInput | string
  paymentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  narration?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  method?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  providerReference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type InvoicePaymentUncheckedUpdateManyWithoutInvoiceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  amountPaid?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  currency?: Prisma.StringFieldUpdateOperationsInput | string
  reference?: Prisma.StringFieldUpdateOperationsInput | string
  paymentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  narration?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  payerName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  method?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
  providerReference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type InvoicePaymentSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  amountPaid?: boolean
  currency?: boolean
  reference?: boolean
  paymentDate?: boolean
  narration?: boolean
  payerName?: boolean
  method?: boolean
  status?: boolean
  providerReference?: boolean
  schoolId?: boolean
  invoiceId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  invoice?: boolean | Prisma.InvoiceDefaultArgs<ExtArgs>
}, ExtArgs["result"]["invoicePayment"]>

export type InvoicePaymentSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  amountPaid?: boolean
  currency?: boolean
  reference?: boolean
  paymentDate?: boolean
  narration?: boolean
  payerName?: boolean
  method?: boolean
  status?: boolean
  providerReference?: boolean
  schoolId?: boolean
  invoiceId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  invoice?: boolean | Prisma.InvoiceDefaultArgs<ExtArgs>
}, ExtArgs["result"]["invoicePayment"]>

export type InvoicePaymentSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  amountPaid?: boolean
  currency?: boolean
  reference?: boolean
  paymentDate?: boolean
  narration?: boolean
  payerName?: boolean
  method?: boolean
  status?: boolean
  providerReference?: boolean
  schoolId?: boolean
  invoiceId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  invoice?: boolean | Prisma.InvoiceDefaultArgs<ExtArgs>
}, ExtArgs["result"]["invoicePayment"]>

export type InvoicePaymentSelectScalar = {
  id?: boolean
  amountPaid?: boolean
  currency?: boolean
  reference?: boolean
  paymentDate?: boolean
  narration?: boolean
  payerName?: boolean
  method?: boolean
  status?: boolean
  providerReference?: boolean
  schoolId?: boolean
  invoiceId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type InvoicePaymentOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "amountPaid" | "currency" | "reference" | "paymentDate" | "narration" | "payerName" | "method" | "status" | "providerReference" | "schoolId" | "invoiceId" | "createdAt" | "updatedAt", ExtArgs["result"]["invoicePayment"]>
export type InvoicePaymentInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  invoice?: boolean | Prisma.InvoiceDefaultArgs<ExtArgs>
}
export type InvoicePaymentIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  invoice?: boolean | Prisma.InvoiceDefaultArgs<ExtArgs>
}
export type InvoicePaymentIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  invoice?: boolean | Prisma.InvoiceDefaultArgs<ExtArgs>
}

export type $InvoicePaymentPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "InvoicePayment"
  objects: {
    school: Prisma.$SchoolPayload<ExtArgs>
    invoice: Prisma.$InvoicePayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    amountPaid: runtime.Decimal
    currency: string
    reference: string
    paymentDate: Date
    narration: string | null
    payerName: string | null
    method: string
    status: $Enums.PaymentStatus
    providerReference: string | null
    schoolId: string
    invoiceId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["invoicePayment"]>
  composites: {}
}

export type InvoicePaymentGetPayload<S extends boolean | null | undefined | InvoicePaymentDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload, S>

export type InvoicePaymentCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<InvoicePaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: InvoicePaymentCountAggregateInputType | true
  }

export interface InvoicePaymentDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InvoicePayment'], meta: { name: 'InvoicePayment' } }
  /**
   * Find zero or one InvoicePayment that matches the filter.
   * @param {InvoicePaymentFindUniqueArgs} args - Arguments to find a InvoicePayment
   * @example
   * // Get one InvoicePayment
   * const invoicePayment = await prisma.invoicePayment.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends InvoicePaymentFindUniqueArgs>(args: Prisma.SelectSubset<T, InvoicePaymentFindUniqueArgs<ExtArgs>>): Prisma.Prisma__InvoicePaymentClient<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one InvoicePayment that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {InvoicePaymentFindUniqueOrThrowArgs} args - Arguments to find a InvoicePayment
   * @example
   * // Get one InvoicePayment
   * const invoicePayment = await prisma.invoicePayment.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends InvoicePaymentFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, InvoicePaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__InvoicePaymentClient<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first InvoicePayment that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InvoicePaymentFindFirstArgs} args - Arguments to find a InvoicePayment
   * @example
   * // Get one InvoicePayment
   * const invoicePayment = await prisma.invoicePayment.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends InvoicePaymentFindFirstArgs>(args?: Prisma.SelectSubset<T, InvoicePaymentFindFirstArgs<ExtArgs>>): Prisma.Prisma__InvoicePaymentClient<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first InvoicePayment that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InvoicePaymentFindFirstOrThrowArgs} args - Arguments to find a InvoicePayment
   * @example
   * // Get one InvoicePayment
   * const invoicePayment = await prisma.invoicePayment.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends InvoicePaymentFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, InvoicePaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__InvoicePaymentClient<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more InvoicePayments that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InvoicePaymentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all InvoicePayments
   * const invoicePayments = await prisma.invoicePayment.findMany()
   * 
   * // Get first 10 InvoicePayments
   * const invoicePayments = await prisma.invoicePayment.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const invoicePaymentWithIdOnly = await prisma.invoicePayment.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends InvoicePaymentFindManyArgs>(args?: Prisma.SelectSubset<T, InvoicePaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a InvoicePayment.
   * @param {InvoicePaymentCreateArgs} args - Arguments to create a InvoicePayment.
   * @example
   * // Create one InvoicePayment
   * const InvoicePayment = await prisma.invoicePayment.create({
   *   data: {
   *     // ... data to create a InvoicePayment
   *   }
   * })
   * 
   */
  create<T extends InvoicePaymentCreateArgs>(args: Prisma.SelectSubset<T, InvoicePaymentCreateArgs<ExtArgs>>): Prisma.Prisma__InvoicePaymentClient<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many InvoicePayments.
   * @param {InvoicePaymentCreateManyArgs} args - Arguments to create many InvoicePayments.
   * @example
   * // Create many InvoicePayments
   * const invoicePayment = await prisma.invoicePayment.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends InvoicePaymentCreateManyArgs>(args?: Prisma.SelectSubset<T, InvoicePaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many InvoicePayments and returns the data saved in the database.
   * @param {InvoicePaymentCreateManyAndReturnArgs} args - Arguments to create many InvoicePayments.
   * @example
   * // Create many InvoicePayments
   * const invoicePayment = await prisma.invoicePayment.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many InvoicePayments and only return the `id`
   * const invoicePaymentWithIdOnly = await prisma.invoicePayment.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends InvoicePaymentCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, InvoicePaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a InvoicePayment.
   * @param {InvoicePaymentDeleteArgs} args - Arguments to delete one InvoicePayment.
   * @example
   * // Delete one InvoicePayment
   * const InvoicePayment = await prisma.invoicePayment.delete({
   *   where: {
   *     // ... filter to delete one InvoicePayment
   *   }
   * })
   * 
   */
  delete<T extends InvoicePaymentDeleteArgs>(args: Prisma.SelectSubset<T, InvoicePaymentDeleteArgs<ExtArgs>>): Prisma.Prisma__InvoicePaymentClient<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one InvoicePayment.
   * @param {InvoicePaymentUpdateArgs} args - Arguments to update one InvoicePayment.
   * @example
   * // Update one InvoicePayment
   * const invoicePayment = await prisma.invoicePayment.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends InvoicePaymentUpdateArgs>(args: Prisma.SelectSubset<T, InvoicePaymentUpdateArgs<ExtArgs>>): Prisma.Prisma__InvoicePaymentClient<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more InvoicePayments.
   * @param {InvoicePaymentDeleteManyArgs} args - Arguments to filter InvoicePayments to delete.
   * @example
   * // Delete a few InvoicePayments
   * const { count } = await prisma.invoicePayment.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends InvoicePaymentDeleteManyArgs>(args?: Prisma.SelectSubset<T, InvoicePaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more InvoicePayments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InvoicePaymentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many InvoicePayments
   * const invoicePayment = await prisma.invoicePayment.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends InvoicePaymentUpdateManyArgs>(args: Prisma.SelectSubset<T, InvoicePaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more InvoicePayments and returns the data updated in the database.
   * @param {InvoicePaymentUpdateManyAndReturnArgs} args - Arguments to update many InvoicePayments.
   * @example
   * // Update many InvoicePayments
   * const invoicePayment = await prisma.invoicePayment.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more InvoicePayments and only return the `id`
   * const invoicePaymentWithIdOnly = await prisma.invoicePayment.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends InvoicePaymentUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, InvoicePaymentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one InvoicePayment.
   * @param {InvoicePaymentUpsertArgs} args - Arguments to update or create a InvoicePayment.
   * @example
   * // Update or create a InvoicePayment
   * const invoicePayment = await prisma.invoicePayment.upsert({
   *   create: {
   *     // ... data to create a InvoicePayment
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the InvoicePayment we want to update
   *   }
   * })
   */
  upsert<T extends InvoicePaymentUpsertArgs>(args: Prisma.SelectSubset<T, InvoicePaymentUpsertArgs<ExtArgs>>): Prisma.Prisma__InvoicePaymentClient<runtime.Types.Result.GetResult<Prisma.$InvoicePaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of InvoicePayments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InvoicePaymentCountArgs} args - Arguments to filter InvoicePayments to count.
   * @example
   * // Count the number of InvoicePayments
   * const count = await prisma.invoicePayment.count({
   *   where: {
   *     // ... the filter for the InvoicePayments we want to count
   *   }
   * })
  **/
  count<T extends InvoicePaymentCountArgs>(
    args?: Prisma.Subset<T, InvoicePaymentCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], InvoicePaymentCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a InvoicePayment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InvoicePaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends InvoicePaymentAggregateArgs>(args: Prisma.Subset<T, InvoicePaymentAggregateArgs>): Prisma.PrismaPromise<GetInvoicePaymentAggregateType<T>>

  /**
   * Group by InvoicePayment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {InvoicePaymentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends InvoicePaymentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: InvoicePaymentGroupByArgs['orderBy'] }
      : { orderBy?: InvoicePaymentGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, InvoicePaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoicePaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the InvoicePayment model
 */
readonly fields: InvoicePaymentFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for InvoicePayment.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__InvoicePaymentClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>): Prisma.Prisma__SchoolClient<runtime.Types.Result.GetResult<Prisma.$SchoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  invoice<T extends Prisma.InvoiceDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.InvoiceDefaultArgs<ExtArgs>>): Prisma.Prisma__InvoiceClient<runtime.Types.Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the InvoicePayment model
 */
export interface InvoicePaymentFieldRefs {
  readonly id: Prisma.FieldRef<"InvoicePayment", 'String'>
  readonly amountPaid: Prisma.FieldRef<"InvoicePayment", 'Decimal'>
  readonly currency: Prisma.FieldRef<"InvoicePayment", 'String'>
  readonly reference: Prisma.FieldRef<"InvoicePayment", 'String'>
  readonly paymentDate: Prisma.FieldRef<"InvoicePayment", 'DateTime'>
  readonly narration: Prisma.FieldRef<"InvoicePayment", 'String'>
  readonly payerName: Prisma.FieldRef<"InvoicePayment", 'String'>
  readonly method: Prisma.FieldRef<"InvoicePayment", 'String'>
  readonly status: Prisma.FieldRef<"InvoicePayment", 'PaymentStatus'>
  readonly providerReference: Prisma.FieldRef<"InvoicePayment", 'String'>
  readonly schoolId: Prisma.FieldRef<"InvoicePayment", 'String'>
  readonly invoiceId: Prisma.FieldRef<"InvoicePayment", 'String'>
  readonly createdAt: Prisma.FieldRef<"InvoicePayment", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"InvoicePayment", 'DateTime'>
}
    

// Custom InputTypes
/**
 * InvoicePayment findUnique
 */
export type InvoicePaymentFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentInclude<ExtArgs> | null
  /**
   * Filter, which InvoicePayment to fetch.
   */
  where: Prisma.InvoicePaymentWhereUniqueInput
}

/**
 * InvoicePayment findUniqueOrThrow
 */
export type InvoicePaymentFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentInclude<ExtArgs> | null
  /**
   * Filter, which InvoicePayment to fetch.
   */
  where: Prisma.InvoicePaymentWhereUniqueInput
}

/**
 * InvoicePayment findFirst
 */
export type InvoicePaymentFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentInclude<ExtArgs> | null
  /**
   * Filter, which InvoicePayment to fetch.
   */
  where?: Prisma.InvoicePaymentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InvoicePayments to fetch.
   */
  orderBy?: Prisma.InvoicePaymentOrderByWithRelationInput | Prisma.InvoicePaymentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for InvoicePayments.
   */
  cursor?: Prisma.InvoicePaymentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InvoicePayments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InvoicePayments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of InvoicePayments.
   */
  distinct?: Prisma.InvoicePaymentScalarFieldEnum | Prisma.InvoicePaymentScalarFieldEnum[]
}

/**
 * InvoicePayment findFirstOrThrow
 */
export type InvoicePaymentFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentInclude<ExtArgs> | null
  /**
   * Filter, which InvoicePayment to fetch.
   */
  where?: Prisma.InvoicePaymentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InvoicePayments to fetch.
   */
  orderBy?: Prisma.InvoicePaymentOrderByWithRelationInput | Prisma.InvoicePaymentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for InvoicePayments.
   */
  cursor?: Prisma.InvoicePaymentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InvoicePayments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InvoicePayments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of InvoicePayments.
   */
  distinct?: Prisma.InvoicePaymentScalarFieldEnum | Prisma.InvoicePaymentScalarFieldEnum[]
}

/**
 * InvoicePayment findMany
 */
export type InvoicePaymentFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentInclude<ExtArgs> | null
  /**
   * Filter, which InvoicePayments to fetch.
   */
  where?: Prisma.InvoicePaymentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of InvoicePayments to fetch.
   */
  orderBy?: Prisma.InvoicePaymentOrderByWithRelationInput | Prisma.InvoicePaymentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing InvoicePayments.
   */
  cursor?: Prisma.InvoicePaymentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` InvoicePayments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` InvoicePayments.
   */
  skip?: number
  distinct?: Prisma.InvoicePaymentScalarFieldEnum | Prisma.InvoicePaymentScalarFieldEnum[]
}

/**
 * InvoicePayment create
 */
export type InvoicePaymentCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentInclude<ExtArgs> | null
  /**
   * The data needed to create a InvoicePayment.
   */
  data: Prisma.XOR<Prisma.InvoicePaymentCreateInput, Prisma.InvoicePaymentUncheckedCreateInput>
}

/**
 * InvoicePayment createMany
 */
export type InvoicePaymentCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many InvoicePayments.
   */
  data: Prisma.InvoicePaymentCreateManyInput | Prisma.InvoicePaymentCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * InvoicePayment createManyAndReturn
 */
export type InvoicePaymentCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * The data used to create many InvoicePayments.
   */
  data: Prisma.InvoicePaymentCreateManyInput | Prisma.InvoicePaymentCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * InvoicePayment update
 */
export type InvoicePaymentUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentInclude<ExtArgs> | null
  /**
   * The data needed to update a InvoicePayment.
   */
  data: Prisma.XOR<Prisma.InvoicePaymentUpdateInput, Prisma.InvoicePaymentUncheckedUpdateInput>
  /**
   * Choose, which InvoicePayment to update.
   */
  where: Prisma.InvoicePaymentWhereUniqueInput
}

/**
 * InvoicePayment updateMany
 */
export type InvoicePaymentUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update InvoicePayments.
   */
  data: Prisma.XOR<Prisma.InvoicePaymentUpdateManyMutationInput, Prisma.InvoicePaymentUncheckedUpdateManyInput>
  /**
   * Filter which InvoicePayments to update
   */
  where?: Prisma.InvoicePaymentWhereInput
  /**
   * Limit how many InvoicePayments to update.
   */
  limit?: number
}

/**
 * InvoicePayment updateManyAndReturn
 */
export type InvoicePaymentUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * The data used to update InvoicePayments.
   */
  data: Prisma.XOR<Prisma.InvoicePaymentUpdateManyMutationInput, Prisma.InvoicePaymentUncheckedUpdateManyInput>
  /**
   * Filter which InvoicePayments to update
   */
  where?: Prisma.InvoicePaymentWhereInput
  /**
   * Limit how many InvoicePayments to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * InvoicePayment upsert
 */
export type InvoicePaymentUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentInclude<ExtArgs> | null
  /**
   * The filter to search for the InvoicePayment to update in case it exists.
   */
  where: Prisma.InvoicePaymentWhereUniqueInput
  /**
   * In case the InvoicePayment found by the `where` argument doesn't exist, create a new InvoicePayment with this data.
   */
  create: Prisma.XOR<Prisma.InvoicePaymentCreateInput, Prisma.InvoicePaymentUncheckedCreateInput>
  /**
   * In case the InvoicePayment was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.InvoicePaymentUpdateInput, Prisma.InvoicePaymentUncheckedUpdateInput>
}

/**
 * InvoicePayment delete
 */
export type InvoicePaymentDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentInclude<ExtArgs> | null
  /**
   * Filter which InvoicePayment to delete.
   */
  where: Prisma.InvoicePaymentWhereUniqueInput
}

/**
 * InvoicePayment deleteMany
 */
export type InvoicePaymentDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which InvoicePayments to delete
   */
  where?: Prisma.InvoicePaymentWhereInput
  /**
   * Limit how many InvoicePayments to delete.
   */
  limit?: number
}

/**
 * InvoicePayment without action
 */
export type InvoicePaymentDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the InvoicePayment
   */
  select?: Prisma.InvoicePaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the InvoicePayment
   */
  omit?: Prisma.InvoicePaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoicePaymentInclude<ExtArgs> | null
}
