
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `StudentClassHistory` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model StudentClassHistory
 * 
 */
export type StudentClassHistoryModel = runtime.Types.Result.DefaultSelection<Prisma.$StudentClassHistoryPayload>

export type AggregateStudentClassHistory = {
  _count: StudentClassHistoryCountAggregateOutputType | null
  _min: StudentClassHistoryMinAggregateOutputType | null
  _max: StudentClassHistoryMaxAggregateOutputType | null
}

export type StudentClassHistoryMinAggregateOutputType = {
  id: string | null
  startDate: Date | null
  endDate: Date | null
  schoolId: string | null
  studentId: string | null
  classId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type StudentClassHistoryMaxAggregateOutputType = {
  id: string | null
  startDate: Date | null
  endDate: Date | null
  schoolId: string | null
  studentId: string | null
  classId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type StudentClassHistoryCountAggregateOutputType = {
  id: number
  startDate: number
  endDate: number
  schoolId: number
  studentId: number
  classId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type StudentClassHistoryMinAggregateInputType = {
  id?: true
  startDate?: true
  endDate?: true
  schoolId?: true
  studentId?: true
  classId?: true
  createdAt?: true
  updatedAt?: true
}

export type StudentClassHistoryMaxAggregateInputType = {
  id?: true
  startDate?: true
  endDate?: true
  schoolId?: true
  studentId?: true
  classId?: true
  createdAt?: true
  updatedAt?: true
}

export type StudentClassHistoryCountAggregateInputType = {
  id?: true
  startDate?: true
  endDate?: true
  schoolId?: true
  studentId?: true
  classId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type StudentClassHistoryAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which StudentClassHistory to aggregate.
   */
  where?: Prisma.StudentClassHistoryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentClassHistories to fetch.
   */
  orderBy?: Prisma.StudentClassHistoryOrderByWithRelationInput | Prisma.StudentClassHistoryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.StudentClassHistoryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentClassHistories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentClassHistories.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned StudentClassHistories
  **/
  _count?: true | StudentClassHistoryCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: StudentClassHistoryMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: StudentClassHistoryMaxAggregateInputType
}

export type GetStudentClassHistoryAggregateType<T extends StudentClassHistoryAggregateArgs> = {
      [P in keyof T & keyof AggregateStudentClassHistory]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateStudentClassHistory[P]>
    : Prisma.GetScalarType<T[P], AggregateStudentClassHistory[P]>
}




export type StudentClassHistoryGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentClassHistoryWhereInput
  orderBy?: Prisma.StudentClassHistoryOrderByWithAggregationInput | Prisma.StudentClassHistoryOrderByWithAggregationInput[]
  by: Prisma.StudentClassHistoryScalarFieldEnum[] | Prisma.StudentClassHistoryScalarFieldEnum
  having?: Prisma.StudentClassHistoryScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: StudentClassHistoryCountAggregateInputType | true
  _min?: StudentClassHistoryMinAggregateInputType
  _max?: StudentClassHistoryMaxAggregateInputType
}

export type StudentClassHistoryGroupByOutputType = {
  id: string
  startDate: Date
  endDate: Date | null
  schoolId: string
  studentId: string
  classId: string
  createdAt: Date
  updatedAt: Date
  _count: StudentClassHistoryCountAggregateOutputType | null
  _min: StudentClassHistoryMinAggregateOutputType | null
  _max: StudentClassHistoryMaxAggregateOutputType | null
}

type GetStudentClassHistoryGroupByPayload<T extends StudentClassHistoryGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<StudentClassHistoryGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof StudentClassHistoryGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], StudentClassHistoryGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], StudentClassHistoryGroupByOutputType[P]>
      }
    >
  >



export type StudentClassHistoryWhereInput = {
  AND?: Prisma.StudentClassHistoryWhereInput | Prisma.StudentClassHistoryWhereInput[]
  OR?: Prisma.StudentClassHistoryWhereInput[]
  NOT?: Prisma.StudentClassHistoryWhereInput | Prisma.StudentClassHistoryWhereInput[]
  id?: Prisma.StringFilter<"StudentClassHistory"> | string
  startDate?: Prisma.DateTimeFilter<"StudentClassHistory"> | Date | string
  endDate?: Prisma.DateTimeNullableFilter<"StudentClassHistory"> | Date | string | null
  schoolId?: Prisma.StringFilter<"StudentClassHistory"> | string
  studentId?: Prisma.StringFilter<"StudentClassHistory"> | string
  classId?: Prisma.StringFilter<"StudentClassHistory"> | string
  createdAt?: Prisma.DateTimeFilter<"StudentClassHistory"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"StudentClassHistory"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
  class?: Prisma.XOR<Prisma.ClassScalarRelationFilter, Prisma.ClassWhereInput>
}

export type StudentClassHistoryOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrderInput | Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  school?: Prisma.SchoolOrderByWithRelationInput
  student?: Prisma.StudentOrderByWithRelationInput
  class?: Prisma.ClassOrderByWithRelationInput
}

export type StudentClassHistoryWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  studentId_classId?: Prisma.StudentClassHistoryStudentIdClassIdCompoundUniqueInput
  AND?: Prisma.StudentClassHistoryWhereInput | Prisma.StudentClassHistoryWhereInput[]
  OR?: Prisma.StudentClassHistoryWhereInput[]
  NOT?: Prisma.StudentClassHistoryWhereInput | Prisma.StudentClassHistoryWhereInput[]
  startDate?: Prisma.DateTimeFilter<"StudentClassHistory"> | Date | string
  endDate?: Prisma.DateTimeNullableFilter<"StudentClassHistory"> | Date | string | null
  schoolId?: Prisma.StringFilter<"StudentClassHistory"> | string
  studentId?: Prisma.StringFilter<"StudentClassHistory"> | string
  classId?: Prisma.StringFilter<"StudentClassHistory"> | string
  createdAt?: Prisma.DateTimeFilter<"StudentClassHistory"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"StudentClassHistory"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  student?: Prisma.XOR<Prisma.StudentScalarRelationFilter, Prisma.StudentWhereInput>
  class?: Prisma.XOR<Prisma.ClassScalarRelationFilter, Prisma.ClassWhereInput>
}, "id" | "studentId_classId">

export type StudentClassHistoryOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrderInput | Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.StudentClassHistoryCountOrderByAggregateInput
  _max?: Prisma.StudentClassHistoryMaxOrderByAggregateInput
  _min?: Prisma.StudentClassHistoryMinOrderByAggregateInput
}

export type StudentClassHistoryScalarWhereWithAggregatesInput = {
  AND?: Prisma.StudentClassHistoryScalarWhereWithAggregatesInput | Prisma.StudentClassHistoryScalarWhereWithAggregatesInput[]
  OR?: Prisma.StudentClassHistoryScalarWhereWithAggregatesInput[]
  NOT?: Prisma.StudentClassHistoryScalarWhereWithAggregatesInput | Prisma.StudentClassHistoryScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"StudentClassHistory"> | string
  startDate?: Prisma.DateTimeWithAggregatesFilter<"StudentClassHistory"> | Date | string
  endDate?: Prisma.DateTimeNullableWithAggregatesFilter<"StudentClassHistory"> | Date | string | null
  schoolId?: Prisma.StringWithAggregatesFilter<"StudentClassHistory"> | string
  studentId?: Prisma.StringWithAggregatesFilter<"StudentClassHistory"> | string
  classId?: Prisma.StringWithAggregatesFilter<"StudentClassHistory"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"StudentClassHistory"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"StudentClassHistory"> | Date | string
}

export type StudentClassHistoryCreateInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentClassHistoryInput
  student: Prisma.StudentCreateNestedOneWithoutStudentClassHistoryInput
  class: Prisma.ClassCreateNestedOneWithoutStudentClassHistoryInput
}

export type StudentClassHistoryUncheckedCreateInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  schoolId: string
  studentId: string
  classId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentClassHistoryUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentClassHistoryNestedInput
  student?: Prisma.StudentUpdateOneRequiredWithoutStudentClassHistoryNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentClassHistoryNestedInput
}

export type StudentClassHistoryUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentClassHistoryCreateManyInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  schoolId: string
  studentId: string
  classId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentClassHistoryUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentClassHistoryUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentClassHistoryListRelationFilter = {
  every?: Prisma.StudentClassHistoryWhereInput
  some?: Prisma.StudentClassHistoryWhereInput
  none?: Prisma.StudentClassHistoryWhereInput
}

export type StudentClassHistoryOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type StudentClassHistoryStudentIdClassIdCompoundUniqueInput = {
  studentId: string
  classId: string
}

export type StudentClassHistoryCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StudentClassHistoryMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StudentClassHistoryMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startDate?: Prisma.SortOrder
  endDate?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  studentId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StudentClassHistoryCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutSchoolInput, Prisma.StudentClassHistoryUncheckedCreateWithoutSchoolInput> | Prisma.StudentClassHistoryCreateWithoutSchoolInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutSchoolInput | Prisma.StudentClassHistoryCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.StudentClassHistoryCreateManySchoolInputEnvelope
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
}

export type StudentClassHistoryUncheckedCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutSchoolInput, Prisma.StudentClassHistoryUncheckedCreateWithoutSchoolInput> | Prisma.StudentClassHistoryCreateWithoutSchoolInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutSchoolInput | Prisma.StudentClassHistoryCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.StudentClassHistoryCreateManySchoolInputEnvelope
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
}

export type StudentClassHistoryUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutSchoolInput, Prisma.StudentClassHistoryUncheckedCreateWithoutSchoolInput> | Prisma.StudentClassHistoryCreateWithoutSchoolInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutSchoolInput | Prisma.StudentClassHistoryCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutSchoolInput | Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.StudentClassHistoryCreateManySchoolInputEnvelope
  set?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  disconnect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  delete?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  update?: Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutSchoolInput | Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.StudentClassHistoryUpdateManyWithWhereWithoutSchoolInput | Prisma.StudentClassHistoryUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.StudentClassHistoryScalarWhereInput | Prisma.StudentClassHistoryScalarWhereInput[]
}

export type StudentClassHistoryUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutSchoolInput, Prisma.StudentClassHistoryUncheckedCreateWithoutSchoolInput> | Prisma.StudentClassHistoryCreateWithoutSchoolInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutSchoolInput | Prisma.StudentClassHistoryCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutSchoolInput | Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.StudentClassHistoryCreateManySchoolInputEnvelope
  set?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  disconnect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  delete?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  update?: Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutSchoolInput | Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.StudentClassHistoryUpdateManyWithWhereWithoutSchoolInput | Prisma.StudentClassHistoryUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.StudentClassHistoryScalarWhereInput | Prisma.StudentClassHistoryScalarWhereInput[]
}

export type StudentClassHistoryCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutClassInput, Prisma.StudentClassHistoryUncheckedCreateWithoutClassInput> | Prisma.StudentClassHistoryCreateWithoutClassInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutClassInput | Prisma.StudentClassHistoryCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.StudentClassHistoryCreateManyClassInputEnvelope
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
}

export type StudentClassHistoryUncheckedCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutClassInput, Prisma.StudentClassHistoryUncheckedCreateWithoutClassInput> | Prisma.StudentClassHistoryCreateWithoutClassInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutClassInput | Prisma.StudentClassHistoryCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.StudentClassHistoryCreateManyClassInputEnvelope
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
}

export type StudentClassHistoryUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutClassInput, Prisma.StudentClassHistoryUncheckedCreateWithoutClassInput> | Prisma.StudentClassHistoryCreateWithoutClassInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutClassInput | Prisma.StudentClassHistoryCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutClassInput | Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.StudentClassHistoryCreateManyClassInputEnvelope
  set?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  disconnect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  delete?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  update?: Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutClassInput | Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.StudentClassHistoryUpdateManyWithWhereWithoutClassInput | Prisma.StudentClassHistoryUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.StudentClassHistoryScalarWhereInput | Prisma.StudentClassHistoryScalarWhereInput[]
}

export type StudentClassHistoryUncheckedUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutClassInput, Prisma.StudentClassHistoryUncheckedCreateWithoutClassInput> | Prisma.StudentClassHistoryCreateWithoutClassInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutClassInput | Prisma.StudentClassHistoryCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutClassInput | Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.StudentClassHistoryCreateManyClassInputEnvelope
  set?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  disconnect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  delete?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  update?: Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutClassInput | Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.StudentClassHistoryUpdateManyWithWhereWithoutClassInput | Prisma.StudentClassHistoryUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.StudentClassHistoryScalarWhereInput | Prisma.StudentClassHistoryScalarWhereInput[]
}

export type StudentClassHistoryCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutStudentInput, Prisma.StudentClassHistoryUncheckedCreateWithoutStudentInput> | Prisma.StudentClassHistoryCreateWithoutStudentInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutStudentInput | Prisma.StudentClassHistoryCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.StudentClassHistoryCreateManyStudentInputEnvelope
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
}

export type StudentClassHistoryUncheckedCreateNestedManyWithoutStudentInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutStudentInput, Prisma.StudentClassHistoryUncheckedCreateWithoutStudentInput> | Prisma.StudentClassHistoryCreateWithoutStudentInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutStudentInput | Prisma.StudentClassHistoryCreateOrConnectWithoutStudentInput[]
  createMany?: Prisma.StudentClassHistoryCreateManyStudentInputEnvelope
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
}

export type StudentClassHistoryUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutStudentInput, Prisma.StudentClassHistoryUncheckedCreateWithoutStudentInput> | Prisma.StudentClassHistoryCreateWithoutStudentInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutStudentInput | Prisma.StudentClassHistoryCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutStudentInput | Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.StudentClassHistoryCreateManyStudentInputEnvelope
  set?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  disconnect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  delete?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  update?: Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutStudentInput | Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.StudentClassHistoryUpdateManyWithWhereWithoutStudentInput | Prisma.StudentClassHistoryUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.StudentClassHistoryScalarWhereInput | Prisma.StudentClassHistoryScalarWhereInput[]
}

export type StudentClassHistoryUncheckedUpdateManyWithoutStudentNestedInput = {
  create?: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutStudentInput, Prisma.StudentClassHistoryUncheckedCreateWithoutStudentInput> | Prisma.StudentClassHistoryCreateWithoutStudentInput[] | Prisma.StudentClassHistoryUncheckedCreateWithoutStudentInput[]
  connectOrCreate?: Prisma.StudentClassHistoryCreateOrConnectWithoutStudentInput | Prisma.StudentClassHistoryCreateOrConnectWithoutStudentInput[]
  upsert?: Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutStudentInput | Prisma.StudentClassHistoryUpsertWithWhereUniqueWithoutStudentInput[]
  createMany?: Prisma.StudentClassHistoryCreateManyStudentInputEnvelope
  set?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  disconnect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  delete?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  connect?: Prisma.StudentClassHistoryWhereUniqueInput | Prisma.StudentClassHistoryWhereUniqueInput[]
  update?: Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutStudentInput | Prisma.StudentClassHistoryUpdateWithWhereUniqueWithoutStudentInput[]
  updateMany?: Prisma.StudentClassHistoryUpdateManyWithWhereWithoutStudentInput | Prisma.StudentClassHistoryUpdateManyWithWhereWithoutStudentInput[]
  deleteMany?: Prisma.StudentClassHistoryScalarWhereInput | Prisma.StudentClassHistoryScalarWhereInput[]
}

export type StudentClassHistoryCreateWithoutSchoolInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  student: Prisma.StudentCreateNestedOneWithoutStudentClassHistoryInput
  class: Prisma.ClassCreateNestedOneWithoutStudentClassHistoryInput
}

export type StudentClassHistoryUncheckedCreateWithoutSchoolInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  studentId: string
  classId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentClassHistoryCreateOrConnectWithoutSchoolInput = {
  where: Prisma.StudentClassHistoryWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutSchoolInput, Prisma.StudentClassHistoryUncheckedCreateWithoutSchoolInput>
}

export type StudentClassHistoryCreateManySchoolInputEnvelope = {
  data: Prisma.StudentClassHistoryCreateManySchoolInput | Prisma.StudentClassHistoryCreateManySchoolInput[]
  skipDuplicates?: boolean
}

export type StudentClassHistoryUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StudentClassHistoryWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentClassHistoryUpdateWithoutSchoolInput, Prisma.StudentClassHistoryUncheckedUpdateWithoutSchoolInput>
  create: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutSchoolInput, Prisma.StudentClassHistoryUncheckedCreateWithoutSchoolInput>
}

export type StudentClassHistoryUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StudentClassHistoryWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentClassHistoryUpdateWithoutSchoolInput, Prisma.StudentClassHistoryUncheckedUpdateWithoutSchoolInput>
}

export type StudentClassHistoryUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.StudentClassHistoryScalarWhereInput
  data: Prisma.XOR<Prisma.StudentClassHistoryUpdateManyMutationInput, Prisma.StudentClassHistoryUncheckedUpdateManyWithoutSchoolInput>
}

export type StudentClassHistoryScalarWhereInput = {
  AND?: Prisma.StudentClassHistoryScalarWhereInput | Prisma.StudentClassHistoryScalarWhereInput[]
  OR?: Prisma.StudentClassHistoryScalarWhereInput[]
  NOT?: Prisma.StudentClassHistoryScalarWhereInput | Prisma.StudentClassHistoryScalarWhereInput[]
  id?: Prisma.StringFilter<"StudentClassHistory"> | string
  startDate?: Prisma.DateTimeFilter<"StudentClassHistory"> | Date | string
  endDate?: Prisma.DateTimeNullableFilter<"StudentClassHistory"> | Date | string | null
  schoolId?: Prisma.StringFilter<"StudentClassHistory"> | string
  studentId?: Prisma.StringFilter<"StudentClassHistory"> | string
  classId?: Prisma.StringFilter<"StudentClassHistory"> | string
  createdAt?: Prisma.DateTimeFilter<"StudentClassHistory"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"StudentClassHistory"> | Date | string
}

export type StudentClassHistoryCreateWithoutClassInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentClassHistoryInput
  student: Prisma.StudentCreateNestedOneWithoutStudentClassHistoryInput
}

export type StudentClassHistoryUncheckedCreateWithoutClassInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  schoolId: string
  studentId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentClassHistoryCreateOrConnectWithoutClassInput = {
  where: Prisma.StudentClassHistoryWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutClassInput, Prisma.StudentClassHistoryUncheckedCreateWithoutClassInput>
}

export type StudentClassHistoryCreateManyClassInputEnvelope = {
  data: Prisma.StudentClassHistoryCreateManyClassInput | Prisma.StudentClassHistoryCreateManyClassInput[]
  skipDuplicates?: boolean
}

export type StudentClassHistoryUpsertWithWhereUniqueWithoutClassInput = {
  where: Prisma.StudentClassHistoryWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentClassHistoryUpdateWithoutClassInput, Prisma.StudentClassHistoryUncheckedUpdateWithoutClassInput>
  create: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutClassInput, Prisma.StudentClassHistoryUncheckedCreateWithoutClassInput>
}

export type StudentClassHistoryUpdateWithWhereUniqueWithoutClassInput = {
  where: Prisma.StudentClassHistoryWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentClassHistoryUpdateWithoutClassInput, Prisma.StudentClassHistoryUncheckedUpdateWithoutClassInput>
}

export type StudentClassHistoryUpdateManyWithWhereWithoutClassInput = {
  where: Prisma.StudentClassHistoryScalarWhereInput
  data: Prisma.XOR<Prisma.StudentClassHistoryUpdateManyMutationInput, Prisma.StudentClassHistoryUncheckedUpdateManyWithoutClassInput>
}

export type StudentClassHistoryCreateWithoutStudentInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentClassHistoryInput
  class: Prisma.ClassCreateNestedOneWithoutStudentClassHistoryInput
}

export type StudentClassHistoryUncheckedCreateWithoutStudentInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  schoolId: string
  classId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentClassHistoryCreateOrConnectWithoutStudentInput = {
  where: Prisma.StudentClassHistoryWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutStudentInput, Prisma.StudentClassHistoryUncheckedCreateWithoutStudentInput>
}

export type StudentClassHistoryCreateManyStudentInputEnvelope = {
  data: Prisma.StudentClassHistoryCreateManyStudentInput | Prisma.StudentClassHistoryCreateManyStudentInput[]
  skipDuplicates?: boolean
}

export type StudentClassHistoryUpsertWithWhereUniqueWithoutStudentInput = {
  where: Prisma.StudentClassHistoryWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentClassHistoryUpdateWithoutStudentInput, Prisma.StudentClassHistoryUncheckedUpdateWithoutStudentInput>
  create: Prisma.XOR<Prisma.StudentClassHistoryCreateWithoutStudentInput, Prisma.StudentClassHistoryUncheckedCreateWithoutStudentInput>
}

export type StudentClassHistoryUpdateWithWhereUniqueWithoutStudentInput = {
  where: Prisma.StudentClassHistoryWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentClassHistoryUpdateWithoutStudentInput, Prisma.StudentClassHistoryUncheckedUpdateWithoutStudentInput>
}

export type StudentClassHistoryUpdateManyWithWhereWithoutStudentInput = {
  where: Prisma.StudentClassHistoryScalarWhereInput
  data: Prisma.XOR<Prisma.StudentClassHistoryUpdateManyMutationInput, Prisma.StudentClassHistoryUncheckedUpdateManyWithoutStudentInput>
}

export type StudentClassHistoryCreateManySchoolInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  studentId: string
  classId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentClassHistoryUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  student?: Prisma.StudentUpdateOneRequiredWithoutStudentClassHistoryNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentClassHistoryNestedInput
}

export type StudentClassHistoryUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentClassHistoryUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentClassHistoryCreateManyClassInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  schoolId: string
  studentId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentClassHistoryUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentClassHistoryNestedInput
  student?: Prisma.StudentUpdateOneRequiredWithoutStudentClassHistoryNestedInput
}

export type StudentClassHistoryUncheckedUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentClassHistoryUncheckedUpdateManyWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  studentId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentClassHistoryCreateManyStudentInput = {
  id?: string
  startDate: Date | string
  endDate?: Date | string | null
  schoolId: string
  classId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentClassHistoryUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentClassHistoryNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentClassHistoryNestedInput
}

export type StudentClassHistoryUncheckedUpdateWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentClassHistoryUncheckedUpdateManyWithoutStudentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type StudentClassHistorySelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startDate?: boolean
  endDate?: boolean
  schoolId?: boolean
  studentId?: boolean
  classId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
}, ExtArgs["result"]["studentClassHistory"]>

export type StudentClassHistorySelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startDate?: boolean
  endDate?: boolean
  schoolId?: boolean
  studentId?: boolean
  classId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
}, ExtArgs["result"]["studentClassHistory"]>

export type StudentClassHistorySelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startDate?: boolean
  endDate?: boolean
  schoolId?: boolean
  studentId?: boolean
  classId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
}, ExtArgs["result"]["studentClassHistory"]>

export type StudentClassHistorySelectScalar = {
  id?: boolean
  startDate?: boolean
  endDate?: boolean
  schoolId?: boolean
  studentId?: boolean
  classId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type StudentClassHistoryOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "startDate" | "endDate" | "schoolId" | "studentId" | "classId" | "createdAt" | "updatedAt", ExtArgs["result"]["studentClassHistory"]>
export type StudentClassHistoryInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
}
export type StudentClassHistoryIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
}
export type StudentClassHistoryIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  student?: boolean | Prisma.StudentDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
}

export type $StudentClassHistoryPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "StudentClassHistory"
  objects: {
    school: Prisma.$SchoolPayload<ExtArgs>
    student: Prisma.$StudentPayload<ExtArgs>
    class: Prisma.$ClassPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    startDate: Date
    endDate: Date | null
    schoolId: string
    studentId: string
    classId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["studentClassHistory"]>
  composites: {}
}

export type StudentClassHistoryGetPayload<S extends boolean | null | undefined | StudentClassHistoryDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload, S>

export type StudentClassHistoryCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<StudentClassHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: StudentClassHistoryCountAggregateInputType | true
  }

export interface StudentClassHistoryDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StudentClassHistory'], meta: { name: 'StudentClassHistory' } }
  /**
   * Find zero or one StudentClassHistory that matches the filter.
   * @param {StudentClassHistoryFindUniqueArgs} args - Arguments to find a StudentClassHistory
   * @example
   * // Get one StudentClassHistory
   * const studentClassHistory = await prisma.studentClassHistory.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends StudentClassHistoryFindUniqueArgs>(args: Prisma.SelectSubset<T, StudentClassHistoryFindUniqueArgs<ExtArgs>>): Prisma.Prisma__StudentClassHistoryClient<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one StudentClassHistory that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {StudentClassHistoryFindUniqueOrThrowArgs} args - Arguments to find a StudentClassHistory
   * @example
   * // Get one StudentClassHistory
   * const studentClassHistory = await prisma.studentClassHistory.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends StudentClassHistoryFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, StudentClassHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__StudentClassHistoryClient<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first StudentClassHistory that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentClassHistoryFindFirstArgs} args - Arguments to find a StudentClassHistory
   * @example
   * // Get one StudentClassHistory
   * const studentClassHistory = await prisma.studentClassHistory.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends StudentClassHistoryFindFirstArgs>(args?: Prisma.SelectSubset<T, StudentClassHistoryFindFirstArgs<ExtArgs>>): Prisma.Prisma__StudentClassHistoryClient<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first StudentClassHistory that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentClassHistoryFindFirstOrThrowArgs} args - Arguments to find a StudentClassHistory
   * @example
   * // Get one StudentClassHistory
   * const studentClassHistory = await prisma.studentClassHistory.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends StudentClassHistoryFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, StudentClassHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__StudentClassHistoryClient<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more StudentClassHistories that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentClassHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all StudentClassHistories
   * const studentClassHistories = await prisma.studentClassHistory.findMany()
   * 
   * // Get first 10 StudentClassHistories
   * const studentClassHistories = await prisma.studentClassHistory.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const studentClassHistoryWithIdOnly = await prisma.studentClassHistory.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends StudentClassHistoryFindManyArgs>(args?: Prisma.SelectSubset<T, StudentClassHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a StudentClassHistory.
   * @param {StudentClassHistoryCreateArgs} args - Arguments to create a StudentClassHistory.
   * @example
   * // Create one StudentClassHistory
   * const StudentClassHistory = await prisma.studentClassHistory.create({
   *   data: {
   *     // ... data to create a StudentClassHistory
   *   }
   * })
   * 
   */
  create<T extends StudentClassHistoryCreateArgs>(args: Prisma.SelectSubset<T, StudentClassHistoryCreateArgs<ExtArgs>>): Prisma.Prisma__StudentClassHistoryClient<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many StudentClassHistories.
   * @param {StudentClassHistoryCreateManyArgs} args - Arguments to create many StudentClassHistories.
   * @example
   * // Create many StudentClassHistories
   * const studentClassHistory = await prisma.studentClassHistory.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends StudentClassHistoryCreateManyArgs>(args?: Prisma.SelectSubset<T, StudentClassHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many StudentClassHistories and returns the data saved in the database.
   * @param {StudentClassHistoryCreateManyAndReturnArgs} args - Arguments to create many StudentClassHistories.
   * @example
   * // Create many StudentClassHistories
   * const studentClassHistory = await prisma.studentClassHistory.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many StudentClassHistories and only return the `id`
   * const studentClassHistoryWithIdOnly = await prisma.studentClassHistory.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends StudentClassHistoryCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, StudentClassHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a StudentClassHistory.
   * @param {StudentClassHistoryDeleteArgs} args - Arguments to delete one StudentClassHistory.
   * @example
   * // Delete one StudentClassHistory
   * const StudentClassHistory = await prisma.studentClassHistory.delete({
   *   where: {
   *     // ... filter to delete one StudentClassHistory
   *   }
   * })
   * 
   */
  delete<T extends StudentClassHistoryDeleteArgs>(args: Prisma.SelectSubset<T, StudentClassHistoryDeleteArgs<ExtArgs>>): Prisma.Prisma__StudentClassHistoryClient<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one StudentClassHistory.
   * @param {StudentClassHistoryUpdateArgs} args - Arguments to update one StudentClassHistory.
   * @example
   * // Update one StudentClassHistory
   * const studentClassHistory = await prisma.studentClassHistory.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends StudentClassHistoryUpdateArgs>(args: Prisma.SelectSubset<T, StudentClassHistoryUpdateArgs<ExtArgs>>): Prisma.Prisma__StudentClassHistoryClient<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more StudentClassHistories.
   * @param {StudentClassHistoryDeleteManyArgs} args - Arguments to filter StudentClassHistories to delete.
   * @example
   * // Delete a few StudentClassHistories
   * const { count } = await prisma.studentClassHistory.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends StudentClassHistoryDeleteManyArgs>(args?: Prisma.SelectSubset<T, StudentClassHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more StudentClassHistories.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentClassHistoryUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many StudentClassHistories
   * const studentClassHistory = await prisma.studentClassHistory.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends StudentClassHistoryUpdateManyArgs>(args: Prisma.SelectSubset<T, StudentClassHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more StudentClassHistories and returns the data updated in the database.
   * @param {StudentClassHistoryUpdateManyAndReturnArgs} args - Arguments to update many StudentClassHistories.
   * @example
   * // Update many StudentClassHistories
   * const studentClassHistory = await prisma.studentClassHistory.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more StudentClassHistories and only return the `id`
   * const studentClassHistoryWithIdOnly = await prisma.studentClassHistory.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends StudentClassHistoryUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, StudentClassHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one StudentClassHistory.
   * @param {StudentClassHistoryUpsertArgs} args - Arguments to update or create a StudentClassHistory.
   * @example
   * // Update or create a StudentClassHistory
   * const studentClassHistory = await prisma.studentClassHistory.upsert({
   *   create: {
   *     // ... data to create a StudentClassHistory
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the StudentClassHistory we want to update
   *   }
   * })
   */
  upsert<T extends StudentClassHistoryUpsertArgs>(args: Prisma.SelectSubset<T, StudentClassHistoryUpsertArgs<ExtArgs>>): Prisma.Prisma__StudentClassHistoryClient<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of StudentClassHistories.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentClassHistoryCountArgs} args - Arguments to filter StudentClassHistories to count.
   * @example
   * // Count the number of StudentClassHistories
   * const count = await prisma.studentClassHistory.count({
   *   where: {
   *     // ... the filter for the StudentClassHistories we want to count
   *   }
   * })
  **/
  count<T extends StudentClassHistoryCountArgs>(
    args?: Prisma.Subset<T, StudentClassHistoryCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], StudentClassHistoryCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a StudentClassHistory.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentClassHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends StudentClassHistoryAggregateArgs>(args: Prisma.Subset<T, StudentClassHistoryAggregateArgs>): Prisma.PrismaPromise<GetStudentClassHistoryAggregateType<T>>

  /**
   * Group by StudentClassHistory.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentClassHistoryGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends StudentClassHistoryGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: StudentClassHistoryGroupByArgs['orderBy'] }
      : { orderBy?: StudentClassHistoryGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, StudentClassHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudentClassHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the StudentClassHistory model
 */
readonly fields: StudentClassHistoryFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for StudentClassHistory.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__StudentClassHistoryClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>): Prisma.Prisma__SchoolClient<runtime.Types.Result.GetResult<Prisma.$SchoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  student<T extends Prisma.StudentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.StudentDefaultArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  class<T extends Prisma.ClassDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ClassDefaultArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the StudentClassHistory model
 */
export interface StudentClassHistoryFieldRefs {
  readonly id: Prisma.FieldRef<"StudentClassHistory", 'String'>
  readonly startDate: Prisma.FieldRef<"StudentClassHistory", 'DateTime'>
  readonly endDate: Prisma.FieldRef<"StudentClassHistory", 'DateTime'>
  readonly schoolId: Prisma.FieldRef<"StudentClassHistory", 'String'>
  readonly studentId: Prisma.FieldRef<"StudentClassHistory", 'String'>
  readonly classId: Prisma.FieldRef<"StudentClassHistory", 'String'>
  readonly createdAt: Prisma.FieldRef<"StudentClassHistory", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"StudentClassHistory", 'DateTime'>
}
    

// Custom InputTypes
/**
 * StudentClassHistory findUnique
 */
export type StudentClassHistoryFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  /**
   * Filter, which StudentClassHistory to fetch.
   */
  where: Prisma.StudentClassHistoryWhereUniqueInput
}

/**
 * StudentClassHistory findUniqueOrThrow
 */
export type StudentClassHistoryFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  /**
   * Filter, which StudentClassHistory to fetch.
   */
  where: Prisma.StudentClassHistoryWhereUniqueInput
}

/**
 * StudentClassHistory findFirst
 */
export type StudentClassHistoryFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  /**
   * Filter, which StudentClassHistory to fetch.
   */
  where?: Prisma.StudentClassHistoryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentClassHistories to fetch.
   */
  orderBy?: Prisma.StudentClassHistoryOrderByWithRelationInput | Prisma.StudentClassHistoryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for StudentClassHistories.
   */
  cursor?: Prisma.StudentClassHistoryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentClassHistories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentClassHistories.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of StudentClassHistories.
   */
  distinct?: Prisma.StudentClassHistoryScalarFieldEnum | Prisma.StudentClassHistoryScalarFieldEnum[]
}

/**
 * StudentClassHistory findFirstOrThrow
 */
export type StudentClassHistoryFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  /**
   * Filter, which StudentClassHistory to fetch.
   */
  where?: Prisma.StudentClassHistoryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentClassHistories to fetch.
   */
  orderBy?: Prisma.StudentClassHistoryOrderByWithRelationInput | Prisma.StudentClassHistoryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for StudentClassHistories.
   */
  cursor?: Prisma.StudentClassHistoryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentClassHistories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentClassHistories.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of StudentClassHistories.
   */
  distinct?: Prisma.StudentClassHistoryScalarFieldEnum | Prisma.StudentClassHistoryScalarFieldEnum[]
}

/**
 * StudentClassHistory findMany
 */
export type StudentClassHistoryFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  /**
   * Filter, which StudentClassHistories to fetch.
   */
  where?: Prisma.StudentClassHistoryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of StudentClassHistories to fetch.
   */
  orderBy?: Prisma.StudentClassHistoryOrderByWithRelationInput | Prisma.StudentClassHistoryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing StudentClassHistories.
   */
  cursor?: Prisma.StudentClassHistoryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` StudentClassHistories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` StudentClassHistories.
   */
  skip?: number
  distinct?: Prisma.StudentClassHistoryScalarFieldEnum | Prisma.StudentClassHistoryScalarFieldEnum[]
}

/**
 * StudentClassHistory create
 */
export type StudentClassHistoryCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  /**
   * The data needed to create a StudentClassHistory.
   */
  data: Prisma.XOR<Prisma.StudentClassHistoryCreateInput, Prisma.StudentClassHistoryUncheckedCreateInput>
}

/**
 * StudentClassHistory createMany
 */
export type StudentClassHistoryCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many StudentClassHistories.
   */
  data: Prisma.StudentClassHistoryCreateManyInput | Prisma.StudentClassHistoryCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * StudentClassHistory createManyAndReturn
 */
export type StudentClassHistoryCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * The data used to create many StudentClassHistories.
   */
  data: Prisma.StudentClassHistoryCreateManyInput | Prisma.StudentClassHistoryCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * StudentClassHistory update
 */
export type StudentClassHistoryUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  /**
   * The data needed to update a StudentClassHistory.
   */
  data: Prisma.XOR<Prisma.StudentClassHistoryUpdateInput, Prisma.StudentClassHistoryUncheckedUpdateInput>
  /**
   * Choose, which StudentClassHistory to update.
   */
  where: Prisma.StudentClassHistoryWhereUniqueInput
}

/**
 * StudentClassHistory updateMany
 */
export type StudentClassHistoryUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update StudentClassHistories.
   */
  data: Prisma.XOR<Prisma.StudentClassHistoryUpdateManyMutationInput, Prisma.StudentClassHistoryUncheckedUpdateManyInput>
  /**
   * Filter which StudentClassHistories to update
   */
  where?: Prisma.StudentClassHistoryWhereInput
  /**
   * Limit how many StudentClassHistories to update.
   */
  limit?: number
}

/**
 * StudentClassHistory updateManyAndReturn
 */
export type StudentClassHistoryUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * The data used to update StudentClassHistories.
   */
  data: Prisma.XOR<Prisma.StudentClassHistoryUpdateManyMutationInput, Prisma.StudentClassHistoryUncheckedUpdateManyInput>
  /**
   * Filter which StudentClassHistories to update
   */
  where?: Prisma.StudentClassHistoryWhereInput
  /**
   * Limit how many StudentClassHistories to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * StudentClassHistory upsert
 */
export type StudentClassHistoryUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  /**
   * The filter to search for the StudentClassHistory to update in case it exists.
   */
  where: Prisma.StudentClassHistoryWhereUniqueInput
  /**
   * In case the StudentClassHistory found by the `where` argument doesn't exist, create a new StudentClassHistory with this data.
   */
  create: Prisma.XOR<Prisma.StudentClassHistoryCreateInput, Prisma.StudentClassHistoryUncheckedCreateInput>
  /**
   * In case the StudentClassHistory was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.StudentClassHistoryUpdateInput, Prisma.StudentClassHistoryUncheckedUpdateInput>
}

/**
 * StudentClassHistory delete
 */
export type StudentClassHistoryDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  /**
   * Filter which StudentClassHistory to delete.
   */
  where: Prisma.StudentClassHistoryWhereUniqueInput
}

/**
 * StudentClassHistory deleteMany
 */
export type StudentClassHistoryDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which StudentClassHistories to delete
   */
  where?: Prisma.StudentClassHistoryWhereInput
  /**
   * Limit how many StudentClassHistories to delete.
   */
  limit?: number
}

/**
 * StudentClassHistory without action
 */
export type StudentClassHistoryDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
}
