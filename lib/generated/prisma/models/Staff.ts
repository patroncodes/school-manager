
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Staff` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Staff
 * 
 */
export type StaffModel = runtime.Types.Result.DefaultSelection<Prisma.$StaffPayload>

export type AggregateStaff = {
  _count: StaffCountAggregateOutputType | null
  _min: StaffMinAggregateOutputType | null
  _max: StaffMaxAggregateOutputType | null
}

export type StaffMinAggregateOutputType = {
  id: string | null
  clerkUserId: string | null
  employeeId: string | null
  name: string | null
  surname: string | null
  email: string | null
  phone: string | null
  address: string | null
  img: string | null
  birthday: Date | null
  sex: $Enums.UserSex | null
  contractType: $Enums.StaffContractType | null
  accessLevel: $Enums.AccessLevel | null
  role: string | null
  isFormTeacher: boolean | null
  isActive: boolean | null
  hireDate: Date | null
  terminationDate: Date | null
  exitReason: string | null
  schoolId: string | null
  classId: string | null
  clubId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type StaffMaxAggregateOutputType = {
  id: string | null
  clerkUserId: string | null
  employeeId: string | null
  name: string | null
  surname: string | null
  email: string | null
  phone: string | null
  address: string | null
  img: string | null
  birthday: Date | null
  sex: $Enums.UserSex | null
  contractType: $Enums.StaffContractType | null
  accessLevel: $Enums.AccessLevel | null
  role: string | null
  isFormTeacher: boolean | null
  isActive: boolean | null
  hireDate: Date | null
  terminationDate: Date | null
  exitReason: string | null
  schoolId: string | null
  classId: string | null
  clubId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type StaffCountAggregateOutputType = {
  id: number
  clerkUserId: number
  employeeId: number
  name: number
  surname: number
  email: number
  phone: number
  address: number
  img: number
  birthday: number
  sex: number
  contractType: number
  accessLevel: number
  role: number
  isFormTeacher: number
  isActive: number
  hireDate: number
  terminationDate: number
  exitReason: number
  schoolId: number
  classId: number
  clubId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type StaffMinAggregateInputType = {
  id?: true
  clerkUserId?: true
  employeeId?: true
  name?: true
  surname?: true
  email?: true
  phone?: true
  address?: true
  img?: true
  birthday?: true
  sex?: true
  contractType?: true
  accessLevel?: true
  role?: true
  isFormTeacher?: true
  isActive?: true
  hireDate?: true
  terminationDate?: true
  exitReason?: true
  schoolId?: true
  classId?: true
  clubId?: true
  createdAt?: true
  updatedAt?: true
}

export type StaffMaxAggregateInputType = {
  id?: true
  clerkUserId?: true
  employeeId?: true
  name?: true
  surname?: true
  email?: true
  phone?: true
  address?: true
  img?: true
  birthday?: true
  sex?: true
  contractType?: true
  accessLevel?: true
  role?: true
  isFormTeacher?: true
  isActive?: true
  hireDate?: true
  terminationDate?: true
  exitReason?: true
  schoolId?: true
  classId?: true
  clubId?: true
  createdAt?: true
  updatedAt?: true
}

export type StaffCountAggregateInputType = {
  id?: true
  clerkUserId?: true
  employeeId?: true
  name?: true
  surname?: true
  email?: true
  phone?: true
  address?: true
  img?: true
  birthday?: true
  sex?: true
  contractType?: true
  accessLevel?: true
  role?: true
  isFormTeacher?: true
  isActive?: true
  hireDate?: true
  terminationDate?: true
  exitReason?: true
  schoolId?: true
  classId?: true
  clubId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type StaffAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Staff to aggregate.
   */
  where?: Prisma.StaffWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Staff to fetch.
   */
  orderBy?: Prisma.StaffOrderByWithRelationInput | Prisma.StaffOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.StaffWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Staff from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Staff.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Staff
  **/
  _count?: true | StaffCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: StaffMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: StaffMaxAggregateInputType
}

export type GetStaffAggregateType<T extends StaffAggregateArgs> = {
      [P in keyof T & keyof AggregateStaff]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateStaff[P]>
    : Prisma.GetScalarType<T[P], AggregateStaff[P]>
}




export type StaffGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StaffWhereInput
  orderBy?: Prisma.StaffOrderByWithAggregationInput | Prisma.StaffOrderByWithAggregationInput[]
  by: Prisma.StaffScalarFieldEnum[] | Prisma.StaffScalarFieldEnum
  having?: Prisma.StaffScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: StaffCountAggregateInputType | true
  _min?: StaffMinAggregateInputType
  _max?: StaffMaxAggregateInputType
}

export type StaffGroupByOutputType = {
  id: string
  clerkUserId: string | null
  employeeId: string
  name: string
  surname: string
  email: string | null
  phone: string
  address: string
  img: string | null
  birthday: Date
  sex: $Enums.UserSex
  contractType: $Enums.StaffContractType
  accessLevel: $Enums.AccessLevel
  role: string
  isFormTeacher: boolean
  isActive: boolean
  hireDate: Date | null
  terminationDate: Date | null
  exitReason: string | null
  schoolId: string
  classId: string | null
  clubId: string | null
  createdAt: Date
  updatedAt: Date
  _count: StaffCountAggregateOutputType | null
  _min: StaffMinAggregateOutputType | null
  _max: StaffMaxAggregateOutputType | null
}

type GetStaffGroupByPayload<T extends StaffGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<StaffGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof StaffGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], StaffGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], StaffGroupByOutputType[P]>
      }
    >
  >



export type StaffWhereInput = {
  AND?: Prisma.StaffWhereInput | Prisma.StaffWhereInput[]
  OR?: Prisma.StaffWhereInput[]
  NOT?: Prisma.StaffWhereInput | Prisma.StaffWhereInput[]
  id?: Prisma.StringFilter<"Staff"> | string
  clerkUserId?: Prisma.StringNullableFilter<"Staff"> | string | null
  employeeId?: Prisma.StringFilter<"Staff"> | string
  name?: Prisma.StringFilter<"Staff"> | string
  surname?: Prisma.StringFilter<"Staff"> | string
  email?: Prisma.StringNullableFilter<"Staff"> | string | null
  phone?: Prisma.StringFilter<"Staff"> | string
  address?: Prisma.StringFilter<"Staff"> | string
  img?: Prisma.StringNullableFilter<"Staff"> | string | null
  birthday?: Prisma.DateTimeFilter<"Staff"> | Date | string
  sex?: Prisma.EnumUserSexFilter<"Staff"> | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFilter<"Staff"> | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFilter<"Staff"> | $Enums.AccessLevel
  role?: Prisma.StringFilter<"Staff"> | string
  isFormTeacher?: Prisma.BoolFilter<"Staff"> | boolean
  isActive?: Prisma.BoolFilter<"Staff"> | boolean
  hireDate?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null
  terminationDate?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null
  exitReason?: Prisma.StringNullableFilter<"Staff"> | string | null
  schoolId?: Prisma.StringFilter<"Staff"> | string
  classId?: Prisma.StringNullableFilter<"Staff"> | string | null
  clubId?: Prisma.StringNullableFilter<"Staff"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Staff"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Staff"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  auditLogs?: Prisma.AuditLogListRelationFilter
  class?: Prisma.XOR<Prisma.ClassNullableScalarRelationFilter, Prisma.ClassWhereInput> | null
  club?: Prisma.XOR<Prisma.ClubNullableScalarRelationFilter, Prisma.ClubWhereInput> | null
  timetableAssignments?: Prisma.TimetableAssignmentListRelationFilter
  attendances?: Prisma.StaffAttendanceListRelationFilter
  salaries?: Prisma.SalaryPaymentListRelationFilter
  bankAccounts?: Prisma.StaffBankAccountListRelationFilter
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentListRelationFilter
}

export type StaffOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  clerkUserId?: Prisma.SortOrderInput | Prisma.SortOrder
  employeeId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  surname?: Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  phone?: Prisma.SortOrder
  address?: Prisma.SortOrder
  img?: Prisma.SortOrderInput | Prisma.SortOrder
  birthday?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  contractType?: Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  role?: Prisma.SortOrder
  isFormTeacher?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  hireDate?: Prisma.SortOrderInput | Prisma.SortOrder
  terminationDate?: Prisma.SortOrderInput | Prisma.SortOrder
  exitReason?: Prisma.SortOrderInput | Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrderInput | Prisma.SortOrder
  clubId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  school?: Prisma.SchoolOrderByWithRelationInput
  auditLogs?: Prisma.AuditLogOrderByRelationAggregateInput
  class?: Prisma.ClassOrderByWithRelationInput
  club?: Prisma.ClubOrderByWithRelationInput
  timetableAssignments?: Prisma.TimetableAssignmentOrderByRelationAggregateInput
  attendances?: Prisma.StaffAttendanceOrderByRelationAggregateInput
  salaries?: Prisma.SalaryPaymentOrderByRelationAggregateInput
  bankAccounts?: Prisma.StaffBankAccountOrderByRelationAggregateInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentOrderByRelationAggregateInput
}

export type StaffWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  clerkUserId?: string
  employeeId?: string
  schoolId_email?: Prisma.StaffSchoolIdEmailCompoundUniqueInput
  schoolId_phone?: Prisma.StaffSchoolIdPhoneCompoundUniqueInput
  AND?: Prisma.StaffWhereInput | Prisma.StaffWhereInput[]
  OR?: Prisma.StaffWhereInput[]
  NOT?: Prisma.StaffWhereInput | Prisma.StaffWhereInput[]
  name?: Prisma.StringFilter<"Staff"> | string
  surname?: Prisma.StringFilter<"Staff"> | string
  email?: Prisma.StringNullableFilter<"Staff"> | string | null
  phone?: Prisma.StringFilter<"Staff"> | string
  address?: Prisma.StringFilter<"Staff"> | string
  img?: Prisma.StringNullableFilter<"Staff"> | string | null
  birthday?: Prisma.DateTimeFilter<"Staff"> | Date | string
  sex?: Prisma.EnumUserSexFilter<"Staff"> | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFilter<"Staff"> | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFilter<"Staff"> | $Enums.AccessLevel
  role?: Prisma.StringFilter<"Staff"> | string
  isFormTeacher?: Prisma.BoolFilter<"Staff"> | boolean
  isActive?: Prisma.BoolFilter<"Staff"> | boolean
  hireDate?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null
  terminationDate?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null
  exitReason?: Prisma.StringNullableFilter<"Staff"> | string | null
  schoolId?: Prisma.StringFilter<"Staff"> | string
  classId?: Prisma.StringNullableFilter<"Staff"> | string | null
  clubId?: Prisma.StringNullableFilter<"Staff"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Staff"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Staff"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  auditLogs?: Prisma.AuditLogListRelationFilter
  class?: Prisma.XOR<Prisma.ClassNullableScalarRelationFilter, Prisma.ClassWhereInput> | null
  club?: Prisma.XOR<Prisma.ClubNullableScalarRelationFilter, Prisma.ClubWhereInput> | null
  timetableAssignments?: Prisma.TimetableAssignmentListRelationFilter
  attendances?: Prisma.StaffAttendanceListRelationFilter
  salaries?: Prisma.SalaryPaymentListRelationFilter
  bankAccounts?: Prisma.StaffBankAccountListRelationFilter
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentListRelationFilter
}, "id" | "clerkUserId" | "employeeId" | "schoolId_email" | "schoolId_phone">

export type StaffOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  clerkUserId?: Prisma.SortOrderInput | Prisma.SortOrder
  employeeId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  surname?: Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  phone?: Prisma.SortOrder
  address?: Prisma.SortOrder
  img?: Prisma.SortOrderInput | Prisma.SortOrder
  birthday?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  contractType?: Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  role?: Prisma.SortOrder
  isFormTeacher?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  hireDate?: Prisma.SortOrderInput | Prisma.SortOrder
  terminationDate?: Prisma.SortOrderInput | Prisma.SortOrder
  exitReason?: Prisma.SortOrderInput | Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrderInput | Prisma.SortOrder
  clubId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.StaffCountOrderByAggregateInput
  _max?: Prisma.StaffMaxOrderByAggregateInput
  _min?: Prisma.StaffMinOrderByAggregateInput
}

export type StaffScalarWhereWithAggregatesInput = {
  AND?: Prisma.StaffScalarWhereWithAggregatesInput | Prisma.StaffScalarWhereWithAggregatesInput[]
  OR?: Prisma.StaffScalarWhereWithAggregatesInput[]
  NOT?: Prisma.StaffScalarWhereWithAggregatesInput | Prisma.StaffScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Staff"> | string
  clerkUserId?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null
  employeeId?: Prisma.StringWithAggregatesFilter<"Staff"> | string
  name?: Prisma.StringWithAggregatesFilter<"Staff"> | string
  surname?: Prisma.StringWithAggregatesFilter<"Staff"> | string
  email?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null
  phone?: Prisma.StringWithAggregatesFilter<"Staff"> | string
  address?: Prisma.StringWithAggregatesFilter<"Staff"> | string
  img?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null
  birthday?: Prisma.DateTimeWithAggregatesFilter<"Staff"> | Date | string
  sex?: Prisma.EnumUserSexWithAggregatesFilter<"Staff"> | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeWithAggregatesFilter<"Staff"> | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelWithAggregatesFilter<"Staff"> | $Enums.AccessLevel
  role?: Prisma.StringWithAggregatesFilter<"Staff"> | string
  isFormTeacher?: Prisma.BoolWithAggregatesFilter<"Staff"> | boolean
  isActive?: Prisma.BoolWithAggregatesFilter<"Staff"> | boolean
  hireDate?: Prisma.DateTimeNullableWithAggregatesFilter<"Staff"> | Date | string | null
  terminationDate?: Prisma.DateTimeNullableWithAggregatesFilter<"Staff"> | Date | string | null
  exitReason?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null
  schoolId?: Prisma.StringWithAggregatesFilter<"Staff"> | string
  classId?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null
  clubId?: Prisma.StringNullableWithAggregatesFilter<"Staff"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Staff"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Staff"> | Date | string
}

export type StaffCreateInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutStaffInput
  class?: Prisma.ClassCreateNestedOneWithoutSupervisorsInput
  club?: Prisma.ClubCreateNestedOneWithoutSupervisorsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentCreateNestedManyWithoutTeacherInput
}

export type StaffUncheckedCreateInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  classId?: string | null
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutStaffInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceUncheckedCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentUncheckedCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedCreateNestedManyWithoutTeacherInput
}

export type StaffUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutStaffNestedInput
  class?: Prisma.ClassUpdateOneWithoutSupervisorsNestedInput
  club?: Prisma.ClubUpdateOneWithoutSupervisorsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutStaffNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUncheckedUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUncheckedUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
}

export type StaffCreateManyInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  classId?: string | null
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StaffUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StaffUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StaffScalarRelationFilter = {
  is?: Prisma.StaffWhereInput
  isNot?: Prisma.StaffWhereInput
}

export type StaffListRelationFilter = {
  every?: Prisma.StaffWhereInput
  some?: Prisma.StaffWhereInput
  none?: Prisma.StaffWhereInput
}

export type StaffOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type StaffNullableScalarRelationFilter = {
  is?: Prisma.StaffWhereInput | null
  isNot?: Prisma.StaffWhereInput | null
}

export type StaffSchoolIdEmailCompoundUniqueInput = {
  schoolId: string
  email: string
}

export type StaffSchoolIdPhoneCompoundUniqueInput = {
  schoolId: string
  phone: string
}

export type StaffCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  clerkUserId?: Prisma.SortOrder
  employeeId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  surname?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  address?: Prisma.SortOrder
  img?: Prisma.SortOrder
  birthday?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  contractType?: Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  role?: Prisma.SortOrder
  isFormTeacher?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  hireDate?: Prisma.SortOrder
  terminationDate?: Prisma.SortOrder
  exitReason?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  clubId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StaffMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  clerkUserId?: Prisma.SortOrder
  employeeId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  surname?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  address?: Prisma.SortOrder
  img?: Prisma.SortOrder
  birthday?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  contractType?: Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  role?: Prisma.SortOrder
  isFormTeacher?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  hireDate?: Prisma.SortOrder
  terminationDate?: Prisma.SortOrder
  exitReason?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  clubId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StaffMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  clerkUserId?: Prisma.SortOrder
  employeeId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  surname?: Prisma.SortOrder
  email?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  address?: Prisma.SortOrder
  img?: Prisma.SortOrder
  birthday?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  contractType?: Prisma.SortOrder
  accessLevel?: Prisma.SortOrder
  role?: Prisma.SortOrder
  isFormTeacher?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  hireDate?: Prisma.SortOrder
  terminationDate?: Prisma.SortOrder
  exitReason?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  clubId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StaffCreateNestedOneWithoutAuditLogsInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutAuditLogsInput, Prisma.StaffUncheckedCreateWithoutAuditLogsInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutAuditLogsInput
  connect?: Prisma.StaffWhereUniqueInput
}

export type StaffUpdateOneRequiredWithoutAuditLogsNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutAuditLogsInput, Prisma.StaffUncheckedCreateWithoutAuditLogsInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutAuditLogsInput
  upsert?: Prisma.StaffUpsertWithoutAuditLogsInput
  connect?: Prisma.StaffWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StaffUpdateToOneWithWhereWithoutAuditLogsInput, Prisma.StaffUpdateWithoutAuditLogsInput>, Prisma.StaffUncheckedUpdateWithoutAuditLogsInput>
}

export type StaffCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutSchoolInput, Prisma.StaffUncheckedCreateWithoutSchoolInput> | Prisma.StaffCreateWithoutSchoolInput[] | Prisma.StaffUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutSchoolInput | Prisma.StaffCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.StaffCreateManySchoolInputEnvelope
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
}

export type StaffUncheckedCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutSchoolInput, Prisma.StaffUncheckedCreateWithoutSchoolInput> | Prisma.StaffCreateWithoutSchoolInput[] | Prisma.StaffUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutSchoolInput | Prisma.StaffCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.StaffCreateManySchoolInputEnvelope
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
}

export type StaffUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutSchoolInput, Prisma.StaffUncheckedCreateWithoutSchoolInput> | Prisma.StaffCreateWithoutSchoolInput[] | Prisma.StaffUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutSchoolInput | Prisma.StaffCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.StaffUpsertWithWhereUniqueWithoutSchoolInput | Prisma.StaffUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.StaffCreateManySchoolInputEnvelope
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  update?: Prisma.StaffUpdateWithWhereUniqueWithoutSchoolInput | Prisma.StaffUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.StaffUpdateManyWithWhereWithoutSchoolInput | Prisma.StaffUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[]
}

export type StaffUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutSchoolInput, Prisma.StaffUncheckedCreateWithoutSchoolInput> | Prisma.StaffCreateWithoutSchoolInput[] | Prisma.StaffUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutSchoolInput | Prisma.StaffCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.StaffUpsertWithWhereUniqueWithoutSchoolInput | Prisma.StaffUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.StaffCreateManySchoolInputEnvelope
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  update?: Prisma.StaffUpdateWithWhereUniqueWithoutSchoolInput | Prisma.StaffUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.StaffUpdateManyWithWhereWithoutSchoolInput | Prisma.StaffUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[]
}

export type StaffCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutClassInput, Prisma.StaffUncheckedCreateWithoutClassInput> | Prisma.StaffCreateWithoutClassInput[] | Prisma.StaffUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClassInput | Prisma.StaffCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.StaffCreateManyClassInputEnvelope
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
}

export type StaffUncheckedCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutClassInput, Prisma.StaffUncheckedCreateWithoutClassInput> | Prisma.StaffCreateWithoutClassInput[] | Prisma.StaffUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClassInput | Prisma.StaffCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.StaffCreateManyClassInputEnvelope
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
}

export type StaffUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutClassInput, Prisma.StaffUncheckedCreateWithoutClassInput> | Prisma.StaffCreateWithoutClassInput[] | Prisma.StaffUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClassInput | Prisma.StaffCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.StaffUpsertWithWhereUniqueWithoutClassInput | Prisma.StaffUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.StaffCreateManyClassInputEnvelope
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  update?: Prisma.StaffUpdateWithWhereUniqueWithoutClassInput | Prisma.StaffUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.StaffUpdateManyWithWhereWithoutClassInput | Prisma.StaffUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[]
}

export type StaffUncheckedUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutClassInput, Prisma.StaffUncheckedCreateWithoutClassInput> | Prisma.StaffCreateWithoutClassInput[] | Prisma.StaffUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClassInput | Prisma.StaffCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.StaffUpsertWithWhereUniqueWithoutClassInput | Prisma.StaffUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.StaffCreateManyClassInputEnvelope
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  update?: Prisma.StaffUpdateWithWhereUniqueWithoutClassInput | Prisma.StaffUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.StaffUpdateManyWithWhereWithoutClassInput | Prisma.StaffUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[]
}

export type StaffCreateNestedOneWithoutTimetableAssignmentsInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutTimetableAssignmentsInput, Prisma.StaffUncheckedCreateWithoutTimetableAssignmentsInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutTimetableAssignmentsInput
  connect?: Prisma.StaffWhereUniqueInput
}

export type StaffUpdateOneWithoutTimetableAssignmentsNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutTimetableAssignmentsInput, Prisma.StaffUncheckedCreateWithoutTimetableAssignmentsInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutTimetableAssignmentsInput
  upsert?: Prisma.StaffUpsertWithoutTimetableAssignmentsInput
  disconnect?: Prisma.StaffWhereInput | boolean
  delete?: Prisma.StaffWhereInput | boolean
  connect?: Prisma.StaffWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StaffUpdateToOneWithWhereWithoutTimetableAssignmentsInput, Prisma.StaffUpdateWithoutTimetableAssignmentsInput>, Prisma.StaffUncheckedUpdateWithoutTimetableAssignmentsInput>
}

export type EnumStaffContractTypeFieldUpdateOperationsInput = {
  set?: $Enums.StaffContractType
}

export type EnumAccessLevelFieldUpdateOperationsInput = {
  set?: $Enums.AccessLevel
}

export type StaffCreateNestedManyWithoutClubInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutClubInput, Prisma.StaffUncheckedCreateWithoutClubInput> | Prisma.StaffCreateWithoutClubInput[] | Prisma.StaffUncheckedCreateWithoutClubInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClubInput | Prisma.StaffCreateOrConnectWithoutClubInput[]
  createMany?: Prisma.StaffCreateManyClubInputEnvelope
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
}

export type StaffUncheckedCreateNestedManyWithoutClubInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutClubInput, Prisma.StaffUncheckedCreateWithoutClubInput> | Prisma.StaffCreateWithoutClubInput[] | Prisma.StaffUncheckedCreateWithoutClubInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClubInput | Prisma.StaffCreateOrConnectWithoutClubInput[]
  createMany?: Prisma.StaffCreateManyClubInputEnvelope
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
}

export type StaffUpdateManyWithoutClubNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutClubInput, Prisma.StaffUncheckedCreateWithoutClubInput> | Prisma.StaffCreateWithoutClubInput[] | Prisma.StaffUncheckedCreateWithoutClubInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClubInput | Prisma.StaffCreateOrConnectWithoutClubInput[]
  upsert?: Prisma.StaffUpsertWithWhereUniqueWithoutClubInput | Prisma.StaffUpsertWithWhereUniqueWithoutClubInput[]
  createMany?: Prisma.StaffCreateManyClubInputEnvelope
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  update?: Prisma.StaffUpdateWithWhereUniqueWithoutClubInput | Prisma.StaffUpdateWithWhereUniqueWithoutClubInput[]
  updateMany?: Prisma.StaffUpdateManyWithWhereWithoutClubInput | Prisma.StaffUpdateManyWithWhereWithoutClubInput[]
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[]
}

export type StaffUncheckedUpdateManyWithoutClubNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutClubInput, Prisma.StaffUncheckedCreateWithoutClubInput> | Prisma.StaffCreateWithoutClubInput[] | Prisma.StaffUncheckedCreateWithoutClubInput[]
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutClubInput | Prisma.StaffCreateOrConnectWithoutClubInput[]
  upsert?: Prisma.StaffUpsertWithWhereUniqueWithoutClubInput | Prisma.StaffUpsertWithWhereUniqueWithoutClubInput[]
  createMany?: Prisma.StaffCreateManyClubInputEnvelope
  set?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  disconnect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  delete?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  connect?: Prisma.StaffWhereUniqueInput | Prisma.StaffWhereUniqueInput[]
  update?: Prisma.StaffUpdateWithWhereUniqueWithoutClubInput | Prisma.StaffUpdateWithWhereUniqueWithoutClubInput[]
  updateMany?: Prisma.StaffUpdateManyWithWhereWithoutClubInput | Prisma.StaffUpdateManyWithWhereWithoutClubInput[]
  deleteMany?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[]
}

export type StaffCreateNestedOneWithoutAttendancesInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutAttendancesInput, Prisma.StaffUncheckedCreateWithoutAttendancesInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutAttendancesInput
  connect?: Prisma.StaffWhereUniqueInput
}

export type StaffUpdateOneRequiredWithoutAttendancesNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutAttendancesInput, Prisma.StaffUncheckedCreateWithoutAttendancesInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutAttendancesInput
  upsert?: Prisma.StaffUpsertWithoutAttendancesInput
  connect?: Prisma.StaffWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StaffUpdateToOneWithWhereWithoutAttendancesInput, Prisma.StaffUpdateWithoutAttendancesInput>, Prisma.StaffUncheckedUpdateWithoutAttendancesInput>
}

export type StaffCreateNestedOneWithoutSalariesInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutSalariesInput, Prisma.StaffUncheckedCreateWithoutSalariesInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutSalariesInput
  connect?: Prisma.StaffWhereUniqueInput
}

export type StaffUpdateOneRequiredWithoutSalariesNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutSalariesInput, Prisma.StaffUncheckedCreateWithoutSalariesInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutSalariesInput
  upsert?: Prisma.StaffUpsertWithoutSalariesInput
  connect?: Prisma.StaffWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StaffUpdateToOneWithWhereWithoutSalariesInput, Prisma.StaffUpdateWithoutSalariesInput>, Prisma.StaffUncheckedUpdateWithoutSalariesInput>
}

export type StaffCreateNestedOneWithoutBankAccountsInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutBankAccountsInput, Prisma.StaffUncheckedCreateWithoutBankAccountsInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutBankAccountsInput
  connect?: Prisma.StaffWhereUniqueInput
}

export type StaffUpdateOneRequiredWithoutBankAccountsNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutBankAccountsInput, Prisma.StaffUncheckedCreateWithoutBankAccountsInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutBankAccountsInput
  upsert?: Prisma.StaffUpsertWithoutBankAccountsInput
  connect?: Prisma.StaffWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StaffUpdateToOneWithWhereWithoutBankAccountsInput, Prisma.StaffUpdateWithoutBankAccountsInput>, Prisma.StaffUncheckedUpdateWithoutBankAccountsInput>
}

export type StaffCreateNestedOneWithoutTeacherSubjectAssignmentsInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutTeacherSubjectAssignmentsInput, Prisma.StaffUncheckedCreateWithoutTeacherSubjectAssignmentsInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutTeacherSubjectAssignmentsInput
  connect?: Prisma.StaffWhereUniqueInput
}

export type StaffUpdateOneRequiredWithoutTeacherSubjectAssignmentsNestedInput = {
  create?: Prisma.XOR<Prisma.StaffCreateWithoutTeacherSubjectAssignmentsInput, Prisma.StaffUncheckedCreateWithoutTeacherSubjectAssignmentsInput>
  connectOrCreate?: Prisma.StaffCreateOrConnectWithoutTeacherSubjectAssignmentsInput
  upsert?: Prisma.StaffUpsertWithoutTeacherSubjectAssignmentsInput
  connect?: Prisma.StaffWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StaffUpdateToOneWithWhereWithoutTeacherSubjectAssignmentsInput, Prisma.StaffUpdateWithoutTeacherSubjectAssignmentsInput>, Prisma.StaffUncheckedUpdateWithoutTeacherSubjectAssignmentsInput>
}

export type StaffCreateWithoutAuditLogsInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput
  class?: Prisma.ClassCreateNestedOneWithoutSupervisorsInput
  club?: Prisma.ClubCreateNestedOneWithoutSupervisorsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentCreateNestedManyWithoutTeacherInput
}

export type StaffUncheckedCreateWithoutAuditLogsInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  classId?: string | null
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceUncheckedCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentUncheckedCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedCreateNestedManyWithoutTeacherInput
}

export type StaffCreateOrConnectWithoutAuditLogsInput = {
  where: Prisma.StaffWhereUniqueInput
  create: Prisma.XOR<Prisma.StaffCreateWithoutAuditLogsInput, Prisma.StaffUncheckedCreateWithoutAuditLogsInput>
}

export type StaffUpsertWithoutAuditLogsInput = {
  update: Prisma.XOR<Prisma.StaffUpdateWithoutAuditLogsInput, Prisma.StaffUncheckedUpdateWithoutAuditLogsInput>
  create: Prisma.XOR<Prisma.StaffCreateWithoutAuditLogsInput, Prisma.StaffUncheckedCreateWithoutAuditLogsInput>
  where?: Prisma.StaffWhereInput
}

export type StaffUpdateToOneWithWhereWithoutAuditLogsInput = {
  where?: Prisma.StaffWhereInput
  data: Prisma.XOR<Prisma.StaffUpdateWithoutAuditLogsInput, Prisma.StaffUncheckedUpdateWithoutAuditLogsInput>
}

export type StaffUpdateWithoutAuditLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput
  class?: Prisma.ClassUpdateOneWithoutSupervisorsNestedInput
  club?: Prisma.ClubUpdateOneWithoutSupervisorsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateWithoutAuditLogsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUncheckedUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUncheckedUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
}

export type StaffCreateWithoutSchoolInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutStaffInput
  class?: Prisma.ClassCreateNestedOneWithoutSupervisorsInput
  club?: Prisma.ClubCreateNestedOneWithoutSupervisorsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentCreateNestedManyWithoutTeacherInput
}

export type StaffUncheckedCreateWithoutSchoolInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  classId?: string | null
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutStaffInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceUncheckedCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentUncheckedCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedCreateNestedManyWithoutTeacherInput
}

export type StaffCreateOrConnectWithoutSchoolInput = {
  where: Prisma.StaffWhereUniqueInput
  create: Prisma.XOR<Prisma.StaffCreateWithoutSchoolInput, Prisma.StaffUncheckedCreateWithoutSchoolInput>
}

export type StaffCreateManySchoolInputEnvelope = {
  data: Prisma.StaffCreateManySchoolInput | Prisma.StaffCreateManySchoolInput[]
  skipDuplicates?: boolean
}

export type StaffUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StaffWhereUniqueInput
  update: Prisma.XOR<Prisma.StaffUpdateWithoutSchoolInput, Prisma.StaffUncheckedUpdateWithoutSchoolInput>
  create: Prisma.XOR<Prisma.StaffCreateWithoutSchoolInput, Prisma.StaffUncheckedCreateWithoutSchoolInput>
}

export type StaffUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StaffWhereUniqueInput
  data: Prisma.XOR<Prisma.StaffUpdateWithoutSchoolInput, Prisma.StaffUncheckedUpdateWithoutSchoolInput>
}

export type StaffUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.StaffScalarWhereInput
  data: Prisma.XOR<Prisma.StaffUpdateManyMutationInput, Prisma.StaffUncheckedUpdateManyWithoutSchoolInput>
}

export type StaffScalarWhereInput = {
  AND?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[]
  OR?: Prisma.StaffScalarWhereInput[]
  NOT?: Prisma.StaffScalarWhereInput | Prisma.StaffScalarWhereInput[]
  id?: Prisma.StringFilter<"Staff"> | string
  clerkUserId?: Prisma.StringNullableFilter<"Staff"> | string | null
  employeeId?: Prisma.StringFilter<"Staff"> | string
  name?: Prisma.StringFilter<"Staff"> | string
  surname?: Prisma.StringFilter<"Staff"> | string
  email?: Prisma.StringNullableFilter<"Staff"> | string | null
  phone?: Prisma.StringFilter<"Staff"> | string
  address?: Prisma.StringFilter<"Staff"> | string
  img?: Prisma.StringNullableFilter<"Staff"> | string | null
  birthday?: Prisma.DateTimeFilter<"Staff"> | Date | string
  sex?: Prisma.EnumUserSexFilter<"Staff"> | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFilter<"Staff"> | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFilter<"Staff"> | $Enums.AccessLevel
  role?: Prisma.StringFilter<"Staff"> | string
  isFormTeacher?: Prisma.BoolFilter<"Staff"> | boolean
  isActive?: Prisma.BoolFilter<"Staff"> | boolean
  hireDate?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null
  terminationDate?: Prisma.DateTimeNullableFilter<"Staff"> | Date | string | null
  exitReason?: Prisma.StringNullableFilter<"Staff"> | string | null
  schoolId?: Prisma.StringFilter<"Staff"> | string
  classId?: Prisma.StringNullableFilter<"Staff"> | string | null
  clubId?: Prisma.StringNullableFilter<"Staff"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Staff"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Staff"> | Date | string
}

export type StaffCreateWithoutClassInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutStaffInput
  club?: Prisma.ClubCreateNestedOneWithoutSupervisorsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentCreateNestedManyWithoutTeacherInput
}

export type StaffUncheckedCreateWithoutClassInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutStaffInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceUncheckedCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentUncheckedCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedCreateNestedManyWithoutTeacherInput
}

export type StaffCreateOrConnectWithoutClassInput = {
  where: Prisma.StaffWhereUniqueInput
  create: Prisma.XOR<Prisma.StaffCreateWithoutClassInput, Prisma.StaffUncheckedCreateWithoutClassInput>
}

export type StaffCreateManyClassInputEnvelope = {
  data: Prisma.StaffCreateManyClassInput | Prisma.StaffCreateManyClassInput[]
  skipDuplicates?: boolean
}

export type StaffUpsertWithWhereUniqueWithoutClassInput = {
  where: Prisma.StaffWhereUniqueInput
  update: Prisma.XOR<Prisma.StaffUpdateWithoutClassInput, Prisma.StaffUncheckedUpdateWithoutClassInput>
  create: Prisma.XOR<Prisma.StaffCreateWithoutClassInput, Prisma.StaffUncheckedCreateWithoutClassInput>
}

export type StaffUpdateWithWhereUniqueWithoutClassInput = {
  where: Prisma.StaffWhereUniqueInput
  data: Prisma.XOR<Prisma.StaffUpdateWithoutClassInput, Prisma.StaffUncheckedUpdateWithoutClassInput>
}

export type StaffUpdateManyWithWhereWithoutClassInput = {
  where: Prisma.StaffScalarWhereInput
  data: Prisma.XOR<Prisma.StaffUpdateManyMutationInput, Prisma.StaffUncheckedUpdateManyWithoutClassInput>
}

export type StaffCreateWithoutTimetableAssignmentsInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutStaffInput
  class?: Prisma.ClassCreateNestedOneWithoutSupervisorsInput
  club?: Prisma.ClubCreateNestedOneWithoutSupervisorsInput
  attendances?: Prisma.StaffAttendanceCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentCreateNestedManyWithoutTeacherInput
}

export type StaffUncheckedCreateWithoutTimetableAssignmentsInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  classId?: string | null
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutStaffInput
  attendances?: Prisma.StaffAttendanceUncheckedCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentUncheckedCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedCreateNestedManyWithoutTeacherInput
}

export type StaffCreateOrConnectWithoutTimetableAssignmentsInput = {
  where: Prisma.StaffWhereUniqueInput
  create: Prisma.XOR<Prisma.StaffCreateWithoutTimetableAssignmentsInput, Prisma.StaffUncheckedCreateWithoutTimetableAssignmentsInput>
}

export type StaffUpsertWithoutTimetableAssignmentsInput = {
  update: Prisma.XOR<Prisma.StaffUpdateWithoutTimetableAssignmentsInput, Prisma.StaffUncheckedUpdateWithoutTimetableAssignmentsInput>
  create: Prisma.XOR<Prisma.StaffCreateWithoutTimetableAssignmentsInput, Prisma.StaffUncheckedCreateWithoutTimetableAssignmentsInput>
  where?: Prisma.StaffWhereInput
}

export type StaffUpdateToOneWithWhereWithoutTimetableAssignmentsInput = {
  where?: Prisma.StaffWhereInput
  data: Prisma.XOR<Prisma.StaffUpdateWithoutTimetableAssignmentsInput, Prisma.StaffUncheckedUpdateWithoutTimetableAssignmentsInput>
}

export type StaffUpdateWithoutTimetableAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutStaffNestedInput
  class?: Prisma.ClassUpdateOneWithoutSupervisorsNestedInput
  club?: Prisma.ClubUpdateOneWithoutSupervisorsNestedInput
  attendances?: Prisma.StaffAttendanceUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateWithoutTimetableAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutStaffNestedInput
  attendances?: Prisma.StaffAttendanceUncheckedUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUncheckedUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
}

export type StaffCreateWithoutClubInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutStaffInput
  class?: Prisma.ClassCreateNestedOneWithoutSupervisorsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentCreateNestedManyWithoutTeacherInput
}

export type StaffUncheckedCreateWithoutClubInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  classId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutStaffInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceUncheckedCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentUncheckedCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedCreateNestedManyWithoutTeacherInput
}

export type StaffCreateOrConnectWithoutClubInput = {
  where: Prisma.StaffWhereUniqueInput
  create: Prisma.XOR<Prisma.StaffCreateWithoutClubInput, Prisma.StaffUncheckedCreateWithoutClubInput>
}

export type StaffCreateManyClubInputEnvelope = {
  data: Prisma.StaffCreateManyClubInput | Prisma.StaffCreateManyClubInput[]
  skipDuplicates?: boolean
}

export type StaffUpsertWithWhereUniqueWithoutClubInput = {
  where: Prisma.StaffWhereUniqueInput
  update: Prisma.XOR<Prisma.StaffUpdateWithoutClubInput, Prisma.StaffUncheckedUpdateWithoutClubInput>
  create: Prisma.XOR<Prisma.StaffCreateWithoutClubInput, Prisma.StaffUncheckedCreateWithoutClubInput>
}

export type StaffUpdateWithWhereUniqueWithoutClubInput = {
  where: Prisma.StaffWhereUniqueInput
  data: Prisma.XOR<Prisma.StaffUpdateWithoutClubInput, Prisma.StaffUncheckedUpdateWithoutClubInput>
}

export type StaffUpdateManyWithWhereWithoutClubInput = {
  where: Prisma.StaffScalarWhereInput
  data: Prisma.XOR<Prisma.StaffUpdateManyMutationInput, Prisma.StaffUncheckedUpdateManyWithoutClubInput>
}

export type StaffCreateWithoutAttendancesInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutStaffInput
  class?: Prisma.ClassCreateNestedOneWithoutSupervisorsInput
  club?: Prisma.ClubCreateNestedOneWithoutSupervisorsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutTeacherInput
  salaries?: Prisma.SalaryPaymentCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentCreateNestedManyWithoutTeacherInput
}

export type StaffUncheckedCreateWithoutAttendancesInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  classId?: string | null
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutStaffInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutTeacherInput
  salaries?: Prisma.SalaryPaymentUncheckedCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedCreateNestedManyWithoutTeacherInput
}

export type StaffCreateOrConnectWithoutAttendancesInput = {
  where: Prisma.StaffWhereUniqueInput
  create: Prisma.XOR<Prisma.StaffCreateWithoutAttendancesInput, Prisma.StaffUncheckedCreateWithoutAttendancesInput>
}

export type StaffUpsertWithoutAttendancesInput = {
  update: Prisma.XOR<Prisma.StaffUpdateWithoutAttendancesInput, Prisma.StaffUncheckedUpdateWithoutAttendancesInput>
  create: Prisma.XOR<Prisma.StaffCreateWithoutAttendancesInput, Prisma.StaffUncheckedCreateWithoutAttendancesInput>
  where?: Prisma.StaffWhereInput
}

export type StaffUpdateToOneWithWhereWithoutAttendancesInput = {
  where?: Prisma.StaffWhereInput
  data: Prisma.XOR<Prisma.StaffUpdateWithoutAttendancesInput, Prisma.StaffUncheckedUpdateWithoutAttendancesInput>
}

export type StaffUpdateWithoutAttendancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutStaffNestedInput
  class?: Prisma.ClassUpdateOneWithoutSupervisorsNestedInput
  club?: Prisma.ClubUpdateOneWithoutSupervisorsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutTeacherNestedInput
  salaries?: Prisma.SalaryPaymentUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateWithoutAttendancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutStaffNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
  salaries?: Prisma.SalaryPaymentUncheckedUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
}

export type StaffCreateWithoutSalariesInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutStaffInput
  class?: Prisma.ClassCreateNestedOneWithoutSupervisorsInput
  club?: Prisma.ClubCreateNestedOneWithoutSupervisorsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentCreateNestedManyWithoutTeacherInput
}

export type StaffUncheckedCreateWithoutSalariesInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  classId?: string | null
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutStaffInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceUncheckedCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedCreateNestedManyWithoutTeacherInput
}

export type StaffCreateOrConnectWithoutSalariesInput = {
  where: Prisma.StaffWhereUniqueInput
  create: Prisma.XOR<Prisma.StaffCreateWithoutSalariesInput, Prisma.StaffUncheckedCreateWithoutSalariesInput>
}

export type StaffUpsertWithoutSalariesInput = {
  update: Prisma.XOR<Prisma.StaffUpdateWithoutSalariesInput, Prisma.StaffUncheckedUpdateWithoutSalariesInput>
  create: Prisma.XOR<Prisma.StaffCreateWithoutSalariesInput, Prisma.StaffUncheckedCreateWithoutSalariesInput>
  where?: Prisma.StaffWhereInput
}

export type StaffUpdateToOneWithWhereWithoutSalariesInput = {
  where?: Prisma.StaffWhereInput
  data: Prisma.XOR<Prisma.StaffUpdateWithoutSalariesInput, Prisma.StaffUncheckedUpdateWithoutSalariesInput>
}

export type StaffUpdateWithoutSalariesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutStaffNestedInput
  class?: Prisma.ClassUpdateOneWithoutSupervisorsNestedInput
  club?: Prisma.ClubUpdateOneWithoutSupervisorsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateWithoutSalariesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutStaffNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUncheckedUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
}

export type StaffCreateWithoutBankAccountsInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutStaffInput
  class?: Prisma.ClassCreateNestedOneWithoutSupervisorsInput
  club?: Prisma.ClubCreateNestedOneWithoutSupervisorsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentCreateNestedManyWithoutTeacherInput
}

export type StaffUncheckedCreateWithoutBankAccountsInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  classId?: string | null
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutStaffInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceUncheckedCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentUncheckedCreateNestedManyWithoutStaffInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedCreateNestedManyWithoutTeacherInput
}

export type StaffCreateOrConnectWithoutBankAccountsInput = {
  where: Prisma.StaffWhereUniqueInput
  create: Prisma.XOR<Prisma.StaffCreateWithoutBankAccountsInput, Prisma.StaffUncheckedCreateWithoutBankAccountsInput>
}

export type StaffUpsertWithoutBankAccountsInput = {
  update: Prisma.XOR<Prisma.StaffUpdateWithoutBankAccountsInput, Prisma.StaffUncheckedUpdateWithoutBankAccountsInput>
  create: Prisma.XOR<Prisma.StaffCreateWithoutBankAccountsInput, Prisma.StaffUncheckedCreateWithoutBankAccountsInput>
  where?: Prisma.StaffWhereInput
}

export type StaffUpdateToOneWithWhereWithoutBankAccountsInput = {
  where?: Prisma.StaffWhereInput
  data: Prisma.XOR<Prisma.StaffUpdateWithoutBankAccountsInput, Prisma.StaffUncheckedUpdateWithoutBankAccountsInput>
}

export type StaffUpdateWithoutBankAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutStaffNestedInput
  class?: Prisma.ClassUpdateOneWithoutSupervisorsNestedInput
  club?: Prisma.ClubUpdateOneWithoutSupervisorsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateWithoutBankAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutStaffNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUncheckedUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUncheckedUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
}

export type StaffCreateWithoutTeacherSubjectAssignmentsInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStaffsInput
  auditLogs?: Prisma.AuditLogCreateNestedManyWithoutStaffInput
  class?: Prisma.ClassCreateNestedOneWithoutSupervisorsInput
  club?: Prisma.ClubCreateNestedOneWithoutSupervisorsInput
  timetableAssignments?: Prisma.TimetableAssignmentCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountCreateNestedManyWithoutStaffInput
}

export type StaffUncheckedCreateWithoutTeacherSubjectAssignmentsInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  classId?: string | null
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  auditLogs?: Prisma.AuditLogUncheckedCreateNestedManyWithoutStaffInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedCreateNestedManyWithoutTeacherInput
  attendances?: Prisma.StaffAttendanceUncheckedCreateNestedManyWithoutStaffInput
  salaries?: Prisma.SalaryPaymentUncheckedCreateNestedManyWithoutStaffInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedCreateNestedManyWithoutStaffInput
}

export type StaffCreateOrConnectWithoutTeacherSubjectAssignmentsInput = {
  where: Prisma.StaffWhereUniqueInput
  create: Prisma.XOR<Prisma.StaffCreateWithoutTeacherSubjectAssignmentsInput, Prisma.StaffUncheckedCreateWithoutTeacherSubjectAssignmentsInput>
}

export type StaffUpsertWithoutTeacherSubjectAssignmentsInput = {
  update: Prisma.XOR<Prisma.StaffUpdateWithoutTeacherSubjectAssignmentsInput, Prisma.StaffUncheckedUpdateWithoutTeacherSubjectAssignmentsInput>
  create: Prisma.XOR<Prisma.StaffCreateWithoutTeacherSubjectAssignmentsInput, Prisma.StaffUncheckedCreateWithoutTeacherSubjectAssignmentsInput>
  where?: Prisma.StaffWhereInput
}

export type StaffUpdateToOneWithWhereWithoutTeacherSubjectAssignmentsInput = {
  where?: Prisma.StaffWhereInput
  data: Prisma.XOR<Prisma.StaffUpdateWithoutTeacherSubjectAssignmentsInput, Prisma.StaffUncheckedUpdateWithoutTeacherSubjectAssignmentsInput>
}

export type StaffUpdateWithoutTeacherSubjectAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutStaffNestedInput
  class?: Prisma.ClassUpdateOneWithoutSupervisorsNestedInput
  club?: Prisma.ClubUpdateOneWithoutSupervisorsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUpdateManyWithoutStaffNestedInput
}

export type StaffUncheckedUpdateWithoutTeacherSubjectAssignmentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutStaffNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUncheckedUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUncheckedUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedUpdateManyWithoutStaffNestedInput
}

export type StaffCreateManySchoolInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  classId?: string | null
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StaffUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUpdateManyWithoutStaffNestedInput
  class?: Prisma.ClassUpdateOneWithoutSupervisorsNestedInput
  club?: Prisma.ClubUpdateOneWithoutSupervisorsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutStaffNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUncheckedUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUncheckedUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StaffCreateManyClassInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StaffUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutStaffNestedInput
  club?: Prisma.ClubUpdateOneWithoutSupervisorsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutStaffNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUncheckedUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUncheckedUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateManyWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StaffCreateManyClubInput = {
  id?: string
  clerkUserId?: string | null
  employeeId: string
  name: string
  surname: string
  email?: string | null
  phone: string
  address: string
  img?: string | null
  birthday: Date | string
  sex: $Enums.UserSex
  contractType?: $Enums.StaffContractType
  accessLevel?: $Enums.AccessLevel
  role: string
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: Date | string | null
  terminationDate?: Date | string | null
  exitReason?: string | null
  schoolId: string
  classId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StaffUpdateWithoutClubInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStaffsNestedInput
  auditLogs?: Prisma.AuditLogUpdateManyWithoutStaffNestedInput
  class?: Prisma.ClassUpdateOneWithoutSupervisorsNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateWithoutClubInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  auditLogs?: Prisma.AuditLogUncheckedUpdateManyWithoutStaffNestedInput
  timetableAssignments?: Prisma.TimetableAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
  attendances?: Prisma.StaffAttendanceUncheckedUpdateManyWithoutStaffNestedInput
  salaries?: Prisma.SalaryPaymentUncheckedUpdateManyWithoutStaffNestedInput
  bankAccounts?: Prisma.StaffBankAccountUncheckedUpdateManyWithoutStaffNestedInput
  teacherSubjectAssignments?: Prisma.TeacherSubjectAssignmentUncheckedUpdateManyWithoutTeacherNestedInput
}

export type StaffUncheckedUpdateManyWithoutClubInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  employeeId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  contractType?: Prisma.EnumStaffContractTypeFieldUpdateOperationsInput | $Enums.StaffContractType
  accessLevel?: Prisma.EnumAccessLevelFieldUpdateOperationsInput | $Enums.AccessLevel
  role?: Prisma.StringFieldUpdateOperationsInput | string
  isFormTeacher?: Prisma.BoolFieldUpdateOperationsInput | boolean
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  hireDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  terminationDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  exitReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type StaffCountOutputType
 */

export type StaffCountOutputType = {
  auditLogs: number
  timetableAssignments: number
  attendances: number
  salaries: number
  bankAccounts: number
  teacherSubjectAssignments: number
}

export type StaffCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  auditLogs?: boolean | StaffCountOutputTypeCountAuditLogsArgs
  timetableAssignments?: boolean | StaffCountOutputTypeCountTimetableAssignmentsArgs
  attendances?: boolean | StaffCountOutputTypeCountAttendancesArgs
  salaries?: boolean | StaffCountOutputTypeCountSalariesArgs
  bankAccounts?: boolean | StaffCountOutputTypeCountBankAccountsArgs
  teacherSubjectAssignments?: boolean | StaffCountOutputTypeCountTeacherSubjectAssignmentsArgs
}

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StaffCountOutputType
   */
  select?: Prisma.StaffCountOutputTypeSelect<ExtArgs> | null
}

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeCountAuditLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AuditLogWhereInput
}

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeCountTimetableAssignmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TimetableAssignmentWhereInput
}

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeCountAttendancesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StaffAttendanceWhereInput
}

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeCountSalariesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SalaryPaymentWhereInput
}

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeCountBankAccountsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StaffBankAccountWhereInput
}

/**
 * StaffCountOutputType without action
 */
export type StaffCountOutputTypeCountTeacherSubjectAssignmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TeacherSubjectAssignmentWhereInput
}


export type StaffSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  clerkUserId?: boolean
  employeeId?: boolean
  name?: boolean
  surname?: boolean
  email?: boolean
  phone?: boolean
  address?: boolean
  img?: boolean
  birthday?: boolean
  sex?: boolean
  contractType?: boolean
  accessLevel?: boolean
  role?: boolean
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: boolean
  terminationDate?: boolean
  exitReason?: boolean
  schoolId?: boolean
  classId?: boolean
  clubId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  auditLogs?: boolean | Prisma.Staff$auditLogsArgs<ExtArgs>
  class?: boolean | Prisma.Staff$classArgs<ExtArgs>
  club?: boolean | Prisma.Staff$clubArgs<ExtArgs>
  timetableAssignments?: boolean | Prisma.Staff$timetableAssignmentsArgs<ExtArgs>
  attendances?: boolean | Prisma.Staff$attendancesArgs<ExtArgs>
  salaries?: boolean | Prisma.Staff$salariesArgs<ExtArgs>
  bankAccounts?: boolean | Prisma.Staff$bankAccountsArgs<ExtArgs>
  teacherSubjectAssignments?: boolean | Prisma.Staff$teacherSubjectAssignmentsArgs<ExtArgs>
  _count?: boolean | Prisma.StaffCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["staff"]>

export type StaffSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  clerkUserId?: boolean
  employeeId?: boolean
  name?: boolean
  surname?: boolean
  email?: boolean
  phone?: boolean
  address?: boolean
  img?: boolean
  birthday?: boolean
  sex?: boolean
  contractType?: boolean
  accessLevel?: boolean
  role?: boolean
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: boolean
  terminationDate?: boolean
  exitReason?: boolean
  schoolId?: boolean
  classId?: boolean
  clubId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.Staff$classArgs<ExtArgs>
  club?: boolean | Prisma.Staff$clubArgs<ExtArgs>
}, ExtArgs["result"]["staff"]>

export type StaffSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  clerkUserId?: boolean
  employeeId?: boolean
  name?: boolean
  surname?: boolean
  email?: boolean
  phone?: boolean
  address?: boolean
  img?: boolean
  birthday?: boolean
  sex?: boolean
  contractType?: boolean
  accessLevel?: boolean
  role?: boolean
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: boolean
  terminationDate?: boolean
  exitReason?: boolean
  schoolId?: boolean
  classId?: boolean
  clubId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.Staff$classArgs<ExtArgs>
  club?: boolean | Prisma.Staff$clubArgs<ExtArgs>
}, ExtArgs["result"]["staff"]>

export type StaffSelectScalar = {
  id?: boolean
  clerkUserId?: boolean
  employeeId?: boolean
  name?: boolean
  surname?: boolean
  email?: boolean
  phone?: boolean
  address?: boolean
  img?: boolean
  birthday?: boolean
  sex?: boolean
  contractType?: boolean
  accessLevel?: boolean
  role?: boolean
  isFormTeacher?: boolean
  isActive?: boolean
  hireDate?: boolean
  terminationDate?: boolean
  exitReason?: boolean
  schoolId?: boolean
  classId?: boolean
  clubId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type StaffOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "clerkUserId" | "employeeId" | "name" | "surname" | "email" | "phone" | "address" | "img" | "birthday" | "sex" | "contractType" | "accessLevel" | "role" | "isFormTeacher" | "isActive" | "hireDate" | "terminationDate" | "exitReason" | "schoolId" | "classId" | "clubId" | "createdAt" | "updatedAt", ExtArgs["result"]["staff"]>
export type StaffInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  auditLogs?: boolean | Prisma.Staff$auditLogsArgs<ExtArgs>
  class?: boolean | Prisma.Staff$classArgs<ExtArgs>
  club?: boolean | Prisma.Staff$clubArgs<ExtArgs>
  timetableAssignments?: boolean | Prisma.Staff$timetableAssignmentsArgs<ExtArgs>
  attendances?: boolean | Prisma.Staff$attendancesArgs<ExtArgs>
  salaries?: boolean | Prisma.Staff$salariesArgs<ExtArgs>
  bankAccounts?: boolean | Prisma.Staff$bankAccountsArgs<ExtArgs>
  teacherSubjectAssignments?: boolean | Prisma.Staff$teacherSubjectAssignmentsArgs<ExtArgs>
  _count?: boolean | Prisma.StaffCountOutputTypeDefaultArgs<ExtArgs>
}
export type StaffIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.Staff$classArgs<ExtArgs>
  club?: boolean | Prisma.Staff$clubArgs<ExtArgs>
}
export type StaffIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.Staff$classArgs<ExtArgs>
  club?: boolean | Prisma.Staff$clubArgs<ExtArgs>
}

export type $StaffPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Staff"
  objects: {
    school: Prisma.$SchoolPayload<ExtArgs>
    auditLogs: Prisma.$AuditLogPayload<ExtArgs>[]
    class: Prisma.$ClassPayload<ExtArgs> | null
    club: Prisma.$ClubPayload<ExtArgs> | null
    timetableAssignments: Prisma.$TimetableAssignmentPayload<ExtArgs>[]
    attendances: Prisma.$StaffAttendancePayload<ExtArgs>[]
    salaries: Prisma.$SalaryPaymentPayload<ExtArgs>[]
    bankAccounts: Prisma.$StaffBankAccountPayload<ExtArgs>[]
    teacherSubjectAssignments: Prisma.$TeacherSubjectAssignmentPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    clerkUserId: string | null
    employeeId: string
    name: string
    surname: string
    email: string | null
    phone: string
    address: string
    img: string | null
    birthday: Date
    sex: $Enums.UserSex
    contractType: $Enums.StaffContractType
    accessLevel: $Enums.AccessLevel
    role: string
    isFormTeacher: boolean
    isActive: boolean
    hireDate: Date | null
    terminationDate: Date | null
    exitReason: string | null
    schoolId: string
    classId: string | null
    clubId: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["staff"]>
  composites: {}
}

export type StaffGetPayload<S extends boolean | null | undefined | StaffDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$StaffPayload, S>

export type StaffCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<StaffFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: StaffCountAggregateInputType | true
  }

export interface StaffDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Staff'], meta: { name: 'Staff' } }
  /**
   * Find zero or one Staff that matches the filter.
   * @param {StaffFindUniqueArgs} args - Arguments to find a Staff
   * @example
   * // Get one Staff
   * const staff = await prisma.staff.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends StaffFindUniqueArgs>(args: Prisma.SelectSubset<T, StaffFindUniqueArgs<ExtArgs>>): Prisma.Prisma__StaffClient<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Staff that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {StaffFindUniqueOrThrowArgs} args - Arguments to find a Staff
   * @example
   * // Get one Staff
   * const staff = await prisma.staff.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends StaffFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, StaffFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__StaffClient<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Staff that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffFindFirstArgs} args - Arguments to find a Staff
   * @example
   * // Get one Staff
   * const staff = await prisma.staff.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends StaffFindFirstArgs>(args?: Prisma.SelectSubset<T, StaffFindFirstArgs<ExtArgs>>): Prisma.Prisma__StaffClient<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Staff that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffFindFirstOrThrowArgs} args - Arguments to find a Staff
   * @example
   * // Get one Staff
   * const staff = await prisma.staff.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends StaffFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, StaffFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__StaffClient<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Staff that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Staff
   * const staff = await prisma.staff.findMany()
   * 
   * // Get first 10 Staff
   * const staff = await prisma.staff.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const staffWithIdOnly = await prisma.staff.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends StaffFindManyArgs>(args?: Prisma.SelectSubset<T, StaffFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Staff.
   * @param {StaffCreateArgs} args - Arguments to create a Staff.
   * @example
   * // Create one Staff
   * const Staff = await prisma.staff.create({
   *   data: {
   *     // ... data to create a Staff
   *   }
   * })
   * 
   */
  create<T extends StaffCreateArgs>(args: Prisma.SelectSubset<T, StaffCreateArgs<ExtArgs>>): Prisma.Prisma__StaffClient<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Staff.
   * @param {StaffCreateManyArgs} args - Arguments to create many Staff.
   * @example
   * // Create many Staff
   * const staff = await prisma.staff.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends StaffCreateManyArgs>(args?: Prisma.SelectSubset<T, StaffCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Staff and returns the data saved in the database.
   * @param {StaffCreateManyAndReturnArgs} args - Arguments to create many Staff.
   * @example
   * // Create many Staff
   * const staff = await prisma.staff.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Staff and only return the `id`
   * const staffWithIdOnly = await prisma.staff.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends StaffCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, StaffCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Staff.
   * @param {StaffDeleteArgs} args - Arguments to delete one Staff.
   * @example
   * // Delete one Staff
   * const Staff = await prisma.staff.delete({
   *   where: {
   *     // ... filter to delete one Staff
   *   }
   * })
   * 
   */
  delete<T extends StaffDeleteArgs>(args: Prisma.SelectSubset<T, StaffDeleteArgs<ExtArgs>>): Prisma.Prisma__StaffClient<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Staff.
   * @param {StaffUpdateArgs} args - Arguments to update one Staff.
   * @example
   * // Update one Staff
   * const staff = await prisma.staff.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends StaffUpdateArgs>(args: Prisma.SelectSubset<T, StaffUpdateArgs<ExtArgs>>): Prisma.Prisma__StaffClient<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Staff.
   * @param {StaffDeleteManyArgs} args - Arguments to filter Staff to delete.
   * @example
   * // Delete a few Staff
   * const { count } = await prisma.staff.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends StaffDeleteManyArgs>(args?: Prisma.SelectSubset<T, StaffDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Staff.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Staff
   * const staff = await prisma.staff.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends StaffUpdateManyArgs>(args: Prisma.SelectSubset<T, StaffUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Staff and returns the data updated in the database.
   * @param {StaffUpdateManyAndReturnArgs} args - Arguments to update many Staff.
   * @example
   * // Update many Staff
   * const staff = await prisma.staff.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Staff and only return the `id`
   * const staffWithIdOnly = await prisma.staff.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends StaffUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, StaffUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Staff.
   * @param {StaffUpsertArgs} args - Arguments to update or create a Staff.
   * @example
   * // Update or create a Staff
   * const staff = await prisma.staff.upsert({
   *   create: {
   *     // ... data to create a Staff
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Staff we want to update
   *   }
   * })
   */
  upsert<T extends StaffUpsertArgs>(args: Prisma.SelectSubset<T, StaffUpsertArgs<ExtArgs>>): Prisma.Prisma__StaffClient<runtime.Types.Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Staff.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffCountArgs} args - Arguments to filter Staff to count.
   * @example
   * // Count the number of Staff
   * const count = await prisma.staff.count({
   *   where: {
   *     // ... the filter for the Staff we want to count
   *   }
   * })
  **/
  count<T extends StaffCountArgs>(
    args?: Prisma.Subset<T, StaffCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], StaffCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Staff.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends StaffAggregateArgs>(args: Prisma.Subset<T, StaffAggregateArgs>): Prisma.PrismaPromise<GetStaffAggregateType<T>>

  /**
   * Group by Staff.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StaffGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends StaffGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: StaffGroupByArgs['orderBy'] }
      : { orderBy?: StaffGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, StaffGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStaffGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Staff model
 */
readonly fields: StaffFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Staff.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__StaffClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>): Prisma.Prisma__SchoolClient<runtime.Types.Result.GetResult<Prisma.$SchoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  auditLogs<T extends Prisma.Staff$auditLogsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Staff$auditLogsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  class<T extends Prisma.Staff$classArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Staff$classArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  club<T extends Prisma.Staff$clubArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Staff$clubArgs<ExtArgs>>): Prisma.Prisma__ClubClient<runtime.Types.Result.GetResult<Prisma.$ClubPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  timetableAssignments<T extends Prisma.Staff$timetableAssignmentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Staff$timetableAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TimetableAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  attendances<T extends Prisma.Staff$attendancesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Staff$attendancesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StaffAttendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  salaries<T extends Prisma.Staff$salariesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Staff$salariesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SalaryPaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  bankAccounts<T extends Prisma.Staff$bankAccountsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Staff$bankAccountsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StaffBankAccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  teacherSubjectAssignments<T extends Prisma.Staff$teacherSubjectAssignmentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Staff$teacherSubjectAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TeacherSubjectAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Staff model
 */
export interface StaffFieldRefs {
  readonly id: Prisma.FieldRef<"Staff", 'String'>
  readonly clerkUserId: Prisma.FieldRef<"Staff", 'String'>
  readonly employeeId: Prisma.FieldRef<"Staff", 'String'>
  readonly name: Prisma.FieldRef<"Staff", 'String'>
  readonly surname: Prisma.FieldRef<"Staff", 'String'>
  readonly email: Prisma.FieldRef<"Staff", 'String'>
  readonly phone: Prisma.FieldRef<"Staff", 'String'>
  readonly address: Prisma.FieldRef<"Staff", 'String'>
  readonly img: Prisma.FieldRef<"Staff", 'String'>
  readonly birthday: Prisma.FieldRef<"Staff", 'DateTime'>
  readonly sex: Prisma.FieldRef<"Staff", 'UserSex'>
  readonly contractType: Prisma.FieldRef<"Staff", 'StaffContractType'>
  readonly accessLevel: Prisma.FieldRef<"Staff", 'AccessLevel'>
  readonly role: Prisma.FieldRef<"Staff", 'String'>
  readonly isFormTeacher: Prisma.FieldRef<"Staff", 'Boolean'>
  readonly isActive: Prisma.FieldRef<"Staff", 'Boolean'>
  readonly hireDate: Prisma.FieldRef<"Staff", 'DateTime'>
  readonly terminationDate: Prisma.FieldRef<"Staff", 'DateTime'>
  readonly exitReason: Prisma.FieldRef<"Staff", 'String'>
  readonly schoolId: Prisma.FieldRef<"Staff", 'String'>
  readonly classId: Prisma.FieldRef<"Staff", 'String'>
  readonly clubId: Prisma.FieldRef<"Staff", 'String'>
  readonly createdAt: Prisma.FieldRef<"Staff", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Staff", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Staff findUnique
 */
export type StaffFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
  /**
   * Filter, which Staff to fetch.
   */
  where: Prisma.StaffWhereUniqueInput
}

/**
 * Staff findUniqueOrThrow
 */
export type StaffFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
  /**
   * Filter, which Staff to fetch.
   */
  where: Prisma.StaffWhereUniqueInput
}

/**
 * Staff findFirst
 */
export type StaffFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
  /**
   * Filter, which Staff to fetch.
   */
  where?: Prisma.StaffWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Staff to fetch.
   */
  orderBy?: Prisma.StaffOrderByWithRelationInput | Prisma.StaffOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Staff.
   */
  cursor?: Prisma.StaffWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Staff from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Staff.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Staff.
   */
  distinct?: Prisma.StaffScalarFieldEnum | Prisma.StaffScalarFieldEnum[]
}

/**
 * Staff findFirstOrThrow
 */
export type StaffFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
  /**
   * Filter, which Staff to fetch.
   */
  where?: Prisma.StaffWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Staff to fetch.
   */
  orderBy?: Prisma.StaffOrderByWithRelationInput | Prisma.StaffOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Staff.
   */
  cursor?: Prisma.StaffWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Staff from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Staff.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Staff.
   */
  distinct?: Prisma.StaffScalarFieldEnum | Prisma.StaffScalarFieldEnum[]
}

/**
 * Staff findMany
 */
export type StaffFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
  /**
   * Filter, which Staff to fetch.
   */
  where?: Prisma.StaffWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Staff to fetch.
   */
  orderBy?: Prisma.StaffOrderByWithRelationInput | Prisma.StaffOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Staff.
   */
  cursor?: Prisma.StaffWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Staff from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Staff.
   */
  skip?: number
  distinct?: Prisma.StaffScalarFieldEnum | Prisma.StaffScalarFieldEnum[]
}

/**
 * Staff create
 */
export type StaffCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
  /**
   * The data needed to create a Staff.
   */
  data: Prisma.XOR<Prisma.StaffCreateInput, Prisma.StaffUncheckedCreateInput>
}

/**
 * Staff createMany
 */
export type StaffCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Staff.
   */
  data: Prisma.StaffCreateManyInput | Prisma.StaffCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Staff createManyAndReturn
 */
export type StaffCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * The data used to create many Staff.
   */
  data: Prisma.StaffCreateManyInput | Prisma.StaffCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Staff update
 */
export type StaffUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
  /**
   * The data needed to update a Staff.
   */
  data: Prisma.XOR<Prisma.StaffUpdateInput, Prisma.StaffUncheckedUpdateInput>
  /**
   * Choose, which Staff to update.
   */
  where: Prisma.StaffWhereUniqueInput
}

/**
 * Staff updateMany
 */
export type StaffUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Staff.
   */
  data: Prisma.XOR<Prisma.StaffUpdateManyMutationInput, Prisma.StaffUncheckedUpdateManyInput>
  /**
   * Filter which Staff to update
   */
  where?: Prisma.StaffWhereInput
  /**
   * Limit how many Staff to update.
   */
  limit?: number
}

/**
 * Staff updateManyAndReturn
 */
export type StaffUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * The data used to update Staff.
   */
  data: Prisma.XOR<Prisma.StaffUpdateManyMutationInput, Prisma.StaffUncheckedUpdateManyInput>
  /**
   * Filter which Staff to update
   */
  where?: Prisma.StaffWhereInput
  /**
   * Limit how many Staff to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Staff upsert
 */
export type StaffUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
  /**
   * The filter to search for the Staff to update in case it exists.
   */
  where: Prisma.StaffWhereUniqueInput
  /**
   * In case the Staff found by the `where` argument doesn't exist, create a new Staff with this data.
   */
  create: Prisma.XOR<Prisma.StaffCreateInput, Prisma.StaffUncheckedCreateInput>
  /**
   * In case the Staff was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.StaffUpdateInput, Prisma.StaffUncheckedUpdateInput>
}

/**
 * Staff delete
 */
export type StaffDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
  /**
   * Filter which Staff to delete.
   */
  where: Prisma.StaffWhereUniqueInput
}

/**
 * Staff deleteMany
 */
export type StaffDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Staff to delete
   */
  where?: Prisma.StaffWhereInput
  /**
   * Limit how many Staff to delete.
   */
  limit?: number
}

/**
 * Staff.auditLogs
 */
export type Staff$auditLogsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuditLog
   */
  select?: Prisma.AuditLogSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuditLog
   */
  omit?: Prisma.AuditLogOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuditLogInclude<ExtArgs> | null
  where?: Prisma.AuditLogWhereInput
  orderBy?: Prisma.AuditLogOrderByWithRelationInput | Prisma.AuditLogOrderByWithRelationInput[]
  cursor?: Prisma.AuditLogWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AuditLogScalarFieldEnum | Prisma.AuditLogScalarFieldEnum[]
}

/**
 * Staff.class
 */
export type Staff$classArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  where?: Prisma.ClassWhereInput
}

/**
 * Staff.club
 */
export type Staff$clubArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Club
   */
  select?: Prisma.ClubSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Club
   */
  omit?: Prisma.ClubOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClubInclude<ExtArgs> | null
  where?: Prisma.ClubWhereInput
}

/**
 * Staff.timetableAssignments
 */
export type Staff$timetableAssignmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetableAssignment
   */
  select?: Prisma.TimetableAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetableAssignment
   */
  omit?: Prisma.TimetableAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetableAssignmentInclude<ExtArgs> | null
  where?: Prisma.TimetableAssignmentWhereInput
  orderBy?: Prisma.TimetableAssignmentOrderByWithRelationInput | Prisma.TimetableAssignmentOrderByWithRelationInput[]
  cursor?: Prisma.TimetableAssignmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TimetableAssignmentScalarFieldEnum | Prisma.TimetableAssignmentScalarFieldEnum[]
}

/**
 * Staff.attendances
 */
export type Staff$attendancesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StaffAttendance
   */
  select?: Prisma.StaffAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StaffAttendance
   */
  omit?: Prisma.StaffAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffAttendanceInclude<ExtArgs> | null
  where?: Prisma.StaffAttendanceWhereInput
  orderBy?: Prisma.StaffAttendanceOrderByWithRelationInput | Prisma.StaffAttendanceOrderByWithRelationInput[]
  cursor?: Prisma.StaffAttendanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StaffAttendanceScalarFieldEnum | Prisma.StaffAttendanceScalarFieldEnum[]
}

/**
 * Staff.salaries
 */
export type Staff$salariesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SalaryPayment
   */
  select?: Prisma.SalaryPaymentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SalaryPayment
   */
  omit?: Prisma.SalaryPaymentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SalaryPaymentInclude<ExtArgs> | null
  where?: Prisma.SalaryPaymentWhereInput
  orderBy?: Prisma.SalaryPaymentOrderByWithRelationInput | Prisma.SalaryPaymentOrderByWithRelationInput[]
  cursor?: Prisma.SalaryPaymentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SalaryPaymentScalarFieldEnum | Prisma.SalaryPaymentScalarFieldEnum[]
}

/**
 * Staff.bankAccounts
 */
export type Staff$bankAccountsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StaffBankAccount
   */
  select?: Prisma.StaffBankAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StaffBankAccount
   */
  omit?: Prisma.StaffBankAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffBankAccountInclude<ExtArgs> | null
  where?: Prisma.StaffBankAccountWhereInput
  orderBy?: Prisma.StaffBankAccountOrderByWithRelationInput | Prisma.StaffBankAccountOrderByWithRelationInput[]
  cursor?: Prisma.StaffBankAccountWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StaffBankAccountScalarFieldEnum | Prisma.StaffBankAccountScalarFieldEnum[]
}

/**
 * Staff.teacherSubjectAssignments
 */
export type Staff$teacherSubjectAssignmentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TeacherSubjectAssignment
   */
  select?: Prisma.TeacherSubjectAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TeacherSubjectAssignment
   */
  omit?: Prisma.TeacherSubjectAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TeacherSubjectAssignmentInclude<ExtArgs> | null
  where?: Prisma.TeacherSubjectAssignmentWhereInput
  orderBy?: Prisma.TeacherSubjectAssignmentOrderByWithRelationInput | Prisma.TeacherSubjectAssignmentOrderByWithRelationInput[]
  cursor?: Prisma.TeacherSubjectAssignmentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TeacherSubjectAssignmentScalarFieldEnum | Prisma.TeacherSubjectAssignmentScalarFieldEnum[]
}

/**
 * Staff without action
 */
export type StaffDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Staff
   */
  select?: Prisma.StaffSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Staff
   */
  omit?: Prisma.StaffOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StaffInclude<ExtArgs> | null
}
