
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `TimetablePeriod` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model TimetablePeriod
 * 
 */
export type TimetablePeriodModel = runtime.Types.Result.DefaultSelection<Prisma.$TimetablePeriodPayload>

export type AggregateTimetablePeriod = {
  _count: TimetablePeriodCountAggregateOutputType | null
  _min: TimetablePeriodMinAggregateOutputType | null
  _max: TimetablePeriodMaxAggregateOutputType | null
}

export type TimetablePeriodMinAggregateOutputType = {
  id: string | null
  startMinute: string | null
  endMinute: string | null
  schoolId: string | null
  classId: string | null
}

export type TimetablePeriodMaxAggregateOutputType = {
  id: string | null
  startMinute: string | null
  endMinute: string | null
  schoolId: string | null
  classId: string | null
}

export type TimetablePeriodCountAggregateOutputType = {
  id: number
  startMinute: number
  endMinute: number
  schoolId: number
  classId: number
  _all: number
}


export type TimetablePeriodMinAggregateInputType = {
  id?: true
  startMinute?: true
  endMinute?: true
  schoolId?: true
  classId?: true
}

export type TimetablePeriodMaxAggregateInputType = {
  id?: true
  startMinute?: true
  endMinute?: true
  schoolId?: true
  classId?: true
}

export type TimetablePeriodCountAggregateInputType = {
  id?: true
  startMinute?: true
  endMinute?: true
  schoolId?: true
  classId?: true
  _all?: true
}

export type TimetablePeriodAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TimetablePeriod to aggregate.
   */
  where?: Prisma.TimetablePeriodWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TimetablePeriods to fetch.
   */
  orderBy?: Prisma.TimetablePeriodOrderByWithRelationInput | Prisma.TimetablePeriodOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TimetablePeriodWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TimetablePeriods from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TimetablePeriods.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TimetablePeriods
  **/
  _count?: true | TimetablePeriodCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TimetablePeriodMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TimetablePeriodMaxAggregateInputType
}

export type GetTimetablePeriodAggregateType<T extends TimetablePeriodAggregateArgs> = {
      [P in keyof T & keyof AggregateTimetablePeriod]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTimetablePeriod[P]>
    : Prisma.GetScalarType<T[P], AggregateTimetablePeriod[P]>
}




export type TimetablePeriodGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TimetablePeriodWhereInput
  orderBy?: Prisma.TimetablePeriodOrderByWithAggregationInput | Prisma.TimetablePeriodOrderByWithAggregationInput[]
  by: Prisma.TimetablePeriodScalarFieldEnum[] | Prisma.TimetablePeriodScalarFieldEnum
  having?: Prisma.TimetablePeriodScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TimetablePeriodCountAggregateInputType | true
  _min?: TimetablePeriodMinAggregateInputType
  _max?: TimetablePeriodMaxAggregateInputType
}

export type TimetablePeriodGroupByOutputType = {
  id: string
  startMinute: string
  endMinute: string
  schoolId: string
  classId: string | null
  _count: TimetablePeriodCountAggregateOutputType | null
  _min: TimetablePeriodMinAggregateOutputType | null
  _max: TimetablePeriodMaxAggregateOutputType | null
}

type GetTimetablePeriodGroupByPayload<T extends TimetablePeriodGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TimetablePeriodGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TimetablePeriodGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TimetablePeriodGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TimetablePeriodGroupByOutputType[P]>
      }
    >
  >



export type TimetablePeriodWhereInput = {
  AND?: Prisma.TimetablePeriodWhereInput | Prisma.TimetablePeriodWhereInput[]
  OR?: Prisma.TimetablePeriodWhereInput[]
  NOT?: Prisma.TimetablePeriodWhereInput | Prisma.TimetablePeriodWhereInput[]
  id?: Prisma.StringFilter<"TimetablePeriod"> | string
  startMinute?: Prisma.StringFilter<"TimetablePeriod"> | string
  endMinute?: Prisma.StringFilter<"TimetablePeriod"> | string
  schoolId?: Prisma.StringFilter<"TimetablePeriod"> | string
  classId?: Prisma.StringNullableFilter<"TimetablePeriod"> | string | null
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  class?: Prisma.XOR<Prisma.ClassNullableScalarRelationFilter, Prisma.ClassWhereInput> | null
  periodSlots?: Prisma.PeriodSlotListRelationFilter
}

export type TimetablePeriodOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  startMinute?: Prisma.SortOrder
  endMinute?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrderInput | Prisma.SortOrder
  school?: Prisma.SchoolOrderByWithRelationInput
  class?: Prisma.ClassOrderByWithRelationInput
  periodSlots?: Prisma.PeriodSlotOrderByRelationAggregateInput
}

export type TimetablePeriodWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  schoolId_startMinute?: Prisma.TimetablePeriodSchoolIdStartMinuteCompoundUniqueInput
  AND?: Prisma.TimetablePeriodWhereInput | Prisma.TimetablePeriodWhereInput[]
  OR?: Prisma.TimetablePeriodWhereInput[]
  NOT?: Prisma.TimetablePeriodWhereInput | Prisma.TimetablePeriodWhereInput[]
  startMinute?: Prisma.StringFilter<"TimetablePeriod"> | string
  endMinute?: Prisma.StringFilter<"TimetablePeriod"> | string
  schoolId?: Prisma.StringFilter<"TimetablePeriod"> | string
  classId?: Prisma.StringNullableFilter<"TimetablePeriod"> | string | null
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  class?: Prisma.XOR<Prisma.ClassNullableScalarRelationFilter, Prisma.ClassWhereInput> | null
  periodSlots?: Prisma.PeriodSlotListRelationFilter
}, "id" | "schoolId_startMinute">

export type TimetablePeriodOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  startMinute?: Prisma.SortOrder
  endMinute?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.TimetablePeriodCountOrderByAggregateInput
  _max?: Prisma.TimetablePeriodMaxOrderByAggregateInput
  _min?: Prisma.TimetablePeriodMinOrderByAggregateInput
}

export type TimetablePeriodScalarWhereWithAggregatesInput = {
  AND?: Prisma.TimetablePeriodScalarWhereWithAggregatesInput | Prisma.TimetablePeriodScalarWhereWithAggregatesInput[]
  OR?: Prisma.TimetablePeriodScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TimetablePeriodScalarWhereWithAggregatesInput | Prisma.TimetablePeriodScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"TimetablePeriod"> | string
  startMinute?: Prisma.StringWithAggregatesFilter<"TimetablePeriod"> | string
  endMinute?: Prisma.StringWithAggregatesFilter<"TimetablePeriod"> | string
  schoolId?: Prisma.StringWithAggregatesFilter<"TimetablePeriod"> | string
  classId?: Prisma.StringNullableWithAggregatesFilter<"TimetablePeriod"> | string | null
}

export type TimetablePeriodCreateInput = {
  id?: string
  startMinute: string
  endMinute: string
  school: Prisma.SchoolCreateNestedOneWithoutTimetablePeriodsInput
  class?: Prisma.ClassCreateNestedOneWithoutTimetablePeriodsInput
  periodSlots?: Prisma.PeriodSlotCreateNestedManyWithoutPeriodInput
}

export type TimetablePeriodUncheckedCreateInput = {
  id?: string
  startMinute: string
  endMinute: string
  schoolId: string
  classId?: string | null
  periodSlots?: Prisma.PeriodSlotUncheckedCreateNestedManyWithoutPeriodInput
}

export type TimetablePeriodUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutTimetablePeriodsNestedInput
  class?: Prisma.ClassUpdateOneWithoutTimetablePeriodsNestedInput
  periodSlots?: Prisma.PeriodSlotUpdateManyWithoutPeriodNestedInput
}

export type TimetablePeriodUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  periodSlots?: Prisma.PeriodSlotUncheckedUpdateManyWithoutPeriodNestedInput
}

export type TimetablePeriodCreateManyInput = {
  id?: string
  startMinute: string
  endMinute: string
  schoolId: string
  classId?: string | null
}

export type TimetablePeriodUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
}

export type TimetablePeriodUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TimetablePeriodListRelationFilter = {
  every?: Prisma.TimetablePeriodWhereInput
  some?: Prisma.TimetablePeriodWhereInput
  none?: Prisma.TimetablePeriodWhereInput
}

export type TimetablePeriodOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TimetablePeriodSchoolIdStartMinuteCompoundUniqueInput = {
  schoolId: string
  startMinute: string
}

export type TimetablePeriodCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startMinute?: Prisma.SortOrder
  endMinute?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
}

export type TimetablePeriodMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startMinute?: Prisma.SortOrder
  endMinute?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
}

export type TimetablePeriodMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startMinute?: Prisma.SortOrder
  endMinute?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
}

export type TimetablePeriodScalarRelationFilter = {
  is?: Prisma.TimetablePeriodWhereInput
  isNot?: Prisma.TimetablePeriodWhereInput
}

export type TimetablePeriodCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutSchoolInput, Prisma.TimetablePeriodUncheckedCreateWithoutSchoolInput> | Prisma.TimetablePeriodCreateWithoutSchoolInput[] | Prisma.TimetablePeriodUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.TimetablePeriodCreateOrConnectWithoutSchoolInput | Prisma.TimetablePeriodCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.TimetablePeriodCreateManySchoolInputEnvelope
  connect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
}

export type TimetablePeriodUncheckedCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutSchoolInput, Prisma.TimetablePeriodUncheckedCreateWithoutSchoolInput> | Prisma.TimetablePeriodCreateWithoutSchoolInput[] | Prisma.TimetablePeriodUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.TimetablePeriodCreateOrConnectWithoutSchoolInput | Prisma.TimetablePeriodCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.TimetablePeriodCreateManySchoolInputEnvelope
  connect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
}

export type TimetablePeriodUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutSchoolInput, Prisma.TimetablePeriodUncheckedCreateWithoutSchoolInput> | Prisma.TimetablePeriodCreateWithoutSchoolInput[] | Prisma.TimetablePeriodUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.TimetablePeriodCreateOrConnectWithoutSchoolInput | Prisma.TimetablePeriodCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.TimetablePeriodUpsertWithWhereUniqueWithoutSchoolInput | Prisma.TimetablePeriodUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.TimetablePeriodCreateManySchoolInputEnvelope
  set?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  disconnect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  delete?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  connect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  update?: Prisma.TimetablePeriodUpdateWithWhereUniqueWithoutSchoolInput | Prisma.TimetablePeriodUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.TimetablePeriodUpdateManyWithWhereWithoutSchoolInput | Prisma.TimetablePeriodUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.TimetablePeriodScalarWhereInput | Prisma.TimetablePeriodScalarWhereInput[]
}

export type TimetablePeriodUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutSchoolInput, Prisma.TimetablePeriodUncheckedCreateWithoutSchoolInput> | Prisma.TimetablePeriodCreateWithoutSchoolInput[] | Prisma.TimetablePeriodUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.TimetablePeriodCreateOrConnectWithoutSchoolInput | Prisma.TimetablePeriodCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.TimetablePeriodUpsertWithWhereUniqueWithoutSchoolInput | Prisma.TimetablePeriodUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.TimetablePeriodCreateManySchoolInputEnvelope
  set?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  disconnect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  delete?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  connect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  update?: Prisma.TimetablePeriodUpdateWithWhereUniqueWithoutSchoolInput | Prisma.TimetablePeriodUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.TimetablePeriodUpdateManyWithWhereWithoutSchoolInput | Prisma.TimetablePeriodUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.TimetablePeriodScalarWhereInput | Prisma.TimetablePeriodScalarWhereInput[]
}

export type TimetablePeriodCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutClassInput, Prisma.TimetablePeriodUncheckedCreateWithoutClassInput> | Prisma.TimetablePeriodCreateWithoutClassInput[] | Prisma.TimetablePeriodUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.TimetablePeriodCreateOrConnectWithoutClassInput | Prisma.TimetablePeriodCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.TimetablePeriodCreateManyClassInputEnvelope
  connect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
}

export type TimetablePeriodUncheckedCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutClassInput, Prisma.TimetablePeriodUncheckedCreateWithoutClassInput> | Prisma.TimetablePeriodCreateWithoutClassInput[] | Prisma.TimetablePeriodUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.TimetablePeriodCreateOrConnectWithoutClassInput | Prisma.TimetablePeriodCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.TimetablePeriodCreateManyClassInputEnvelope
  connect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
}

export type TimetablePeriodUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutClassInput, Prisma.TimetablePeriodUncheckedCreateWithoutClassInput> | Prisma.TimetablePeriodCreateWithoutClassInput[] | Prisma.TimetablePeriodUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.TimetablePeriodCreateOrConnectWithoutClassInput | Prisma.TimetablePeriodCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.TimetablePeriodUpsertWithWhereUniqueWithoutClassInput | Prisma.TimetablePeriodUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.TimetablePeriodCreateManyClassInputEnvelope
  set?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  disconnect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  delete?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  connect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  update?: Prisma.TimetablePeriodUpdateWithWhereUniqueWithoutClassInput | Prisma.TimetablePeriodUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.TimetablePeriodUpdateManyWithWhereWithoutClassInput | Prisma.TimetablePeriodUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.TimetablePeriodScalarWhereInput | Prisma.TimetablePeriodScalarWhereInput[]
}

export type TimetablePeriodUncheckedUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutClassInput, Prisma.TimetablePeriodUncheckedCreateWithoutClassInput> | Prisma.TimetablePeriodCreateWithoutClassInput[] | Prisma.TimetablePeriodUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.TimetablePeriodCreateOrConnectWithoutClassInput | Prisma.TimetablePeriodCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.TimetablePeriodUpsertWithWhereUniqueWithoutClassInput | Prisma.TimetablePeriodUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.TimetablePeriodCreateManyClassInputEnvelope
  set?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  disconnect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  delete?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  connect?: Prisma.TimetablePeriodWhereUniqueInput | Prisma.TimetablePeriodWhereUniqueInput[]
  update?: Prisma.TimetablePeriodUpdateWithWhereUniqueWithoutClassInput | Prisma.TimetablePeriodUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.TimetablePeriodUpdateManyWithWhereWithoutClassInput | Prisma.TimetablePeriodUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.TimetablePeriodScalarWhereInput | Prisma.TimetablePeriodScalarWhereInput[]
}

export type TimetablePeriodCreateNestedOneWithoutPeriodSlotsInput = {
  create?: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutPeriodSlotsInput, Prisma.TimetablePeriodUncheckedCreateWithoutPeriodSlotsInput>
  connectOrCreate?: Prisma.TimetablePeriodCreateOrConnectWithoutPeriodSlotsInput
  connect?: Prisma.TimetablePeriodWhereUniqueInput
}

export type TimetablePeriodUpdateOneRequiredWithoutPeriodSlotsNestedInput = {
  create?: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutPeriodSlotsInput, Prisma.TimetablePeriodUncheckedCreateWithoutPeriodSlotsInput>
  connectOrCreate?: Prisma.TimetablePeriodCreateOrConnectWithoutPeriodSlotsInput
  upsert?: Prisma.TimetablePeriodUpsertWithoutPeriodSlotsInput
  connect?: Prisma.TimetablePeriodWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TimetablePeriodUpdateToOneWithWhereWithoutPeriodSlotsInput, Prisma.TimetablePeriodUpdateWithoutPeriodSlotsInput>, Prisma.TimetablePeriodUncheckedUpdateWithoutPeriodSlotsInput>
}

export type TimetablePeriodCreateWithoutSchoolInput = {
  id?: string
  startMinute: string
  endMinute: string
  class?: Prisma.ClassCreateNestedOneWithoutTimetablePeriodsInput
  periodSlots?: Prisma.PeriodSlotCreateNestedManyWithoutPeriodInput
}

export type TimetablePeriodUncheckedCreateWithoutSchoolInput = {
  id?: string
  startMinute: string
  endMinute: string
  classId?: string | null
  periodSlots?: Prisma.PeriodSlotUncheckedCreateNestedManyWithoutPeriodInput
}

export type TimetablePeriodCreateOrConnectWithoutSchoolInput = {
  where: Prisma.TimetablePeriodWhereUniqueInput
  create: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutSchoolInput, Prisma.TimetablePeriodUncheckedCreateWithoutSchoolInput>
}

export type TimetablePeriodCreateManySchoolInputEnvelope = {
  data: Prisma.TimetablePeriodCreateManySchoolInput | Prisma.TimetablePeriodCreateManySchoolInput[]
  skipDuplicates?: boolean
}

export type TimetablePeriodUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.TimetablePeriodWhereUniqueInput
  update: Prisma.XOR<Prisma.TimetablePeriodUpdateWithoutSchoolInput, Prisma.TimetablePeriodUncheckedUpdateWithoutSchoolInput>
  create: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutSchoolInput, Prisma.TimetablePeriodUncheckedCreateWithoutSchoolInput>
}

export type TimetablePeriodUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.TimetablePeriodWhereUniqueInput
  data: Prisma.XOR<Prisma.TimetablePeriodUpdateWithoutSchoolInput, Prisma.TimetablePeriodUncheckedUpdateWithoutSchoolInput>
}

export type TimetablePeriodUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.TimetablePeriodScalarWhereInput
  data: Prisma.XOR<Prisma.TimetablePeriodUpdateManyMutationInput, Prisma.TimetablePeriodUncheckedUpdateManyWithoutSchoolInput>
}

export type TimetablePeriodScalarWhereInput = {
  AND?: Prisma.TimetablePeriodScalarWhereInput | Prisma.TimetablePeriodScalarWhereInput[]
  OR?: Prisma.TimetablePeriodScalarWhereInput[]
  NOT?: Prisma.TimetablePeriodScalarWhereInput | Prisma.TimetablePeriodScalarWhereInput[]
  id?: Prisma.StringFilter<"TimetablePeriod"> | string
  startMinute?: Prisma.StringFilter<"TimetablePeriod"> | string
  endMinute?: Prisma.StringFilter<"TimetablePeriod"> | string
  schoolId?: Prisma.StringFilter<"TimetablePeriod"> | string
  classId?: Prisma.StringNullableFilter<"TimetablePeriod"> | string | null
}

export type TimetablePeriodCreateWithoutClassInput = {
  id?: string
  startMinute: string
  endMinute: string
  school: Prisma.SchoolCreateNestedOneWithoutTimetablePeriodsInput
  periodSlots?: Prisma.PeriodSlotCreateNestedManyWithoutPeriodInput
}

export type TimetablePeriodUncheckedCreateWithoutClassInput = {
  id?: string
  startMinute: string
  endMinute: string
  schoolId: string
  periodSlots?: Prisma.PeriodSlotUncheckedCreateNestedManyWithoutPeriodInput
}

export type TimetablePeriodCreateOrConnectWithoutClassInput = {
  where: Prisma.TimetablePeriodWhereUniqueInput
  create: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutClassInput, Prisma.TimetablePeriodUncheckedCreateWithoutClassInput>
}

export type TimetablePeriodCreateManyClassInputEnvelope = {
  data: Prisma.TimetablePeriodCreateManyClassInput | Prisma.TimetablePeriodCreateManyClassInput[]
  skipDuplicates?: boolean
}

export type TimetablePeriodUpsertWithWhereUniqueWithoutClassInput = {
  where: Prisma.TimetablePeriodWhereUniqueInput
  update: Prisma.XOR<Prisma.TimetablePeriodUpdateWithoutClassInput, Prisma.TimetablePeriodUncheckedUpdateWithoutClassInput>
  create: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutClassInput, Prisma.TimetablePeriodUncheckedCreateWithoutClassInput>
}

export type TimetablePeriodUpdateWithWhereUniqueWithoutClassInput = {
  where: Prisma.TimetablePeriodWhereUniqueInput
  data: Prisma.XOR<Prisma.TimetablePeriodUpdateWithoutClassInput, Prisma.TimetablePeriodUncheckedUpdateWithoutClassInput>
}

export type TimetablePeriodUpdateManyWithWhereWithoutClassInput = {
  where: Prisma.TimetablePeriodScalarWhereInput
  data: Prisma.XOR<Prisma.TimetablePeriodUpdateManyMutationInput, Prisma.TimetablePeriodUncheckedUpdateManyWithoutClassInput>
}

export type TimetablePeriodCreateWithoutPeriodSlotsInput = {
  id?: string
  startMinute: string
  endMinute: string
  school: Prisma.SchoolCreateNestedOneWithoutTimetablePeriodsInput
  class?: Prisma.ClassCreateNestedOneWithoutTimetablePeriodsInput
}

export type TimetablePeriodUncheckedCreateWithoutPeriodSlotsInput = {
  id?: string
  startMinute: string
  endMinute: string
  schoolId: string
  classId?: string | null
}

export type TimetablePeriodCreateOrConnectWithoutPeriodSlotsInput = {
  where: Prisma.TimetablePeriodWhereUniqueInput
  create: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutPeriodSlotsInput, Prisma.TimetablePeriodUncheckedCreateWithoutPeriodSlotsInput>
}

export type TimetablePeriodUpsertWithoutPeriodSlotsInput = {
  update: Prisma.XOR<Prisma.TimetablePeriodUpdateWithoutPeriodSlotsInput, Prisma.TimetablePeriodUncheckedUpdateWithoutPeriodSlotsInput>
  create: Prisma.XOR<Prisma.TimetablePeriodCreateWithoutPeriodSlotsInput, Prisma.TimetablePeriodUncheckedCreateWithoutPeriodSlotsInput>
  where?: Prisma.TimetablePeriodWhereInput
}

export type TimetablePeriodUpdateToOneWithWhereWithoutPeriodSlotsInput = {
  where?: Prisma.TimetablePeriodWhereInput
  data: Prisma.XOR<Prisma.TimetablePeriodUpdateWithoutPeriodSlotsInput, Prisma.TimetablePeriodUncheckedUpdateWithoutPeriodSlotsInput>
}

export type TimetablePeriodUpdateWithoutPeriodSlotsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutTimetablePeriodsNestedInput
  class?: Prisma.ClassUpdateOneWithoutTimetablePeriodsNestedInput
}

export type TimetablePeriodUncheckedUpdateWithoutPeriodSlotsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TimetablePeriodCreateManySchoolInput = {
  id?: string
  startMinute: string
  endMinute: string
  classId?: string | null
}

export type TimetablePeriodUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  class?: Prisma.ClassUpdateOneWithoutTimetablePeriodsNestedInput
  periodSlots?: Prisma.PeriodSlotUpdateManyWithoutPeriodNestedInput
}

export type TimetablePeriodUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  periodSlots?: Prisma.PeriodSlotUncheckedUpdateManyWithoutPeriodNestedInput
}

export type TimetablePeriodUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type TimetablePeriodCreateManyClassInput = {
  id?: string
  startMinute: string
  endMinute: string
  schoolId: string
}

export type TimetablePeriodUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutTimetablePeriodsNestedInput
  periodSlots?: Prisma.PeriodSlotUpdateManyWithoutPeriodNestedInput
}

export type TimetablePeriodUncheckedUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  periodSlots?: Prisma.PeriodSlotUncheckedUpdateManyWithoutPeriodNestedInput
}

export type TimetablePeriodUncheckedUpdateManyWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startMinute?: Prisma.StringFieldUpdateOperationsInput | string
  endMinute?: Prisma.StringFieldUpdateOperationsInput | string
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
}


/**
 * Count Type TimetablePeriodCountOutputType
 */

export type TimetablePeriodCountOutputType = {
  periodSlots: number
}

export type TimetablePeriodCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  periodSlots?: boolean | TimetablePeriodCountOutputTypeCountPeriodSlotsArgs
}

/**
 * TimetablePeriodCountOutputType without action
 */
export type TimetablePeriodCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriodCountOutputType
   */
  select?: Prisma.TimetablePeriodCountOutputTypeSelect<ExtArgs> | null
}

/**
 * TimetablePeriodCountOutputType without action
 */
export type TimetablePeriodCountOutputTypeCountPeriodSlotsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PeriodSlotWhereInput
}


export type TimetablePeriodSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startMinute?: boolean
  endMinute?: boolean
  schoolId?: boolean
  classId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.TimetablePeriod$classArgs<ExtArgs>
  periodSlots?: boolean | Prisma.TimetablePeriod$periodSlotsArgs<ExtArgs>
  _count?: boolean | Prisma.TimetablePeriodCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["timetablePeriod"]>

export type TimetablePeriodSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startMinute?: boolean
  endMinute?: boolean
  schoolId?: boolean
  classId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.TimetablePeriod$classArgs<ExtArgs>
}, ExtArgs["result"]["timetablePeriod"]>

export type TimetablePeriodSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startMinute?: boolean
  endMinute?: boolean
  schoolId?: boolean
  classId?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.TimetablePeriod$classArgs<ExtArgs>
}, ExtArgs["result"]["timetablePeriod"]>

export type TimetablePeriodSelectScalar = {
  id?: boolean
  startMinute?: boolean
  endMinute?: boolean
  schoolId?: boolean
  classId?: boolean
}

export type TimetablePeriodOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "startMinute" | "endMinute" | "schoolId" | "classId", ExtArgs["result"]["timetablePeriod"]>
export type TimetablePeriodInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.TimetablePeriod$classArgs<ExtArgs>
  periodSlots?: boolean | Prisma.TimetablePeriod$periodSlotsArgs<ExtArgs>
  _count?: boolean | Prisma.TimetablePeriodCountOutputTypeDefaultArgs<ExtArgs>
}
export type TimetablePeriodIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.TimetablePeriod$classArgs<ExtArgs>
}
export type TimetablePeriodIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.TimetablePeriod$classArgs<ExtArgs>
}

export type $TimetablePeriodPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TimetablePeriod"
  objects: {
    school: Prisma.$SchoolPayload<ExtArgs>
    class: Prisma.$ClassPayload<ExtArgs> | null
    periodSlots: Prisma.$PeriodSlotPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    startMinute: string
    endMinute: string
    schoolId: string
    classId: string | null
  }, ExtArgs["result"]["timetablePeriod"]>
  composites: {}
}

export type TimetablePeriodGetPayload<S extends boolean | null | undefined | TimetablePeriodDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload, S>

export type TimetablePeriodCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TimetablePeriodFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TimetablePeriodCountAggregateInputType | true
  }

export interface TimetablePeriodDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TimetablePeriod'], meta: { name: 'TimetablePeriod' } }
  /**
   * Find zero or one TimetablePeriod that matches the filter.
   * @param {TimetablePeriodFindUniqueArgs} args - Arguments to find a TimetablePeriod
   * @example
   * // Get one TimetablePeriod
   * const timetablePeriod = await prisma.timetablePeriod.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TimetablePeriodFindUniqueArgs>(args: Prisma.SelectSubset<T, TimetablePeriodFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TimetablePeriodClient<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TimetablePeriod that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TimetablePeriodFindUniqueOrThrowArgs} args - Arguments to find a TimetablePeriod
   * @example
   * // Get one TimetablePeriod
   * const timetablePeriod = await prisma.timetablePeriod.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TimetablePeriodFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TimetablePeriodFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TimetablePeriodClient<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TimetablePeriod that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimetablePeriodFindFirstArgs} args - Arguments to find a TimetablePeriod
   * @example
   * // Get one TimetablePeriod
   * const timetablePeriod = await prisma.timetablePeriod.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TimetablePeriodFindFirstArgs>(args?: Prisma.SelectSubset<T, TimetablePeriodFindFirstArgs<ExtArgs>>): Prisma.Prisma__TimetablePeriodClient<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TimetablePeriod that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimetablePeriodFindFirstOrThrowArgs} args - Arguments to find a TimetablePeriod
   * @example
   * // Get one TimetablePeriod
   * const timetablePeriod = await prisma.timetablePeriod.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TimetablePeriodFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TimetablePeriodFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TimetablePeriodClient<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TimetablePeriods that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimetablePeriodFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TimetablePeriods
   * const timetablePeriods = await prisma.timetablePeriod.findMany()
   * 
   * // Get first 10 TimetablePeriods
   * const timetablePeriods = await prisma.timetablePeriod.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const timetablePeriodWithIdOnly = await prisma.timetablePeriod.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TimetablePeriodFindManyArgs>(args?: Prisma.SelectSubset<T, TimetablePeriodFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TimetablePeriod.
   * @param {TimetablePeriodCreateArgs} args - Arguments to create a TimetablePeriod.
   * @example
   * // Create one TimetablePeriod
   * const TimetablePeriod = await prisma.timetablePeriod.create({
   *   data: {
   *     // ... data to create a TimetablePeriod
   *   }
   * })
   * 
   */
  create<T extends TimetablePeriodCreateArgs>(args: Prisma.SelectSubset<T, TimetablePeriodCreateArgs<ExtArgs>>): Prisma.Prisma__TimetablePeriodClient<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TimetablePeriods.
   * @param {TimetablePeriodCreateManyArgs} args - Arguments to create many TimetablePeriods.
   * @example
   * // Create many TimetablePeriods
   * const timetablePeriod = await prisma.timetablePeriod.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TimetablePeriodCreateManyArgs>(args?: Prisma.SelectSubset<T, TimetablePeriodCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many TimetablePeriods and returns the data saved in the database.
   * @param {TimetablePeriodCreateManyAndReturnArgs} args - Arguments to create many TimetablePeriods.
   * @example
   * // Create many TimetablePeriods
   * const timetablePeriod = await prisma.timetablePeriod.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many TimetablePeriods and only return the `id`
   * const timetablePeriodWithIdOnly = await prisma.timetablePeriod.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TimetablePeriodCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TimetablePeriodCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a TimetablePeriod.
   * @param {TimetablePeriodDeleteArgs} args - Arguments to delete one TimetablePeriod.
   * @example
   * // Delete one TimetablePeriod
   * const TimetablePeriod = await prisma.timetablePeriod.delete({
   *   where: {
   *     // ... filter to delete one TimetablePeriod
   *   }
   * })
   * 
   */
  delete<T extends TimetablePeriodDeleteArgs>(args: Prisma.SelectSubset<T, TimetablePeriodDeleteArgs<ExtArgs>>): Prisma.Prisma__TimetablePeriodClient<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TimetablePeriod.
   * @param {TimetablePeriodUpdateArgs} args - Arguments to update one TimetablePeriod.
   * @example
   * // Update one TimetablePeriod
   * const timetablePeriod = await prisma.timetablePeriod.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TimetablePeriodUpdateArgs>(args: Prisma.SelectSubset<T, TimetablePeriodUpdateArgs<ExtArgs>>): Prisma.Prisma__TimetablePeriodClient<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TimetablePeriods.
   * @param {TimetablePeriodDeleteManyArgs} args - Arguments to filter TimetablePeriods to delete.
   * @example
   * // Delete a few TimetablePeriods
   * const { count } = await prisma.timetablePeriod.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TimetablePeriodDeleteManyArgs>(args?: Prisma.SelectSubset<T, TimetablePeriodDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TimetablePeriods.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimetablePeriodUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TimetablePeriods
   * const timetablePeriod = await prisma.timetablePeriod.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TimetablePeriodUpdateManyArgs>(args: Prisma.SelectSubset<T, TimetablePeriodUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TimetablePeriods and returns the data updated in the database.
   * @param {TimetablePeriodUpdateManyAndReturnArgs} args - Arguments to update many TimetablePeriods.
   * @example
   * // Update many TimetablePeriods
   * const timetablePeriod = await prisma.timetablePeriod.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more TimetablePeriods and only return the `id`
   * const timetablePeriodWithIdOnly = await prisma.timetablePeriod.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TimetablePeriodUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TimetablePeriodUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one TimetablePeriod.
   * @param {TimetablePeriodUpsertArgs} args - Arguments to update or create a TimetablePeriod.
   * @example
   * // Update or create a TimetablePeriod
   * const timetablePeriod = await prisma.timetablePeriod.upsert({
   *   create: {
   *     // ... data to create a TimetablePeriod
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TimetablePeriod we want to update
   *   }
   * })
   */
  upsert<T extends TimetablePeriodUpsertArgs>(args: Prisma.SelectSubset<T, TimetablePeriodUpsertArgs<ExtArgs>>): Prisma.Prisma__TimetablePeriodClient<runtime.Types.Result.GetResult<Prisma.$TimetablePeriodPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TimetablePeriods.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimetablePeriodCountArgs} args - Arguments to filter TimetablePeriods to count.
   * @example
   * // Count the number of TimetablePeriods
   * const count = await prisma.timetablePeriod.count({
   *   where: {
   *     // ... the filter for the TimetablePeriods we want to count
   *   }
   * })
  **/
  count<T extends TimetablePeriodCountArgs>(
    args?: Prisma.Subset<T, TimetablePeriodCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TimetablePeriodCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TimetablePeriod.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimetablePeriodAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TimetablePeriodAggregateArgs>(args: Prisma.Subset<T, TimetablePeriodAggregateArgs>): Prisma.PrismaPromise<GetTimetablePeriodAggregateType<T>>

  /**
   * Group by TimetablePeriod.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimetablePeriodGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TimetablePeriodGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TimetablePeriodGroupByArgs['orderBy'] }
      : { orderBy?: TimetablePeriodGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TimetablePeriodGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTimetablePeriodGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TimetablePeriod model
 */
readonly fields: TimetablePeriodFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TimetablePeriod.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TimetablePeriodClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>): Prisma.Prisma__SchoolClient<runtime.Types.Result.GetResult<Prisma.$SchoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  class<T extends Prisma.TimetablePeriod$classArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TimetablePeriod$classArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  periodSlots<T extends Prisma.TimetablePeriod$periodSlotsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TimetablePeriod$periodSlotsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PeriodSlotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TimetablePeriod model
 */
export interface TimetablePeriodFieldRefs {
  readonly id: Prisma.FieldRef<"TimetablePeriod", 'String'>
  readonly startMinute: Prisma.FieldRef<"TimetablePeriod", 'String'>
  readonly endMinute: Prisma.FieldRef<"TimetablePeriod", 'String'>
  readonly schoolId: Prisma.FieldRef<"TimetablePeriod", 'String'>
  readonly classId: Prisma.FieldRef<"TimetablePeriod", 'String'>
}
    

// Custom InputTypes
/**
 * TimetablePeriod findUnique
 */
export type TimetablePeriodFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
  /**
   * Filter, which TimetablePeriod to fetch.
   */
  where: Prisma.TimetablePeriodWhereUniqueInput
}

/**
 * TimetablePeriod findUniqueOrThrow
 */
export type TimetablePeriodFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
  /**
   * Filter, which TimetablePeriod to fetch.
   */
  where: Prisma.TimetablePeriodWhereUniqueInput
}

/**
 * TimetablePeriod findFirst
 */
export type TimetablePeriodFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
  /**
   * Filter, which TimetablePeriod to fetch.
   */
  where?: Prisma.TimetablePeriodWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TimetablePeriods to fetch.
   */
  orderBy?: Prisma.TimetablePeriodOrderByWithRelationInput | Prisma.TimetablePeriodOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TimetablePeriods.
   */
  cursor?: Prisma.TimetablePeriodWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TimetablePeriods from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TimetablePeriods.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TimetablePeriods.
   */
  distinct?: Prisma.TimetablePeriodScalarFieldEnum | Prisma.TimetablePeriodScalarFieldEnum[]
}

/**
 * TimetablePeriod findFirstOrThrow
 */
export type TimetablePeriodFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
  /**
   * Filter, which TimetablePeriod to fetch.
   */
  where?: Prisma.TimetablePeriodWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TimetablePeriods to fetch.
   */
  orderBy?: Prisma.TimetablePeriodOrderByWithRelationInput | Prisma.TimetablePeriodOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TimetablePeriods.
   */
  cursor?: Prisma.TimetablePeriodWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TimetablePeriods from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TimetablePeriods.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TimetablePeriods.
   */
  distinct?: Prisma.TimetablePeriodScalarFieldEnum | Prisma.TimetablePeriodScalarFieldEnum[]
}

/**
 * TimetablePeriod findMany
 */
export type TimetablePeriodFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
  /**
   * Filter, which TimetablePeriods to fetch.
   */
  where?: Prisma.TimetablePeriodWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TimetablePeriods to fetch.
   */
  orderBy?: Prisma.TimetablePeriodOrderByWithRelationInput | Prisma.TimetablePeriodOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TimetablePeriods.
   */
  cursor?: Prisma.TimetablePeriodWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TimetablePeriods from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TimetablePeriods.
   */
  skip?: number
  distinct?: Prisma.TimetablePeriodScalarFieldEnum | Prisma.TimetablePeriodScalarFieldEnum[]
}

/**
 * TimetablePeriod create
 */
export type TimetablePeriodCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
  /**
   * The data needed to create a TimetablePeriod.
   */
  data: Prisma.XOR<Prisma.TimetablePeriodCreateInput, Prisma.TimetablePeriodUncheckedCreateInput>
}

/**
 * TimetablePeriod createMany
 */
export type TimetablePeriodCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TimetablePeriods.
   */
  data: Prisma.TimetablePeriodCreateManyInput | Prisma.TimetablePeriodCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TimetablePeriod createManyAndReturn
 */
export type TimetablePeriodCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * The data used to create many TimetablePeriods.
   */
  data: Prisma.TimetablePeriodCreateManyInput | Prisma.TimetablePeriodCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * TimetablePeriod update
 */
export type TimetablePeriodUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
  /**
   * The data needed to update a TimetablePeriod.
   */
  data: Prisma.XOR<Prisma.TimetablePeriodUpdateInput, Prisma.TimetablePeriodUncheckedUpdateInput>
  /**
   * Choose, which TimetablePeriod to update.
   */
  where: Prisma.TimetablePeriodWhereUniqueInput
}

/**
 * TimetablePeriod updateMany
 */
export type TimetablePeriodUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TimetablePeriods.
   */
  data: Prisma.XOR<Prisma.TimetablePeriodUpdateManyMutationInput, Prisma.TimetablePeriodUncheckedUpdateManyInput>
  /**
   * Filter which TimetablePeriods to update
   */
  where?: Prisma.TimetablePeriodWhereInput
  /**
   * Limit how many TimetablePeriods to update.
   */
  limit?: number
}

/**
 * TimetablePeriod updateManyAndReturn
 */
export type TimetablePeriodUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * The data used to update TimetablePeriods.
   */
  data: Prisma.XOR<Prisma.TimetablePeriodUpdateManyMutationInput, Prisma.TimetablePeriodUncheckedUpdateManyInput>
  /**
   * Filter which TimetablePeriods to update
   */
  where?: Prisma.TimetablePeriodWhereInput
  /**
   * Limit how many TimetablePeriods to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * TimetablePeriod upsert
 */
export type TimetablePeriodUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
  /**
   * The filter to search for the TimetablePeriod to update in case it exists.
   */
  where: Prisma.TimetablePeriodWhereUniqueInput
  /**
   * In case the TimetablePeriod found by the `where` argument doesn't exist, create a new TimetablePeriod with this data.
   */
  create: Prisma.XOR<Prisma.TimetablePeriodCreateInput, Prisma.TimetablePeriodUncheckedCreateInput>
  /**
   * In case the TimetablePeriod was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TimetablePeriodUpdateInput, Prisma.TimetablePeriodUncheckedUpdateInput>
}

/**
 * TimetablePeriod delete
 */
export type TimetablePeriodDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
  /**
   * Filter which TimetablePeriod to delete.
   */
  where: Prisma.TimetablePeriodWhereUniqueInput
}

/**
 * TimetablePeriod deleteMany
 */
export type TimetablePeriodDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TimetablePeriods to delete
   */
  where?: Prisma.TimetablePeriodWhereInput
  /**
   * Limit how many TimetablePeriods to delete.
   */
  limit?: number
}

/**
 * TimetablePeriod.class
 */
export type TimetablePeriod$classArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Class
   */
  select?: Prisma.ClassSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Class
   */
  omit?: Prisma.ClassOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClassInclude<ExtArgs> | null
  where?: Prisma.ClassWhereInput
}

/**
 * TimetablePeriod.periodSlots
 */
export type TimetablePeriod$periodSlotsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PeriodSlot
   */
  select?: Prisma.PeriodSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PeriodSlot
   */
  omit?: Prisma.PeriodSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PeriodSlotInclude<ExtArgs> | null
  where?: Prisma.PeriodSlotWhereInput
  orderBy?: Prisma.PeriodSlotOrderByWithRelationInput | Prisma.PeriodSlotOrderByWithRelationInput[]
  cursor?: Prisma.PeriodSlotWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PeriodSlotScalarFieldEnum | Prisma.PeriodSlotScalarFieldEnum[]
}

/**
 * TimetablePeriod without action
 */
export type TimetablePeriodDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimetablePeriod
   */
  select?: Prisma.TimetablePeriodSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimetablePeriod
   */
  omit?: Prisma.TimetablePeriodOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimetablePeriodInclude<ExtArgs> | null
}
