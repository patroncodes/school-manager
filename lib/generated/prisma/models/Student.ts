
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Student` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Student
 * 
 */
export type StudentModel = runtime.Types.Result.DefaultSelection<Prisma.$StudentPayload>

export type AggregateStudent = {
  _count: StudentCountAggregateOutputType | null
  _min: StudentMinAggregateOutputType | null
  _max: StudentMaxAggregateOutputType | null
}

export type StudentMinAggregateOutputType = {
  id: string | null
  clerkUserId: string | null
  registrationNumber: string | null
  name: string | null
  surname: string | null
  address: string | null
  img: string | null
  birthday: Date | null
  medicalCondition: string | null
  sex: $Enums.UserSex | null
  admissionDate: Date | null
  activeState: $Enums.ActiveState | null
  activeStateReason: string | null
  schoolId: string | null
  classId: string | null
  clubId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type StudentMaxAggregateOutputType = {
  id: string | null
  clerkUserId: string | null
  registrationNumber: string | null
  name: string | null
  surname: string | null
  address: string | null
  img: string | null
  birthday: Date | null
  medicalCondition: string | null
  sex: $Enums.UserSex | null
  admissionDate: Date | null
  activeState: $Enums.ActiveState | null
  activeStateReason: string | null
  schoolId: string | null
  classId: string | null
  clubId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type StudentCountAggregateOutputType = {
  id: number
  clerkUserId: number
  registrationNumber: number
  name: number
  surname: number
  address: number
  img: number
  birthday: number
  medicalCondition: number
  sex: number
  admissionDate: number
  activeState: number
  activeStateReason: number
  schoolId: number
  classId: number
  clubId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type StudentMinAggregateInputType = {
  id?: true
  clerkUserId?: true
  registrationNumber?: true
  name?: true
  surname?: true
  address?: true
  img?: true
  birthday?: true
  medicalCondition?: true
  sex?: true
  admissionDate?: true
  activeState?: true
  activeStateReason?: true
  schoolId?: true
  classId?: true
  clubId?: true
  createdAt?: true
  updatedAt?: true
}

export type StudentMaxAggregateInputType = {
  id?: true
  clerkUserId?: true
  registrationNumber?: true
  name?: true
  surname?: true
  address?: true
  img?: true
  birthday?: true
  medicalCondition?: true
  sex?: true
  admissionDate?: true
  activeState?: true
  activeStateReason?: true
  schoolId?: true
  classId?: true
  clubId?: true
  createdAt?: true
  updatedAt?: true
}

export type StudentCountAggregateInputType = {
  id?: true
  clerkUserId?: true
  registrationNumber?: true
  name?: true
  surname?: true
  address?: true
  img?: true
  birthday?: true
  medicalCondition?: true
  sex?: true
  admissionDate?: true
  activeState?: true
  activeStateReason?: true
  schoolId?: true
  classId?: true
  clubId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type StudentAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Student to aggregate.
   */
  where?: Prisma.StudentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Students to fetch.
   */
  orderBy?: Prisma.StudentOrderByWithRelationInput | Prisma.StudentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.StudentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Students from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Students.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Students
  **/
  _count?: true | StudentCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: StudentMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: StudentMaxAggregateInputType
}

export type GetStudentAggregateType<T extends StudentAggregateArgs> = {
      [P in keyof T & keyof AggregateStudent]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateStudent[P]>
    : Prisma.GetScalarType<T[P], AggregateStudent[P]>
}




export type StudentGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentWhereInput
  orderBy?: Prisma.StudentOrderByWithAggregationInput | Prisma.StudentOrderByWithAggregationInput[]
  by: Prisma.StudentScalarFieldEnum[] | Prisma.StudentScalarFieldEnum
  having?: Prisma.StudentScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: StudentCountAggregateInputType | true
  _min?: StudentMinAggregateInputType
  _max?: StudentMaxAggregateInputType
}

export type StudentGroupByOutputType = {
  id: string
  clerkUserId: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img: string | null
  birthday: Date
  medicalCondition: string | null
  sex: $Enums.UserSex
  admissionDate: Date | null
  activeState: $Enums.ActiveState
  activeStateReason: string | null
  schoolId: string
  classId: string
  clubId: string | null
  createdAt: Date
  updatedAt: Date
  _count: StudentCountAggregateOutputType | null
  _min: StudentMinAggregateOutputType | null
  _max: StudentMaxAggregateOutputType | null
}

type GetStudentGroupByPayload<T extends StudentGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<StudentGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof StudentGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], StudentGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], StudentGroupByOutputType[P]>
      }
    >
  >



export type StudentWhereInput = {
  AND?: Prisma.StudentWhereInput | Prisma.StudentWhereInput[]
  OR?: Prisma.StudentWhereInput[]
  NOT?: Prisma.StudentWhereInput | Prisma.StudentWhereInput[]
  id?: Prisma.StringFilter<"Student"> | string
  clerkUserId?: Prisma.StringNullableFilter<"Student"> | string | null
  registrationNumber?: Prisma.StringFilter<"Student"> | string
  name?: Prisma.StringFilter<"Student"> | string
  surname?: Prisma.StringFilter<"Student"> | string
  address?: Prisma.StringFilter<"Student"> | string
  img?: Prisma.StringNullableFilter<"Student"> | string | null
  birthday?: Prisma.DateTimeFilter<"Student"> | Date | string
  medicalCondition?: Prisma.StringNullableFilter<"Student"> | string | null
  sex?: Prisma.EnumUserSexFilter<"Student"> | $Enums.UserSex
  admissionDate?: Prisma.DateTimeNullableFilter<"Student"> | Date | string | null
  activeState?: Prisma.EnumActiveStateFilter<"Student"> | $Enums.ActiveState
  activeStateReason?: Prisma.StringNullableFilter<"Student"> | string | null
  schoolId?: Prisma.StringFilter<"Student"> | string
  classId?: Prisma.StringFilter<"Student"> | string
  clubId?: Prisma.StringNullableFilter<"Student"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Student"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Student"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  class?: Prisma.XOR<Prisma.ClassScalarRelationFilter, Prisma.ClassWhereInput>
  club?: Prisma.XOR<Prisma.ClubNullableScalarRelationFilter, Prisma.ClubWhereInput> | null
  parentStudents?: Prisma.ParentStudentListRelationFilter
  results?: Prisma.ResultListRelationFilter
  attendances?: Prisma.StudentAttendanceListRelationFilter
  invoices?: Prisma.InvoiceListRelationFilter
  studentClassHistory?: Prisma.StudentClassHistoryListRelationFilter
  termlyResults?: Prisma.TermlyResultListRelationFilter
}

export type StudentOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  clerkUserId?: Prisma.SortOrderInput | Prisma.SortOrder
  registrationNumber?: Prisma.SortOrder
  name?: Prisma.SortOrder
  surname?: Prisma.SortOrder
  address?: Prisma.SortOrder
  img?: Prisma.SortOrderInput | Prisma.SortOrder
  birthday?: Prisma.SortOrder
  medicalCondition?: Prisma.SortOrderInput | Prisma.SortOrder
  sex?: Prisma.SortOrder
  admissionDate?: Prisma.SortOrderInput | Prisma.SortOrder
  activeState?: Prisma.SortOrder
  activeStateReason?: Prisma.SortOrderInput | Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  clubId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  school?: Prisma.SchoolOrderByWithRelationInput
  class?: Prisma.ClassOrderByWithRelationInput
  club?: Prisma.ClubOrderByWithRelationInput
  parentStudents?: Prisma.ParentStudentOrderByRelationAggregateInput
  results?: Prisma.ResultOrderByRelationAggregateInput
  attendances?: Prisma.StudentAttendanceOrderByRelationAggregateInput
  invoices?: Prisma.InvoiceOrderByRelationAggregateInput
  studentClassHistory?: Prisma.StudentClassHistoryOrderByRelationAggregateInput
  termlyResults?: Prisma.TermlyResultOrderByRelationAggregateInput
}

export type StudentWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  clerkUserId?: string
  registrationNumber?: string
  schoolId_registrationNumber?: Prisma.StudentSchoolIdRegistrationNumberCompoundUniqueInput
  AND?: Prisma.StudentWhereInput | Prisma.StudentWhereInput[]
  OR?: Prisma.StudentWhereInput[]
  NOT?: Prisma.StudentWhereInput | Prisma.StudentWhereInput[]
  name?: Prisma.StringFilter<"Student"> | string
  surname?: Prisma.StringFilter<"Student"> | string
  address?: Prisma.StringFilter<"Student"> | string
  img?: Prisma.StringNullableFilter<"Student"> | string | null
  birthday?: Prisma.DateTimeFilter<"Student"> | Date | string
  medicalCondition?: Prisma.StringNullableFilter<"Student"> | string | null
  sex?: Prisma.EnumUserSexFilter<"Student"> | $Enums.UserSex
  admissionDate?: Prisma.DateTimeNullableFilter<"Student"> | Date | string | null
  activeState?: Prisma.EnumActiveStateFilter<"Student"> | $Enums.ActiveState
  activeStateReason?: Prisma.StringNullableFilter<"Student"> | string | null
  schoolId?: Prisma.StringFilter<"Student"> | string
  classId?: Prisma.StringFilter<"Student"> | string
  clubId?: Prisma.StringNullableFilter<"Student"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Student"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Student"> | Date | string
  school?: Prisma.XOR<Prisma.SchoolScalarRelationFilter, Prisma.SchoolWhereInput>
  class?: Prisma.XOR<Prisma.ClassScalarRelationFilter, Prisma.ClassWhereInput>
  club?: Prisma.XOR<Prisma.ClubNullableScalarRelationFilter, Prisma.ClubWhereInput> | null
  parentStudents?: Prisma.ParentStudentListRelationFilter
  results?: Prisma.ResultListRelationFilter
  attendances?: Prisma.StudentAttendanceListRelationFilter
  invoices?: Prisma.InvoiceListRelationFilter
  studentClassHistory?: Prisma.StudentClassHistoryListRelationFilter
  termlyResults?: Prisma.TermlyResultListRelationFilter
}, "id" | "clerkUserId" | "registrationNumber" | "schoolId_registrationNumber">

export type StudentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  clerkUserId?: Prisma.SortOrderInput | Prisma.SortOrder
  registrationNumber?: Prisma.SortOrder
  name?: Prisma.SortOrder
  surname?: Prisma.SortOrder
  address?: Prisma.SortOrder
  img?: Prisma.SortOrderInput | Prisma.SortOrder
  birthday?: Prisma.SortOrder
  medicalCondition?: Prisma.SortOrderInput | Prisma.SortOrder
  sex?: Prisma.SortOrder
  admissionDate?: Prisma.SortOrderInput | Prisma.SortOrder
  activeState?: Prisma.SortOrder
  activeStateReason?: Prisma.SortOrderInput | Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  clubId?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.StudentCountOrderByAggregateInput
  _max?: Prisma.StudentMaxOrderByAggregateInput
  _min?: Prisma.StudentMinOrderByAggregateInput
}

export type StudentScalarWhereWithAggregatesInput = {
  AND?: Prisma.StudentScalarWhereWithAggregatesInput | Prisma.StudentScalarWhereWithAggregatesInput[]
  OR?: Prisma.StudentScalarWhereWithAggregatesInput[]
  NOT?: Prisma.StudentScalarWhereWithAggregatesInput | Prisma.StudentScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Student"> | string
  clerkUserId?: Prisma.StringNullableWithAggregatesFilter<"Student"> | string | null
  registrationNumber?: Prisma.StringWithAggregatesFilter<"Student"> | string
  name?: Prisma.StringWithAggregatesFilter<"Student"> | string
  surname?: Prisma.StringWithAggregatesFilter<"Student"> | string
  address?: Prisma.StringWithAggregatesFilter<"Student"> | string
  img?: Prisma.StringNullableWithAggregatesFilter<"Student"> | string | null
  birthday?: Prisma.DateTimeWithAggregatesFilter<"Student"> | Date | string
  medicalCondition?: Prisma.StringNullableWithAggregatesFilter<"Student"> | string | null
  sex?: Prisma.EnumUserSexWithAggregatesFilter<"Student"> | $Enums.UserSex
  admissionDate?: Prisma.DateTimeNullableWithAggregatesFilter<"Student"> | Date | string | null
  activeState?: Prisma.EnumActiveStateWithAggregatesFilter<"Student"> | $Enums.ActiveState
  activeStateReason?: Prisma.StringNullableWithAggregatesFilter<"Student"> | string | null
  schoolId?: Prisma.StringWithAggregatesFilter<"Student"> | string
  classId?: Prisma.StringWithAggregatesFilter<"Student"> | string
  clubId?: Prisma.StringNullableWithAggregatesFilter<"Student"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Student"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Student"> | Date | string
}

export type StudentCreateInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput
  class: Prisma.ClassCreateNestedOneWithoutStudentsInput
  club?: Prisma.ClubCreateNestedOneWithoutMembersInput
  parentStudents?: Prisma.ParentStudentCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultCreateNestedManyWithoutStudentInput
}

export type StudentUncheckedCreateInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  classId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  parentStudents?: Prisma.ParentStudentUncheckedCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultUncheckedCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultUncheckedCreateNestedManyWithoutStudentInput
}

export type StudentUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentsNestedInput
  club?: Prisma.ClubUpdateOneWithoutMembersNestedInput
  parentStudents?: Prisma.ParentStudentUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parentStudents?: Prisma.ParentStudentUncheckedUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUncheckedUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUncheckedUpdateManyWithoutStudentNestedInput
}

export type StudentCreateManyInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  classId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentListRelationFilter = {
  every?: Prisma.StudentWhereInput
  some?: Prisma.StudentWhereInput
  none?: Prisma.StudentWhereInput
}

export type StudentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type StudentSchoolIdRegistrationNumberCompoundUniqueInput = {
  schoolId: string
  registrationNumber: string
}

export type StudentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  clerkUserId?: Prisma.SortOrder
  registrationNumber?: Prisma.SortOrder
  name?: Prisma.SortOrder
  surname?: Prisma.SortOrder
  address?: Prisma.SortOrder
  img?: Prisma.SortOrder
  birthday?: Prisma.SortOrder
  medicalCondition?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  admissionDate?: Prisma.SortOrder
  activeState?: Prisma.SortOrder
  activeStateReason?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  clubId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StudentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  clerkUserId?: Prisma.SortOrder
  registrationNumber?: Prisma.SortOrder
  name?: Prisma.SortOrder
  surname?: Prisma.SortOrder
  address?: Prisma.SortOrder
  img?: Prisma.SortOrder
  birthday?: Prisma.SortOrder
  medicalCondition?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  admissionDate?: Prisma.SortOrder
  activeState?: Prisma.SortOrder
  activeStateReason?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  clubId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StudentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  clerkUserId?: Prisma.SortOrder
  registrationNumber?: Prisma.SortOrder
  name?: Prisma.SortOrder
  surname?: Prisma.SortOrder
  address?: Prisma.SortOrder
  img?: Prisma.SortOrder
  birthday?: Prisma.SortOrder
  medicalCondition?: Prisma.SortOrder
  sex?: Prisma.SortOrder
  admissionDate?: Prisma.SortOrder
  activeState?: Prisma.SortOrder
  activeStateReason?: Prisma.SortOrder
  schoolId?: Prisma.SortOrder
  classId?: Prisma.SortOrder
  clubId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type StudentScalarRelationFilter = {
  is?: Prisma.StudentWhereInput
  isNot?: Prisma.StudentWhereInput
}

export type StudentCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutSchoolInput, Prisma.StudentUncheckedCreateWithoutSchoolInput> | Prisma.StudentCreateWithoutSchoolInput[] | Prisma.StudentUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutSchoolInput | Prisma.StudentCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.StudentCreateManySchoolInputEnvelope
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
}

export type StudentUncheckedCreateNestedManyWithoutSchoolInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutSchoolInput, Prisma.StudentUncheckedCreateWithoutSchoolInput> | Prisma.StudentCreateWithoutSchoolInput[] | Prisma.StudentUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutSchoolInput | Prisma.StudentCreateOrConnectWithoutSchoolInput[]
  createMany?: Prisma.StudentCreateManySchoolInputEnvelope
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
}

export type StudentUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutSchoolInput, Prisma.StudentUncheckedCreateWithoutSchoolInput> | Prisma.StudentCreateWithoutSchoolInput[] | Prisma.StudentUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutSchoolInput | Prisma.StudentCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.StudentUpsertWithWhereUniqueWithoutSchoolInput | Prisma.StudentUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.StudentCreateManySchoolInputEnvelope
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  disconnect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  update?: Prisma.StudentUpdateWithWhereUniqueWithoutSchoolInput | Prisma.StudentUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.StudentUpdateManyWithWhereWithoutSchoolInput | Prisma.StudentUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.StudentScalarWhereInput | Prisma.StudentScalarWhereInput[]
}

export type StudentUncheckedUpdateManyWithoutSchoolNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutSchoolInput, Prisma.StudentUncheckedCreateWithoutSchoolInput> | Prisma.StudentCreateWithoutSchoolInput[] | Prisma.StudentUncheckedCreateWithoutSchoolInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutSchoolInput | Prisma.StudentCreateOrConnectWithoutSchoolInput[]
  upsert?: Prisma.StudentUpsertWithWhereUniqueWithoutSchoolInput | Prisma.StudentUpsertWithWhereUniqueWithoutSchoolInput[]
  createMany?: Prisma.StudentCreateManySchoolInputEnvelope
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  disconnect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  update?: Prisma.StudentUpdateWithWhereUniqueWithoutSchoolInput | Prisma.StudentUpdateWithWhereUniqueWithoutSchoolInput[]
  updateMany?: Prisma.StudentUpdateManyWithWhereWithoutSchoolInput | Prisma.StudentUpdateManyWithWhereWithoutSchoolInput[]
  deleteMany?: Prisma.StudentScalarWhereInput | Prisma.StudentScalarWhereInput[]
}

export type StudentCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutClassInput, Prisma.StudentUncheckedCreateWithoutClassInput> | Prisma.StudentCreateWithoutClassInput[] | Prisma.StudentUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClassInput | Prisma.StudentCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.StudentCreateManyClassInputEnvelope
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
}

export type StudentUncheckedCreateNestedManyWithoutClassInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutClassInput, Prisma.StudentUncheckedCreateWithoutClassInput> | Prisma.StudentCreateWithoutClassInput[] | Prisma.StudentUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClassInput | Prisma.StudentCreateOrConnectWithoutClassInput[]
  createMany?: Prisma.StudentCreateManyClassInputEnvelope
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
}

export type StudentUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutClassInput, Prisma.StudentUncheckedCreateWithoutClassInput> | Prisma.StudentCreateWithoutClassInput[] | Prisma.StudentUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClassInput | Prisma.StudentCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.StudentUpsertWithWhereUniqueWithoutClassInput | Prisma.StudentUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.StudentCreateManyClassInputEnvelope
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  disconnect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  update?: Prisma.StudentUpdateWithWhereUniqueWithoutClassInput | Prisma.StudentUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.StudentUpdateManyWithWhereWithoutClassInput | Prisma.StudentUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.StudentScalarWhereInput | Prisma.StudentScalarWhereInput[]
}

export type StudentUncheckedUpdateManyWithoutClassNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutClassInput, Prisma.StudentUncheckedCreateWithoutClassInput> | Prisma.StudentCreateWithoutClassInput[] | Prisma.StudentUncheckedCreateWithoutClassInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClassInput | Prisma.StudentCreateOrConnectWithoutClassInput[]
  upsert?: Prisma.StudentUpsertWithWhereUniqueWithoutClassInput | Prisma.StudentUpsertWithWhereUniqueWithoutClassInput[]
  createMany?: Prisma.StudentCreateManyClassInputEnvelope
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  disconnect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  update?: Prisma.StudentUpdateWithWhereUniqueWithoutClassInput | Prisma.StudentUpdateWithWhereUniqueWithoutClassInput[]
  updateMany?: Prisma.StudentUpdateManyWithWhereWithoutClassInput | Prisma.StudentUpdateManyWithWhereWithoutClassInput[]
  deleteMany?: Prisma.StudentScalarWhereInput | Prisma.StudentScalarWhereInput[]
}

export type EnumUserSexFieldUpdateOperationsInput = {
  set?: $Enums.UserSex
}

export type EnumActiveStateFieldUpdateOperationsInput = {
  set?: $Enums.ActiveState
}

export type StudentCreateNestedOneWithoutParentStudentsInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutParentStudentsInput, Prisma.StudentUncheckedCreateWithoutParentStudentsInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutParentStudentsInput
  connect?: Prisma.StudentWhereUniqueInput
}

export type StudentUpdateOneRequiredWithoutParentStudentsNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutParentStudentsInput, Prisma.StudentUncheckedCreateWithoutParentStudentsInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutParentStudentsInput
  upsert?: Prisma.StudentUpsertWithoutParentStudentsInput
  connect?: Prisma.StudentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StudentUpdateToOneWithWhereWithoutParentStudentsInput, Prisma.StudentUpdateWithoutParentStudentsInput>, Prisma.StudentUncheckedUpdateWithoutParentStudentsInput>
}

export type StudentCreateNestedManyWithoutClubInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutClubInput, Prisma.StudentUncheckedCreateWithoutClubInput> | Prisma.StudentCreateWithoutClubInput[] | Prisma.StudentUncheckedCreateWithoutClubInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClubInput | Prisma.StudentCreateOrConnectWithoutClubInput[]
  createMany?: Prisma.StudentCreateManyClubInputEnvelope
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
}

export type StudentUncheckedCreateNestedManyWithoutClubInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutClubInput, Prisma.StudentUncheckedCreateWithoutClubInput> | Prisma.StudentCreateWithoutClubInput[] | Prisma.StudentUncheckedCreateWithoutClubInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClubInput | Prisma.StudentCreateOrConnectWithoutClubInput[]
  createMany?: Prisma.StudentCreateManyClubInputEnvelope
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
}

export type StudentUpdateManyWithoutClubNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutClubInput, Prisma.StudentUncheckedCreateWithoutClubInput> | Prisma.StudentCreateWithoutClubInput[] | Prisma.StudentUncheckedCreateWithoutClubInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClubInput | Prisma.StudentCreateOrConnectWithoutClubInput[]
  upsert?: Prisma.StudentUpsertWithWhereUniqueWithoutClubInput | Prisma.StudentUpsertWithWhereUniqueWithoutClubInput[]
  createMany?: Prisma.StudentCreateManyClubInputEnvelope
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  disconnect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  update?: Prisma.StudentUpdateWithWhereUniqueWithoutClubInput | Prisma.StudentUpdateWithWhereUniqueWithoutClubInput[]
  updateMany?: Prisma.StudentUpdateManyWithWhereWithoutClubInput | Prisma.StudentUpdateManyWithWhereWithoutClubInput[]
  deleteMany?: Prisma.StudentScalarWhereInput | Prisma.StudentScalarWhereInput[]
}

export type StudentUncheckedUpdateManyWithoutClubNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutClubInput, Prisma.StudentUncheckedCreateWithoutClubInput> | Prisma.StudentCreateWithoutClubInput[] | Prisma.StudentUncheckedCreateWithoutClubInput[]
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutClubInput | Prisma.StudentCreateOrConnectWithoutClubInput[]
  upsert?: Prisma.StudentUpsertWithWhereUniqueWithoutClubInput | Prisma.StudentUpsertWithWhereUniqueWithoutClubInput[]
  createMany?: Prisma.StudentCreateManyClubInputEnvelope
  set?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  disconnect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  delete?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  connect?: Prisma.StudentWhereUniqueInput | Prisma.StudentWhereUniqueInput[]
  update?: Prisma.StudentUpdateWithWhereUniqueWithoutClubInput | Prisma.StudentUpdateWithWhereUniqueWithoutClubInput[]
  updateMany?: Prisma.StudentUpdateManyWithWhereWithoutClubInput | Prisma.StudentUpdateManyWithWhereWithoutClubInput[]
  deleteMany?: Prisma.StudentScalarWhereInput | Prisma.StudentScalarWhereInput[]
}

export type StudentCreateNestedOneWithoutAttendancesInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutAttendancesInput, Prisma.StudentUncheckedCreateWithoutAttendancesInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutAttendancesInput
  connect?: Prisma.StudentWhereUniqueInput
}

export type StudentUpdateOneRequiredWithoutAttendancesNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutAttendancesInput, Prisma.StudentUncheckedCreateWithoutAttendancesInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutAttendancesInput
  upsert?: Prisma.StudentUpsertWithoutAttendancesInput
  connect?: Prisma.StudentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StudentUpdateToOneWithWhereWithoutAttendancesInput, Prisma.StudentUpdateWithoutAttendancesInput>, Prisma.StudentUncheckedUpdateWithoutAttendancesInput>
}

export type StudentCreateNestedOneWithoutResultsInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutResultsInput, Prisma.StudentUncheckedCreateWithoutResultsInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutResultsInput
  connect?: Prisma.StudentWhereUniqueInput
}

export type StudentUpdateOneRequiredWithoutResultsNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutResultsInput, Prisma.StudentUncheckedCreateWithoutResultsInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutResultsInput
  upsert?: Prisma.StudentUpsertWithoutResultsInput
  connect?: Prisma.StudentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StudentUpdateToOneWithWhereWithoutResultsInput, Prisma.StudentUpdateWithoutResultsInput>, Prisma.StudentUncheckedUpdateWithoutResultsInput>
}

export type StudentCreateNestedOneWithoutTermlyResultsInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutTermlyResultsInput, Prisma.StudentUncheckedCreateWithoutTermlyResultsInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutTermlyResultsInput
  connect?: Prisma.StudentWhereUniqueInput
}

export type StudentUpdateOneRequiredWithoutTermlyResultsNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutTermlyResultsInput, Prisma.StudentUncheckedCreateWithoutTermlyResultsInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutTermlyResultsInput
  upsert?: Prisma.StudentUpsertWithoutTermlyResultsInput
  connect?: Prisma.StudentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StudentUpdateToOneWithWhereWithoutTermlyResultsInput, Prisma.StudentUpdateWithoutTermlyResultsInput>, Prisma.StudentUncheckedUpdateWithoutTermlyResultsInput>
}

export type StudentCreateNestedOneWithoutInvoicesInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutInvoicesInput, Prisma.StudentUncheckedCreateWithoutInvoicesInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutInvoicesInput
  connect?: Prisma.StudentWhereUniqueInput
}

export type StudentUpdateOneRequiredWithoutInvoicesNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutInvoicesInput, Prisma.StudentUncheckedCreateWithoutInvoicesInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutInvoicesInput
  upsert?: Prisma.StudentUpsertWithoutInvoicesInput
  connect?: Prisma.StudentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StudentUpdateToOneWithWhereWithoutInvoicesInput, Prisma.StudentUpdateWithoutInvoicesInput>, Prisma.StudentUncheckedUpdateWithoutInvoicesInput>
}

export type StudentCreateNestedOneWithoutStudentClassHistoryInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutStudentClassHistoryInput, Prisma.StudentUncheckedCreateWithoutStudentClassHistoryInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutStudentClassHistoryInput
  connect?: Prisma.StudentWhereUniqueInput
}

export type StudentUpdateOneRequiredWithoutStudentClassHistoryNestedInput = {
  create?: Prisma.XOR<Prisma.StudentCreateWithoutStudentClassHistoryInput, Prisma.StudentUncheckedCreateWithoutStudentClassHistoryInput>
  connectOrCreate?: Prisma.StudentCreateOrConnectWithoutStudentClassHistoryInput
  upsert?: Prisma.StudentUpsertWithoutStudentClassHistoryInput
  connect?: Prisma.StudentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.StudentUpdateToOneWithWhereWithoutStudentClassHistoryInput, Prisma.StudentUpdateWithoutStudentClassHistoryInput>, Prisma.StudentUncheckedUpdateWithoutStudentClassHistoryInput>
}

export type StudentCreateWithoutSchoolInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  class: Prisma.ClassCreateNestedOneWithoutStudentsInput
  club?: Prisma.ClubCreateNestedOneWithoutMembersInput
  parentStudents?: Prisma.ParentStudentCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultCreateNestedManyWithoutStudentInput
}

export type StudentUncheckedCreateWithoutSchoolInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  classId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  parentStudents?: Prisma.ParentStudentUncheckedCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultUncheckedCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultUncheckedCreateNestedManyWithoutStudentInput
}

export type StudentCreateOrConnectWithoutSchoolInput = {
  where: Prisma.StudentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentCreateWithoutSchoolInput, Prisma.StudentUncheckedCreateWithoutSchoolInput>
}

export type StudentCreateManySchoolInputEnvelope = {
  data: Prisma.StudentCreateManySchoolInput | Prisma.StudentCreateManySchoolInput[]
  skipDuplicates?: boolean
}

export type StudentUpsertWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StudentWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentUpdateWithoutSchoolInput, Prisma.StudentUncheckedUpdateWithoutSchoolInput>
  create: Prisma.XOR<Prisma.StudentCreateWithoutSchoolInput, Prisma.StudentUncheckedCreateWithoutSchoolInput>
}

export type StudentUpdateWithWhereUniqueWithoutSchoolInput = {
  where: Prisma.StudentWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentUpdateWithoutSchoolInput, Prisma.StudentUncheckedUpdateWithoutSchoolInput>
}

export type StudentUpdateManyWithWhereWithoutSchoolInput = {
  where: Prisma.StudentScalarWhereInput
  data: Prisma.XOR<Prisma.StudentUpdateManyMutationInput, Prisma.StudentUncheckedUpdateManyWithoutSchoolInput>
}

export type StudentScalarWhereInput = {
  AND?: Prisma.StudentScalarWhereInput | Prisma.StudentScalarWhereInput[]
  OR?: Prisma.StudentScalarWhereInput[]
  NOT?: Prisma.StudentScalarWhereInput | Prisma.StudentScalarWhereInput[]
  id?: Prisma.StringFilter<"Student"> | string
  clerkUserId?: Prisma.StringNullableFilter<"Student"> | string | null
  registrationNumber?: Prisma.StringFilter<"Student"> | string
  name?: Prisma.StringFilter<"Student"> | string
  surname?: Prisma.StringFilter<"Student"> | string
  address?: Prisma.StringFilter<"Student"> | string
  img?: Prisma.StringNullableFilter<"Student"> | string | null
  birthday?: Prisma.DateTimeFilter<"Student"> | Date | string
  medicalCondition?: Prisma.StringNullableFilter<"Student"> | string | null
  sex?: Prisma.EnumUserSexFilter<"Student"> | $Enums.UserSex
  admissionDate?: Prisma.DateTimeNullableFilter<"Student"> | Date | string | null
  activeState?: Prisma.EnumActiveStateFilter<"Student"> | $Enums.ActiveState
  activeStateReason?: Prisma.StringNullableFilter<"Student"> | string | null
  schoolId?: Prisma.StringFilter<"Student"> | string
  classId?: Prisma.StringFilter<"Student"> | string
  clubId?: Prisma.StringNullableFilter<"Student"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Student"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Student"> | Date | string
}

export type StudentCreateWithoutClassInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput
  club?: Prisma.ClubCreateNestedOneWithoutMembersInput
  parentStudents?: Prisma.ParentStudentCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultCreateNestedManyWithoutStudentInput
}

export type StudentUncheckedCreateWithoutClassInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  parentStudents?: Prisma.ParentStudentUncheckedCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultUncheckedCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultUncheckedCreateNestedManyWithoutStudentInput
}

export type StudentCreateOrConnectWithoutClassInput = {
  where: Prisma.StudentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentCreateWithoutClassInput, Prisma.StudentUncheckedCreateWithoutClassInput>
}

export type StudentCreateManyClassInputEnvelope = {
  data: Prisma.StudentCreateManyClassInput | Prisma.StudentCreateManyClassInput[]
  skipDuplicates?: boolean
}

export type StudentUpsertWithWhereUniqueWithoutClassInput = {
  where: Prisma.StudentWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentUpdateWithoutClassInput, Prisma.StudentUncheckedUpdateWithoutClassInput>
  create: Prisma.XOR<Prisma.StudentCreateWithoutClassInput, Prisma.StudentUncheckedCreateWithoutClassInput>
}

export type StudentUpdateWithWhereUniqueWithoutClassInput = {
  where: Prisma.StudentWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentUpdateWithoutClassInput, Prisma.StudentUncheckedUpdateWithoutClassInput>
}

export type StudentUpdateManyWithWhereWithoutClassInput = {
  where: Prisma.StudentScalarWhereInput
  data: Prisma.XOR<Prisma.StudentUpdateManyMutationInput, Prisma.StudentUncheckedUpdateManyWithoutClassInput>
}

export type StudentCreateWithoutParentStudentsInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput
  class: Prisma.ClassCreateNestedOneWithoutStudentsInput
  club?: Prisma.ClubCreateNestedOneWithoutMembersInput
  results?: Prisma.ResultCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultCreateNestedManyWithoutStudentInput
}

export type StudentUncheckedCreateWithoutParentStudentsInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  classId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  results?: Prisma.ResultUncheckedCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultUncheckedCreateNestedManyWithoutStudentInput
}

export type StudentCreateOrConnectWithoutParentStudentsInput = {
  where: Prisma.StudentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentCreateWithoutParentStudentsInput, Prisma.StudentUncheckedCreateWithoutParentStudentsInput>
}

export type StudentUpsertWithoutParentStudentsInput = {
  update: Prisma.XOR<Prisma.StudentUpdateWithoutParentStudentsInput, Prisma.StudentUncheckedUpdateWithoutParentStudentsInput>
  create: Prisma.XOR<Prisma.StudentCreateWithoutParentStudentsInput, Prisma.StudentUncheckedCreateWithoutParentStudentsInput>
  where?: Prisma.StudentWhereInput
}

export type StudentUpdateToOneWithWhereWithoutParentStudentsInput = {
  where?: Prisma.StudentWhereInput
  data: Prisma.XOR<Prisma.StudentUpdateWithoutParentStudentsInput, Prisma.StudentUncheckedUpdateWithoutParentStudentsInput>
}

export type StudentUpdateWithoutParentStudentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentsNestedInput
  club?: Prisma.ClubUpdateOneWithoutMembersNestedInput
  results?: Prisma.ResultUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateWithoutParentStudentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  results?: Prisma.ResultUncheckedUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUncheckedUpdateManyWithoutStudentNestedInput
}

export type StudentCreateWithoutClubInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput
  class: Prisma.ClassCreateNestedOneWithoutStudentsInput
  parentStudents?: Prisma.ParentStudentCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultCreateNestedManyWithoutStudentInput
}

export type StudentUncheckedCreateWithoutClubInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  classId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  parentStudents?: Prisma.ParentStudentUncheckedCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultUncheckedCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultUncheckedCreateNestedManyWithoutStudentInput
}

export type StudentCreateOrConnectWithoutClubInput = {
  where: Prisma.StudentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentCreateWithoutClubInput, Prisma.StudentUncheckedCreateWithoutClubInput>
}

export type StudentCreateManyClubInputEnvelope = {
  data: Prisma.StudentCreateManyClubInput | Prisma.StudentCreateManyClubInput[]
  skipDuplicates?: boolean
}

export type StudentUpsertWithWhereUniqueWithoutClubInput = {
  where: Prisma.StudentWhereUniqueInput
  update: Prisma.XOR<Prisma.StudentUpdateWithoutClubInput, Prisma.StudentUncheckedUpdateWithoutClubInput>
  create: Prisma.XOR<Prisma.StudentCreateWithoutClubInput, Prisma.StudentUncheckedCreateWithoutClubInput>
}

export type StudentUpdateWithWhereUniqueWithoutClubInput = {
  where: Prisma.StudentWhereUniqueInput
  data: Prisma.XOR<Prisma.StudentUpdateWithoutClubInput, Prisma.StudentUncheckedUpdateWithoutClubInput>
}

export type StudentUpdateManyWithWhereWithoutClubInput = {
  where: Prisma.StudentScalarWhereInput
  data: Prisma.XOR<Prisma.StudentUpdateManyMutationInput, Prisma.StudentUncheckedUpdateManyWithoutClubInput>
}

export type StudentCreateWithoutAttendancesInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput
  class: Prisma.ClassCreateNestedOneWithoutStudentsInput
  club?: Prisma.ClubCreateNestedOneWithoutMembersInput
  parentStudents?: Prisma.ParentStudentCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultCreateNestedManyWithoutStudentInput
}

export type StudentUncheckedCreateWithoutAttendancesInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  classId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  parentStudents?: Prisma.ParentStudentUncheckedCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultUncheckedCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultUncheckedCreateNestedManyWithoutStudentInput
}

export type StudentCreateOrConnectWithoutAttendancesInput = {
  where: Prisma.StudentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentCreateWithoutAttendancesInput, Prisma.StudentUncheckedCreateWithoutAttendancesInput>
}

export type StudentUpsertWithoutAttendancesInput = {
  update: Prisma.XOR<Prisma.StudentUpdateWithoutAttendancesInput, Prisma.StudentUncheckedUpdateWithoutAttendancesInput>
  create: Prisma.XOR<Prisma.StudentCreateWithoutAttendancesInput, Prisma.StudentUncheckedCreateWithoutAttendancesInput>
  where?: Prisma.StudentWhereInput
}

export type StudentUpdateToOneWithWhereWithoutAttendancesInput = {
  where?: Prisma.StudentWhereInput
  data: Prisma.XOR<Prisma.StudentUpdateWithoutAttendancesInput, Prisma.StudentUncheckedUpdateWithoutAttendancesInput>
}

export type StudentUpdateWithoutAttendancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentsNestedInput
  club?: Prisma.ClubUpdateOneWithoutMembersNestedInput
  parentStudents?: Prisma.ParentStudentUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateWithoutAttendancesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parentStudents?: Prisma.ParentStudentUncheckedUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUncheckedUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUncheckedUpdateManyWithoutStudentNestedInput
}

export type StudentCreateWithoutResultsInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput
  class: Prisma.ClassCreateNestedOneWithoutStudentsInput
  club?: Prisma.ClubCreateNestedOneWithoutMembersInput
  parentStudents?: Prisma.ParentStudentCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultCreateNestedManyWithoutStudentInput
}

export type StudentUncheckedCreateWithoutResultsInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  classId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  parentStudents?: Prisma.ParentStudentUncheckedCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultUncheckedCreateNestedManyWithoutStudentInput
}

export type StudentCreateOrConnectWithoutResultsInput = {
  where: Prisma.StudentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentCreateWithoutResultsInput, Prisma.StudentUncheckedCreateWithoutResultsInput>
}

export type StudentUpsertWithoutResultsInput = {
  update: Prisma.XOR<Prisma.StudentUpdateWithoutResultsInput, Prisma.StudentUncheckedUpdateWithoutResultsInput>
  create: Prisma.XOR<Prisma.StudentCreateWithoutResultsInput, Prisma.StudentUncheckedCreateWithoutResultsInput>
  where?: Prisma.StudentWhereInput
}

export type StudentUpdateToOneWithWhereWithoutResultsInput = {
  where?: Prisma.StudentWhereInput
  data: Prisma.XOR<Prisma.StudentUpdateWithoutResultsInput, Prisma.StudentUncheckedUpdateWithoutResultsInput>
}

export type StudentUpdateWithoutResultsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentsNestedInput
  club?: Prisma.ClubUpdateOneWithoutMembersNestedInput
  parentStudents?: Prisma.ParentStudentUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateWithoutResultsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parentStudents?: Prisma.ParentStudentUncheckedUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUncheckedUpdateManyWithoutStudentNestedInput
}

export type StudentCreateWithoutTermlyResultsInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput
  class: Prisma.ClassCreateNestedOneWithoutStudentsInput
  club?: Prisma.ClubCreateNestedOneWithoutMembersInput
  parentStudents?: Prisma.ParentStudentCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutStudentInput
}

export type StudentUncheckedCreateWithoutTermlyResultsInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  classId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  parentStudents?: Prisma.ParentStudentUncheckedCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultUncheckedCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutStudentInput
}

export type StudentCreateOrConnectWithoutTermlyResultsInput = {
  where: Prisma.StudentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentCreateWithoutTermlyResultsInput, Prisma.StudentUncheckedCreateWithoutTermlyResultsInput>
}

export type StudentUpsertWithoutTermlyResultsInput = {
  update: Prisma.XOR<Prisma.StudentUpdateWithoutTermlyResultsInput, Prisma.StudentUncheckedUpdateWithoutTermlyResultsInput>
  create: Prisma.XOR<Prisma.StudentCreateWithoutTermlyResultsInput, Prisma.StudentUncheckedCreateWithoutTermlyResultsInput>
  where?: Prisma.StudentWhereInput
}

export type StudentUpdateToOneWithWhereWithoutTermlyResultsInput = {
  where?: Prisma.StudentWhereInput
  data: Prisma.XOR<Prisma.StudentUpdateWithoutTermlyResultsInput, Prisma.StudentUncheckedUpdateWithoutTermlyResultsInput>
}

export type StudentUpdateWithoutTermlyResultsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentsNestedInput
  club?: Prisma.ClubUpdateOneWithoutMembersNestedInput
  parentStudents?: Prisma.ParentStudentUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateWithoutTermlyResultsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parentStudents?: Prisma.ParentStudentUncheckedUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUncheckedUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutStudentNestedInput
}

export type StudentCreateWithoutInvoicesInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput
  class: Prisma.ClassCreateNestedOneWithoutStudentsInput
  club?: Prisma.ClubCreateNestedOneWithoutMembersInput
  parentStudents?: Prisma.ParentStudentCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultCreateNestedManyWithoutStudentInput
}

export type StudentUncheckedCreateWithoutInvoicesInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  classId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  parentStudents?: Prisma.ParentStudentUncheckedCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultUncheckedCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutStudentInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultUncheckedCreateNestedManyWithoutStudentInput
}

export type StudentCreateOrConnectWithoutInvoicesInput = {
  where: Prisma.StudentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentCreateWithoutInvoicesInput, Prisma.StudentUncheckedCreateWithoutInvoicesInput>
}

export type StudentUpsertWithoutInvoicesInput = {
  update: Prisma.XOR<Prisma.StudentUpdateWithoutInvoicesInput, Prisma.StudentUncheckedUpdateWithoutInvoicesInput>
  create: Prisma.XOR<Prisma.StudentCreateWithoutInvoicesInput, Prisma.StudentUncheckedCreateWithoutInvoicesInput>
  where?: Prisma.StudentWhereInput
}

export type StudentUpdateToOneWithWhereWithoutInvoicesInput = {
  where?: Prisma.StudentWhereInput
  data: Prisma.XOR<Prisma.StudentUpdateWithoutInvoicesInput, Prisma.StudentUncheckedUpdateWithoutInvoicesInput>
}

export type StudentUpdateWithoutInvoicesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentsNestedInput
  club?: Prisma.ClubUpdateOneWithoutMembersNestedInput
  parentStudents?: Prisma.ParentStudentUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateWithoutInvoicesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parentStudents?: Prisma.ParentStudentUncheckedUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUncheckedUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUncheckedUpdateManyWithoutStudentNestedInput
}

export type StudentCreateWithoutStudentClassHistoryInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  school: Prisma.SchoolCreateNestedOneWithoutStudentsInput
  class: Prisma.ClassCreateNestedOneWithoutStudentsInput
  club?: Prisma.ClubCreateNestedOneWithoutMembersInput
  parentStudents?: Prisma.ParentStudentCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultCreateNestedManyWithoutStudentInput
}

export type StudentUncheckedCreateWithoutStudentClassHistoryInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  classId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  parentStudents?: Prisma.ParentStudentUncheckedCreateNestedManyWithoutStudentInput
  results?: Prisma.ResultUncheckedCreateNestedManyWithoutStudentInput
  attendances?: Prisma.StudentAttendanceUncheckedCreateNestedManyWithoutStudentInput
  invoices?: Prisma.InvoiceUncheckedCreateNestedManyWithoutStudentInput
  termlyResults?: Prisma.TermlyResultUncheckedCreateNestedManyWithoutStudentInput
}

export type StudentCreateOrConnectWithoutStudentClassHistoryInput = {
  where: Prisma.StudentWhereUniqueInput
  create: Prisma.XOR<Prisma.StudentCreateWithoutStudentClassHistoryInput, Prisma.StudentUncheckedCreateWithoutStudentClassHistoryInput>
}

export type StudentUpsertWithoutStudentClassHistoryInput = {
  update: Prisma.XOR<Prisma.StudentUpdateWithoutStudentClassHistoryInput, Prisma.StudentUncheckedUpdateWithoutStudentClassHistoryInput>
  create: Prisma.XOR<Prisma.StudentCreateWithoutStudentClassHistoryInput, Prisma.StudentUncheckedCreateWithoutStudentClassHistoryInput>
  where?: Prisma.StudentWhereInput
}

export type StudentUpdateToOneWithWhereWithoutStudentClassHistoryInput = {
  where?: Prisma.StudentWhereInput
  data: Prisma.XOR<Prisma.StudentUpdateWithoutStudentClassHistoryInput, Prisma.StudentUncheckedUpdateWithoutStudentClassHistoryInput>
}

export type StudentUpdateWithoutStudentClassHistoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentsNestedInput
  club?: Prisma.ClubUpdateOneWithoutMembersNestedInput
  parentStudents?: Prisma.ParentStudentUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateWithoutStudentClassHistoryInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parentStudents?: Prisma.ParentStudentUncheckedUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUncheckedUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUncheckedUpdateManyWithoutStudentNestedInput
}

export type StudentCreateManySchoolInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  classId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentsNestedInput
  club?: Prisma.ClubUpdateOneWithoutMembersNestedInput
  parentStudents?: Prisma.ParentStudentUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parentStudents?: Prisma.ParentStudentUncheckedUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUncheckedUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUncheckedUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateManyWithoutSchoolInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentCreateManyClassInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  clubId?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput
  club?: Prisma.ClubUpdateOneWithoutMembersNestedInput
  parentStudents?: Prisma.ParentStudentUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parentStudents?: Prisma.ParentStudentUncheckedUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUncheckedUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUncheckedUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateManyWithoutClassInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  clubId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type StudentCreateManyClubInput = {
  id?: string
  clerkUserId?: string | null
  registrationNumber: string
  name: string
  surname: string
  address: string
  img?: string | null
  birthday: Date | string
  medicalCondition?: string | null
  sex: $Enums.UserSex
  admissionDate?: Date | string | null
  activeState?: $Enums.ActiveState
  activeStateReason?: string | null
  schoolId: string
  classId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StudentUpdateWithoutClubInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  school?: Prisma.SchoolUpdateOneRequiredWithoutStudentsNestedInput
  class?: Prisma.ClassUpdateOneRequiredWithoutStudentsNestedInput
  parentStudents?: Prisma.ParentStudentUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateWithoutClubInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  parentStudents?: Prisma.ParentStudentUncheckedUpdateManyWithoutStudentNestedInput
  results?: Prisma.ResultUncheckedUpdateManyWithoutStudentNestedInput
  attendances?: Prisma.StudentAttendanceUncheckedUpdateManyWithoutStudentNestedInput
  invoices?: Prisma.InvoiceUncheckedUpdateManyWithoutStudentNestedInput
  studentClassHistory?: Prisma.StudentClassHistoryUncheckedUpdateManyWithoutStudentNestedInput
  termlyResults?: Prisma.TermlyResultUncheckedUpdateManyWithoutStudentNestedInput
}

export type StudentUncheckedUpdateManyWithoutClubInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  clerkUserId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  registrationNumber?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  surname?: Prisma.StringFieldUpdateOperationsInput | string
  address?: Prisma.StringFieldUpdateOperationsInput | string
  img?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  birthday?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  medicalCondition?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sex?: Prisma.EnumUserSexFieldUpdateOperationsInput | $Enums.UserSex
  admissionDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  activeState?: Prisma.EnumActiveStateFieldUpdateOperationsInput | $Enums.ActiveState
  activeStateReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  schoolId?: Prisma.StringFieldUpdateOperationsInput | string
  classId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type StudentCountOutputType
 */

export type StudentCountOutputType = {
  parentStudents: number
  results: number
  attendances: number
  invoices: number
  studentClassHistory: number
  termlyResults: number
}

export type StudentCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  parentStudents?: boolean | StudentCountOutputTypeCountParentStudentsArgs
  results?: boolean | StudentCountOutputTypeCountResultsArgs
  attendances?: boolean | StudentCountOutputTypeCountAttendancesArgs
  invoices?: boolean | StudentCountOutputTypeCountInvoicesArgs
  studentClassHistory?: boolean | StudentCountOutputTypeCountStudentClassHistoryArgs
  termlyResults?: boolean | StudentCountOutputTypeCountTermlyResultsArgs
}

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentCountOutputType
   */
  select?: Prisma.StudentCountOutputTypeSelect<ExtArgs> | null
}

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountParentStudentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ParentStudentWhereInput
}

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountResultsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ResultWhereInput
}

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountAttendancesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentAttendanceWhereInput
}

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountInvoicesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.InvoiceWhereInput
}

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountStudentClassHistoryArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.StudentClassHistoryWhereInput
}

/**
 * StudentCountOutputType without action
 */
export type StudentCountOutputTypeCountTermlyResultsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TermlyResultWhereInput
}


export type StudentSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  clerkUserId?: boolean
  registrationNumber?: boolean
  name?: boolean
  surname?: boolean
  address?: boolean
  img?: boolean
  birthday?: boolean
  medicalCondition?: boolean
  sex?: boolean
  admissionDate?: boolean
  activeState?: boolean
  activeStateReason?: boolean
  schoolId?: boolean
  classId?: boolean
  clubId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  club?: boolean | Prisma.Student$clubArgs<ExtArgs>
  parentStudents?: boolean | Prisma.Student$parentStudentsArgs<ExtArgs>
  results?: boolean | Prisma.Student$resultsArgs<ExtArgs>
  attendances?: boolean | Prisma.Student$attendancesArgs<ExtArgs>
  invoices?: boolean | Prisma.Student$invoicesArgs<ExtArgs>
  studentClassHistory?: boolean | Prisma.Student$studentClassHistoryArgs<ExtArgs>
  termlyResults?: boolean | Prisma.Student$termlyResultsArgs<ExtArgs>
  _count?: boolean | Prisma.StudentCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["student"]>

export type StudentSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  clerkUserId?: boolean
  registrationNumber?: boolean
  name?: boolean
  surname?: boolean
  address?: boolean
  img?: boolean
  birthday?: boolean
  medicalCondition?: boolean
  sex?: boolean
  admissionDate?: boolean
  activeState?: boolean
  activeStateReason?: boolean
  schoolId?: boolean
  classId?: boolean
  clubId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  club?: boolean | Prisma.Student$clubArgs<ExtArgs>
}, ExtArgs["result"]["student"]>

export type StudentSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  clerkUserId?: boolean
  registrationNumber?: boolean
  name?: boolean
  surname?: boolean
  address?: boolean
  img?: boolean
  birthday?: boolean
  medicalCondition?: boolean
  sex?: boolean
  admissionDate?: boolean
  activeState?: boolean
  activeStateReason?: boolean
  schoolId?: boolean
  classId?: boolean
  clubId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  club?: boolean | Prisma.Student$clubArgs<ExtArgs>
}, ExtArgs["result"]["student"]>

export type StudentSelectScalar = {
  id?: boolean
  clerkUserId?: boolean
  registrationNumber?: boolean
  name?: boolean
  surname?: boolean
  address?: boolean
  img?: boolean
  birthday?: boolean
  medicalCondition?: boolean
  sex?: boolean
  admissionDate?: boolean
  activeState?: boolean
  activeStateReason?: boolean
  schoolId?: boolean
  classId?: boolean
  clubId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type StudentOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "clerkUserId" | "registrationNumber" | "name" | "surname" | "address" | "img" | "birthday" | "medicalCondition" | "sex" | "admissionDate" | "activeState" | "activeStateReason" | "schoolId" | "classId" | "clubId" | "createdAt" | "updatedAt", ExtArgs["result"]["student"]>
export type StudentInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  club?: boolean | Prisma.Student$clubArgs<ExtArgs>
  parentStudents?: boolean | Prisma.Student$parentStudentsArgs<ExtArgs>
  results?: boolean | Prisma.Student$resultsArgs<ExtArgs>
  attendances?: boolean | Prisma.Student$attendancesArgs<ExtArgs>
  invoices?: boolean | Prisma.Student$invoicesArgs<ExtArgs>
  studentClassHistory?: boolean | Prisma.Student$studentClassHistoryArgs<ExtArgs>
  termlyResults?: boolean | Prisma.Student$termlyResultsArgs<ExtArgs>
  _count?: boolean | Prisma.StudentCountOutputTypeDefaultArgs<ExtArgs>
}
export type StudentIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  club?: boolean | Prisma.Student$clubArgs<ExtArgs>
}
export type StudentIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  school?: boolean | Prisma.SchoolDefaultArgs<ExtArgs>
  class?: boolean | Prisma.ClassDefaultArgs<ExtArgs>
  club?: boolean | Prisma.Student$clubArgs<ExtArgs>
}

export type $StudentPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Student"
  objects: {
    school: Prisma.$SchoolPayload<ExtArgs>
    class: Prisma.$ClassPayload<ExtArgs>
    club: Prisma.$ClubPayload<ExtArgs> | null
    parentStudents: Prisma.$ParentStudentPayload<ExtArgs>[]
    results: Prisma.$ResultPayload<ExtArgs>[]
    attendances: Prisma.$StudentAttendancePayload<ExtArgs>[]
    invoices: Prisma.$InvoicePayload<ExtArgs>[]
    studentClassHistory: Prisma.$StudentClassHistoryPayload<ExtArgs>[]
    termlyResults: Prisma.$TermlyResultPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    clerkUserId: string | null
    registrationNumber: string
    name: string
    surname: string
    address: string
    img: string | null
    birthday: Date
    medicalCondition: string | null
    sex: $Enums.UserSex
    admissionDate: Date | null
    activeState: $Enums.ActiveState
    activeStateReason: string | null
    schoolId: string
    classId: string
    clubId: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["student"]>
  composites: {}
}

export type StudentGetPayload<S extends boolean | null | undefined | StudentDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$StudentPayload, S>

export type StudentCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<StudentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: StudentCountAggregateInputType | true
  }

export interface StudentDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Student'], meta: { name: 'Student' } }
  /**
   * Find zero or one Student that matches the filter.
   * @param {StudentFindUniqueArgs} args - Arguments to find a Student
   * @example
   * // Get one Student
   * const student = await prisma.student.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends StudentFindUniqueArgs>(args: Prisma.SelectSubset<T, StudentFindUniqueArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Student that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {StudentFindUniqueOrThrowArgs} args - Arguments to find a Student
   * @example
   * // Get one Student
   * const student = await prisma.student.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends StudentFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, StudentFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Student that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentFindFirstArgs} args - Arguments to find a Student
   * @example
   * // Get one Student
   * const student = await prisma.student.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends StudentFindFirstArgs>(args?: Prisma.SelectSubset<T, StudentFindFirstArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Student that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentFindFirstOrThrowArgs} args - Arguments to find a Student
   * @example
   * // Get one Student
   * const student = await prisma.student.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends StudentFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, StudentFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Students that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Students
   * const students = await prisma.student.findMany()
   * 
   * // Get first 10 Students
   * const students = await prisma.student.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const studentWithIdOnly = await prisma.student.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends StudentFindManyArgs>(args?: Prisma.SelectSubset<T, StudentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Student.
   * @param {StudentCreateArgs} args - Arguments to create a Student.
   * @example
   * // Create one Student
   * const Student = await prisma.student.create({
   *   data: {
   *     // ... data to create a Student
   *   }
   * })
   * 
   */
  create<T extends StudentCreateArgs>(args: Prisma.SelectSubset<T, StudentCreateArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Students.
   * @param {StudentCreateManyArgs} args - Arguments to create many Students.
   * @example
   * // Create many Students
   * const student = await prisma.student.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends StudentCreateManyArgs>(args?: Prisma.SelectSubset<T, StudentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Students and returns the data saved in the database.
   * @param {StudentCreateManyAndReturnArgs} args - Arguments to create many Students.
   * @example
   * // Create many Students
   * const student = await prisma.student.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Students and only return the `id`
   * const studentWithIdOnly = await prisma.student.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends StudentCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, StudentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Student.
   * @param {StudentDeleteArgs} args - Arguments to delete one Student.
   * @example
   * // Delete one Student
   * const Student = await prisma.student.delete({
   *   where: {
   *     // ... filter to delete one Student
   *   }
   * })
   * 
   */
  delete<T extends StudentDeleteArgs>(args: Prisma.SelectSubset<T, StudentDeleteArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Student.
   * @param {StudentUpdateArgs} args - Arguments to update one Student.
   * @example
   * // Update one Student
   * const student = await prisma.student.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends StudentUpdateArgs>(args: Prisma.SelectSubset<T, StudentUpdateArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Students.
   * @param {StudentDeleteManyArgs} args - Arguments to filter Students to delete.
   * @example
   * // Delete a few Students
   * const { count } = await prisma.student.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends StudentDeleteManyArgs>(args?: Prisma.SelectSubset<T, StudentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Students.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Students
   * const student = await prisma.student.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends StudentUpdateManyArgs>(args: Prisma.SelectSubset<T, StudentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Students and returns the data updated in the database.
   * @param {StudentUpdateManyAndReturnArgs} args - Arguments to update many Students.
   * @example
   * // Update many Students
   * const student = await prisma.student.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Students and only return the `id`
   * const studentWithIdOnly = await prisma.student.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends StudentUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, StudentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Student.
   * @param {StudentUpsertArgs} args - Arguments to update or create a Student.
   * @example
   * // Update or create a Student
   * const student = await prisma.student.upsert({
   *   create: {
   *     // ... data to create a Student
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Student we want to update
   *   }
   * })
   */
  upsert<T extends StudentUpsertArgs>(args: Prisma.SelectSubset<T, StudentUpsertArgs<ExtArgs>>): Prisma.Prisma__StudentClient<runtime.Types.Result.GetResult<Prisma.$StudentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Students.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentCountArgs} args - Arguments to filter Students to count.
   * @example
   * // Count the number of Students
   * const count = await prisma.student.count({
   *   where: {
   *     // ... the filter for the Students we want to count
   *   }
   * })
  **/
  count<T extends StudentCountArgs>(
    args?: Prisma.Subset<T, StudentCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], StudentCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Student.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends StudentAggregateArgs>(args: Prisma.Subset<T, StudentAggregateArgs>): Prisma.PrismaPromise<GetStudentAggregateType<T>>

  /**
   * Group by Student.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StudentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends StudentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: StudentGroupByArgs['orderBy'] }
      : { orderBy?: StudentGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, StudentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Student model
 */
readonly fields: StudentFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Student.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__StudentClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  school<T extends Prisma.SchoolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SchoolDefaultArgs<ExtArgs>>): Prisma.Prisma__SchoolClient<runtime.Types.Result.GetResult<Prisma.$SchoolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  class<T extends Prisma.ClassDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ClassDefaultArgs<ExtArgs>>): Prisma.Prisma__ClassClient<runtime.Types.Result.GetResult<Prisma.$ClassPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  club<T extends Prisma.Student$clubArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Student$clubArgs<ExtArgs>>): Prisma.Prisma__ClubClient<runtime.Types.Result.GetResult<Prisma.$ClubPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  parentStudents<T extends Prisma.Student$parentStudentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Student$parentStudentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ParentStudentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  results<T extends Prisma.Student$resultsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Student$resultsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ResultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  attendances<T extends Prisma.Student$attendancesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Student$attendancesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentAttendancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  invoices<T extends Prisma.Student$invoicesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Student$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  studentClassHistory<T extends Prisma.Student$studentClassHistoryArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Student$studentClassHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$StudentClassHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  termlyResults<T extends Prisma.Student$termlyResultsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Student$termlyResultsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TermlyResultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Student model
 */
export interface StudentFieldRefs {
  readonly id: Prisma.FieldRef<"Student", 'String'>
  readonly clerkUserId: Prisma.FieldRef<"Student", 'String'>
  readonly registrationNumber: Prisma.FieldRef<"Student", 'String'>
  readonly name: Prisma.FieldRef<"Student", 'String'>
  readonly surname: Prisma.FieldRef<"Student", 'String'>
  readonly address: Prisma.FieldRef<"Student", 'String'>
  readonly img: Prisma.FieldRef<"Student", 'String'>
  readonly birthday: Prisma.FieldRef<"Student", 'DateTime'>
  readonly medicalCondition: Prisma.FieldRef<"Student", 'String'>
  readonly sex: Prisma.FieldRef<"Student", 'UserSex'>
  readonly admissionDate: Prisma.FieldRef<"Student", 'DateTime'>
  readonly activeState: Prisma.FieldRef<"Student", 'ActiveState'>
  readonly activeStateReason: Prisma.FieldRef<"Student", 'String'>
  readonly schoolId: Prisma.FieldRef<"Student", 'String'>
  readonly classId: Prisma.FieldRef<"Student", 'String'>
  readonly clubId: Prisma.FieldRef<"Student", 'String'>
  readonly createdAt: Prisma.FieldRef<"Student", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Student", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Student findUnique
 */
export type StudentFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  /**
   * Filter, which Student to fetch.
   */
  where: Prisma.StudentWhereUniqueInput
}

/**
 * Student findUniqueOrThrow
 */
export type StudentFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  /**
   * Filter, which Student to fetch.
   */
  where: Prisma.StudentWhereUniqueInput
}

/**
 * Student findFirst
 */
export type StudentFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  /**
   * Filter, which Student to fetch.
   */
  where?: Prisma.StudentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Students to fetch.
   */
  orderBy?: Prisma.StudentOrderByWithRelationInput | Prisma.StudentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Students.
   */
  cursor?: Prisma.StudentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Students from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Students.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Students.
   */
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[]
}

/**
 * Student findFirstOrThrow
 */
export type StudentFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  /**
   * Filter, which Student to fetch.
   */
  where?: Prisma.StudentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Students to fetch.
   */
  orderBy?: Prisma.StudentOrderByWithRelationInput | Prisma.StudentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Students.
   */
  cursor?: Prisma.StudentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Students from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Students.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Students.
   */
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[]
}

/**
 * Student findMany
 */
export type StudentFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  /**
   * Filter, which Students to fetch.
   */
  where?: Prisma.StudentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Students to fetch.
   */
  orderBy?: Prisma.StudentOrderByWithRelationInput | Prisma.StudentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Students.
   */
  cursor?: Prisma.StudentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Students from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Students.
   */
  skip?: number
  distinct?: Prisma.StudentScalarFieldEnum | Prisma.StudentScalarFieldEnum[]
}

/**
 * Student create
 */
export type StudentCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  /**
   * The data needed to create a Student.
   */
  data: Prisma.XOR<Prisma.StudentCreateInput, Prisma.StudentUncheckedCreateInput>
}

/**
 * Student createMany
 */
export type StudentCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Students.
   */
  data: Prisma.StudentCreateManyInput | Prisma.StudentCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Student createManyAndReturn
 */
export type StudentCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * The data used to create many Students.
   */
  data: Prisma.StudentCreateManyInput | Prisma.StudentCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Student update
 */
export type StudentUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  /**
   * The data needed to update a Student.
   */
  data: Prisma.XOR<Prisma.StudentUpdateInput, Prisma.StudentUncheckedUpdateInput>
  /**
   * Choose, which Student to update.
   */
  where: Prisma.StudentWhereUniqueInput
}

/**
 * Student updateMany
 */
export type StudentUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Students.
   */
  data: Prisma.XOR<Prisma.StudentUpdateManyMutationInput, Prisma.StudentUncheckedUpdateManyInput>
  /**
   * Filter which Students to update
   */
  where?: Prisma.StudentWhereInput
  /**
   * Limit how many Students to update.
   */
  limit?: number
}

/**
 * Student updateManyAndReturn
 */
export type StudentUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * The data used to update Students.
   */
  data: Prisma.XOR<Prisma.StudentUpdateManyMutationInput, Prisma.StudentUncheckedUpdateManyInput>
  /**
   * Filter which Students to update
   */
  where?: Prisma.StudentWhereInput
  /**
   * Limit how many Students to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Student upsert
 */
export type StudentUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  /**
   * The filter to search for the Student to update in case it exists.
   */
  where: Prisma.StudentWhereUniqueInput
  /**
   * In case the Student found by the `where` argument doesn't exist, create a new Student with this data.
   */
  create: Prisma.XOR<Prisma.StudentCreateInput, Prisma.StudentUncheckedCreateInput>
  /**
   * In case the Student was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.StudentUpdateInput, Prisma.StudentUncheckedUpdateInput>
}

/**
 * Student delete
 */
export type StudentDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
  /**
   * Filter which Student to delete.
   */
  where: Prisma.StudentWhereUniqueInput
}

/**
 * Student deleteMany
 */
export type StudentDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Students to delete
   */
  where?: Prisma.StudentWhereInput
  /**
   * Limit how many Students to delete.
   */
  limit?: number
}

/**
 * Student.club
 */
export type Student$clubArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Club
   */
  select?: Prisma.ClubSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Club
   */
  omit?: Prisma.ClubOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClubInclude<ExtArgs> | null
  where?: Prisma.ClubWhereInput
}

/**
 * Student.parentStudents
 */
export type Student$parentStudentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParentStudent
   */
  select?: Prisma.ParentStudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParentStudent
   */
  omit?: Prisma.ParentStudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParentStudentInclude<ExtArgs> | null
  where?: Prisma.ParentStudentWhereInput
  orderBy?: Prisma.ParentStudentOrderByWithRelationInput | Prisma.ParentStudentOrderByWithRelationInput[]
  cursor?: Prisma.ParentStudentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ParentStudentScalarFieldEnum | Prisma.ParentStudentScalarFieldEnum[]
}

/**
 * Student.results
 */
export type Student$resultsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Result
   */
  select?: Prisma.ResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Result
   */
  omit?: Prisma.ResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ResultInclude<ExtArgs> | null
  where?: Prisma.ResultWhereInput
  orderBy?: Prisma.ResultOrderByWithRelationInput | Prisma.ResultOrderByWithRelationInput[]
  cursor?: Prisma.ResultWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ResultScalarFieldEnum | Prisma.ResultScalarFieldEnum[]
}

/**
 * Student.attendances
 */
export type Student$attendancesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentAttendance
   */
  select?: Prisma.StudentAttendanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentAttendance
   */
  omit?: Prisma.StudentAttendanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentAttendanceInclude<ExtArgs> | null
  where?: Prisma.StudentAttendanceWhereInput
  orderBy?: Prisma.StudentAttendanceOrderByWithRelationInput | Prisma.StudentAttendanceOrderByWithRelationInput[]
  cursor?: Prisma.StudentAttendanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StudentAttendanceScalarFieldEnum | Prisma.StudentAttendanceScalarFieldEnum[]
}

/**
 * Student.invoices
 */
export type Student$invoicesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Invoice
   */
  select?: Prisma.InvoiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Invoice
   */
  omit?: Prisma.InvoiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InvoiceInclude<ExtArgs> | null
  where?: Prisma.InvoiceWhereInput
  orderBy?: Prisma.InvoiceOrderByWithRelationInput | Prisma.InvoiceOrderByWithRelationInput[]
  cursor?: Prisma.InvoiceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.InvoiceScalarFieldEnum | Prisma.InvoiceScalarFieldEnum[]
}

/**
 * Student.studentClassHistory
 */
export type Student$studentClassHistoryArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StudentClassHistory
   */
  select?: Prisma.StudentClassHistorySelect<ExtArgs> | null
  /**
   * Omit specific fields from the StudentClassHistory
   */
  omit?: Prisma.StudentClassHistoryOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentClassHistoryInclude<ExtArgs> | null
  where?: Prisma.StudentClassHistoryWhereInput
  orderBy?: Prisma.StudentClassHistoryOrderByWithRelationInput | Prisma.StudentClassHistoryOrderByWithRelationInput[]
  cursor?: Prisma.StudentClassHistoryWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.StudentClassHistoryScalarFieldEnum | Prisma.StudentClassHistoryScalarFieldEnum[]
}

/**
 * Student.termlyResults
 */
export type Student$termlyResultsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TermlyResult
   */
  select?: Prisma.TermlyResultSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TermlyResult
   */
  omit?: Prisma.TermlyResultOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TermlyResultInclude<ExtArgs> | null
  where?: Prisma.TermlyResultWhereInput
  orderBy?: Prisma.TermlyResultOrderByWithRelationInput | Prisma.TermlyResultOrderByWithRelationInput[]
  cursor?: Prisma.TermlyResultWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TermlyResultScalarFieldEnum | Prisma.TermlyResultScalarFieldEnum[]
}

/**
 * Student without action
 */
export type StudentDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Student
   */
  select?: Prisma.StudentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Student
   */
  omit?: Prisma.StudentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.StudentInclude<ExtArgs> | null
}
